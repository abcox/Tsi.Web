/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
//using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using Tsi.Web.Client;
using Tsi.Web.Api;
using Tsi.Web.Model;

namespace Tsi.Web.Test
{
    /// <summary>
    ///  Class for testing AccountsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class AccountsApiTests
    {
        private AccountsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new AccountsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AccountsApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AccountsApi
            //Assert.IsInstanceOfType(typeof(AccountsApi), instance, "instance is a AccountsApi");
        }

        
        /// <summary>
        /// Test AccountsAdvancedSearch
        /// </summary>
        [TestMethod]
        public void AccountsAdvancedSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebAdvancedSearchRequest request = null;
            //var response = instance.AccountsAdvancedSearch(request);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsCreateAccount
        /// </summary>
        [TestMethod]
        public void AccountsCreateAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCreateAccountModel model = null;
            //var response = instance.AccountsCreateAccount(model);
            //Assert.IsInstanceOf<TsiWebAccountResponse> (response, "response is TsiWebAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsCreateAccountDocument
        /// </summary>
        [TestMethod]
        public void AccountsCreateAccountDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsCreateAccountDocument(accountNumber);
            //Assert.IsInstanceOf<TsiWebDocumentResponse> (response, "response is TsiWebDocumentResponse");
        }
        
        /// <summary>
        /// Test AccountsCreateAccountExternalProduct
        /// </summary>
        [TestMethod]
        public void AccountsCreateAccountExternalProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebAccountExternalProduct request = null;
            //var response = instance.AccountsCreateAccountExternalProduct(accountNumber, request);
            //Assert.IsInstanceOf<TsiWebAccountExternalProductResponse> (response, "response is TsiWebAccountExternalProductResponse");
        }
        
        /// <summary>
        /// Test AccountsCreateAccountJournalEntry
        /// </summary>
        [TestMethod]
        public void AccountsCreateAccountJournalEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebAccountJournalEntryModel model = null;
            //var response = instance.AccountsCreateAccountJournalEntry(accountNumber, model);
            //Assert.IsInstanceOf<TsiWebJournalEntryResponse> (response, "response is TsiWebJournalEntryResponse");
        }
        
        /// <summary>
        /// Test AccountsCreateBillTo
        /// </summary>
        [TestMethod]
        public void AccountsCreateBillToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebBillTo billTo = null;
            //var response = instance.AccountsCreateBillTo(accountNumber, billTo);
            //Assert.IsInstanceOf<TsiWebBillToResponse> (response, "response is TsiWebBillToResponse");
        }
        
        /// <summary>
        /// Test AccountsCreatePhoneNumber
        /// </summary>
        [TestMethod]
        public void AccountsCreatePhoneNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebPhoneNumber phoneNumber = null;
            //var response = instance.AccountsCreatePhoneNumber(accountNumber, phoneNumber);
            //Assert.IsInstanceOf<TsiWebPhoneNumberResponse> (response, "response is TsiWebPhoneNumberResponse");
        }
        
        /// <summary>
        /// Test AccountsCreateShipTo
        /// </summary>
        [TestMethod]
        public void AccountsCreateShipToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebShipTo shipTo = null;
            //var response = instance.AccountsCreateShipTo(accountNumber, shipTo);
            //Assert.IsInstanceOf<TsiWebShipToResponse> (response, "response is TsiWebShipToResponse");
        }
        
        /// <summary>
        /// Test AccountsDeleteAccountExternalProduct
        /// </summary>
        [TestMethod]
        public void AccountsDeleteAccountExternalProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? id = null;
            //var response = instance.AccountsDeleteAccountExternalProduct(accountNumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsDeleteAccountGroup
        /// </summary>
        [TestMethod]
        public void AccountsDeleteAccountGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //string id = null;
            //var response = instance.AccountsDeleteAccountGroup(accountNumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsDeleteAccountProfile
        /// </summary>
        [TestMethod]
        public void AccountsDeleteAccountProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //string id = null;
            //var response = instance.AccountsDeleteAccountProfile(accountNumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsDeleteAccountSICCodes
        /// </summary>
        [TestMethod]
        public void AccountsDeleteAccountSICCodesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //string id = null;
            //var response = instance.AccountsDeleteAccountSICCodes(accountNumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsDeleteAccountSystem
        /// </summary>
        [TestMethod]
        public void AccountsDeleteAccountSystemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //string id = null;
            //var response = instance.AccountsDeleteAccountSystem(accountNumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsDeleteBillTo
        /// </summary>
        [TestMethod]
        public void AccountsDeleteBillToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? id = null;
            //var response = instance.AccountsDeleteBillTo(accountNumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsDeletePhoneNumber
        /// </summary>
        [TestMethod]
        public void AccountsDeletePhoneNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? id = null;
            //var response = instance.AccountsDeletePhoneNumber(accountNumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsDeleteShipTo
        /// </summary>
        [TestMethod]
        public void AccountsDeleteShipToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? id = null;
            //var response = instance.AccountsDeleteShipTo(accountNumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsDeleteTechFromAccountGroup
        /// </summary>
        [TestMethod]
        public void AccountsDeleteTechFromAccountGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? repnumber = null;
            //string id = null;
            //var response = instance.AccountsDeleteTechFromAccountGroup(repnumber, id);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountCoManagedTechs
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountCoManagedTechsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAccountCoManagedTechs(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebCoManagedTechnician>> (response, "response is List<TsiWebCoManagedTechnician>");
        }
        
        /// <summary>
        /// Test AccountsGetAccountCompletedTasks
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountCompletedTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountCompletedTasks(accountNumber, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebTasksResponse> (response, "response is TsiWebTasksResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountCustomerAssets
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountCustomerAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountCustomerAssets(accountNumber, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebAccountCustomerAssetResponse> (response, "response is TsiWebAccountCustomerAssetResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountDetails
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAccountDetails(accountNumber);
            //Assert.IsInstanceOf<TsiWebAccountDetail> (response, "response is TsiWebAccountDetail");
        }
        
        /// <summary>
        /// Test AccountsGetAccountDocument
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? documentID = null;
            //var response = instance.AccountsGetAccountDocument(accountNumber, documentID);
            //Assert.IsInstanceOf<TsiWebDocumentSummary> (response, "response is TsiWebDocumentSummary");
        }
        
        /// <summary>
        /// Test AccountsGetAccountDocuments
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //bool? accountOnly = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountDocuments(accountNumber, accountOnly, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebDocumentsResponse> (response, "response is TsiWebDocumentsResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountDocuments_0
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountDocuments_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //bool? accountOnly = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountDocuments_0(accountNumber, accountOnly, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebDocumentsResponse> (response, "response is TsiWebDocumentsResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountExternalProduct
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountExternalProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? accountExternalProductID = null;
            //var response = instance.AccountsGetAccountExternalProduct(accountNumber, accountExternalProductID);
            //Assert.IsInstanceOf<TsiWebAccountExternalProduct> (response, "response is TsiWebAccountExternalProduct");
        }
        
        /// <summary>
        /// Test AccountsGetAccountExternalProducts
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountExternalProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAccountExternalProducts(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebAccountExternalProduct>> (response, "response is List<TsiWebAccountExternalProduct>");
        }
        
        /// <summary>
        /// Test AccountsGetAccountIncompleteTasks
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountIncompleteTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountIncompleteTasks(accountNumber, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebTasksResponse> (response, "response is TsiWebTasksResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountJournalEntries
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountJournalEntriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //bool? excludeSystemEntries = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountJournalEntries(accountNumber, excludeSystemEntries, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebJournalEntriesResponse> (response, "response is TsiWebJournalEntriesResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountJournalEntries_0
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountJournalEntries_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //bool? excludeSystemEntries = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountJournalEntries_0(accountNumber, excludeSystemEntries, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebJournalEntriesResponse> (response, "response is TsiWebJournalEntriesResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountManagedAssets
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountManagedAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountManagedAssets(accountNumber, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebAccountManagedAssetResponse> (response, "response is TsiWebAccountManagedAssetResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountOnlyCompletedTasks
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountOnlyCompletedTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountOnlyCompletedTasks(accountNumber, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebTasksResponse> (response, "response is TsiWebTasksResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountOnlyIncompleteTasks
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountOnlyIncompleteTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountOnlyIncompleteTasks(accountNumber, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebTasksResponse> (response, "response is TsiWebTasksResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountOnlyTasks
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountOnlyTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountOnlyTasks(accountNumber, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebTasksResponse> (response, "response is TsiWebTasksResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountSummary
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountSummaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAccountSummary(accountNumber);
            //Assert.IsInstanceOf<TsiWebAccountSummary> (response, "response is TsiWebAccountSummary");
        }
        
        /// <summary>
        /// Test AccountsGetAccountSystems
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountSystemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAccountSystems(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebAccountSystem>> (response, "response is List<TsiWebAccountSystem>");
        }
        
        /// <summary>
        /// Test AccountsGetAccountTasks
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsGetAccountTasks(accountNumber, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebTasksResponse> (response, "response is TsiWebTasksResponse");
        }
        
        /// <summary>
        /// Test AccountsGetAccountingDetails
        /// </summary>
        [TestMethod]
        public void AccountsGetAccountingDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAccountingDetails(accountNumber);
            //Assert.IsInstanceOf<TsiWebAccounting> (response, "response is TsiWebAccounting");
        }
        
        /// <summary>
        /// Test AccountsGetAssignedGroups
        /// </summary>
        [TestMethod]
        public void AccountsGetAssignedGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAssignedGroups(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebAssignedMarketingGroup>> (response, "response is List<TsiWebAssignedMarketingGroup>");
        }
        
        /// <summary>
        /// Test AccountsGetAssignedProfiles
        /// </summary>
        [TestMethod]
        public void AccountsGetAssignedProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAssignedProfiles(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebAssignedMarketingProfile>> (response, "response is List<TsiWebAssignedMarketingProfile>");
        }
        
        /// <summary>
        /// Test AccountsGetAssignedSICCodes
        /// </summary>
        [TestMethod]
        public void AccountsGetAssignedSICCodesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetAssignedSICCodes(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebAssignedSICCode>> (response, "response is List<TsiWebAssignedSICCode>");
        }
        
        /// <summary>
        /// Test AccountsGetBillTo
        /// </summary>
        [TestMethod]
        public void AccountsGetBillToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? billToID = null;
            //var response = instance.AccountsGetBillTo(accountNumber, billToID);
            //Assert.IsInstanceOf<List<TsiWebBillTo>> (response, "response is List<TsiWebBillTo>");
        }
        
        /// <summary>
        /// Test AccountsGetBillTos
        /// </summary>
        [TestMethod]
        public void AccountsGetBillTosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetBillTos(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebBillTo>> (response, "response is List<TsiWebBillTo>");
        }
        
        /// <summary>
        /// Test AccountsGetCustomFields
        /// </summary>
        [TestMethod]
        public void AccountsGetCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetCustomFields(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebCustomField>> (response, "response is List<TsiWebCustomField>");
        }
        
        /// <summary>
        /// Test AccountsGetFile
        /// </summary>
        [TestMethod]
        public void AccountsGetFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? documentID = null;
            //var response = instance.AccountsGetFile(accountNumber, documentID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test AccountsGetMarketingDetails
        /// </summary>
        [TestMethod]
        public void AccountsGetMarketingDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetMarketingDetails(accountNumber);
            //Assert.IsInstanceOf<TsiWebAccountMarketingDetails> (response, "response is TsiWebAccountMarketingDetails");
        }
        
        /// <summary>
        /// Test AccountsGetPayMethod
        /// </summary>
        [TestMethod]
        public void AccountsGetPayMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? payMethodID = null;
            //var response = instance.AccountsGetPayMethod(accountNumber, payMethodID);
            //Assert.IsInstanceOf<TsiWebPayMethod> (response, "response is TsiWebPayMethod");
        }
        
        /// <summary>
        /// Test AccountsGetPayMethods
        /// </summary>
        [TestMethod]
        public void AccountsGetPayMethodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetPayMethods(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebPayMethod>> (response, "response is List<TsiWebPayMethod>");
        }
        
        /// <summary>
        /// Test AccountsGetPhoneNumber
        /// </summary>
        [TestMethod]
        public void AccountsGetPhoneNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? phoneNumberID = null;
            //var response = instance.AccountsGetPhoneNumber(accountNumber, phoneNumberID);
            //Assert.IsInstanceOf<TsiWebPhoneNumber> (response, "response is TsiWebPhoneNumber");
        }
        
        /// <summary>
        /// Test AccountsGetPhoneNumbers
        /// </summary>
        [TestMethod]
        public void AccountsGetPhoneNumbersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetPhoneNumbers(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebPhoneNumber>> (response, "response is List<TsiWebPhoneNumber>");
        }
        
        /// <summary>
        /// Test AccountsGetServiceDetails
        /// </summary>
        [TestMethod]
        public void AccountsGetServiceDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetServiceDetails(accountNumber);
            //Assert.IsInstanceOf<TsiWebAccountServiceDetails> (response, "response is TsiWebAccountServiceDetails");
        }
        
        /// <summary>
        /// Test AccountsGetShipTo
        /// </summary>
        [TestMethod]
        public void AccountsGetShipToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? shipToID = null;
            //var response = instance.AccountsGetShipTo(accountNumber, shipToID);
            //Assert.IsInstanceOf<TsiWebShipTo> (response, "response is TsiWebShipTo");
        }
        
        /// <summary>
        /// Test AccountsGetShipTos
        /// </summary>
        [TestMethod]
        public void AccountsGetShipTosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //var response = instance.AccountsGetShipTos(accountNumber);
            //Assert.IsInstanceOf<List<TsiWebShipTo>> (response, "response is List<TsiWebShipTo>");
        }
        
        /// <summary>
        /// Test AccountsSaveAccountingDetails
        /// </summary>
        [TestMethod]
        public void AccountsSaveAccountingDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebAccountingDetail details = null;
            //var response = instance.AccountsSaveAccountingDetails(accountNumber, details);
            //Assert.IsInstanceOf<TsiWebAccountingDetailResponse> (response, "response is TsiWebAccountingDetailResponse");
        }
        
        /// <summary>
        /// Test AccountsSaveMarketingDetails
        /// </summary>
        [TestMethod]
        public void AccountsSaveMarketingDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebAccountMarketingDetail details = null;
            //var response = instance.AccountsSaveMarketingDetails(accountNumber, details);
            //Assert.IsInstanceOf<TsiWebAccountMarketingDetailsResponse> (response, "response is TsiWebAccountMarketingDetailsResponse");
        }
        
        /// <summary>
        /// Test AccountsSaveServiceDetails
        /// </summary>
        [TestMethod]
        public void AccountsSaveServiceDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebAccountServiceDetail details = null;
            //var response = instance.AccountsSaveServiceDetails(accountNumber, details);
            //Assert.IsInstanceOf<TsiWebAccountServiceDetailsResponse> (response, "response is TsiWebAccountServiceDetailsResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchAccountsContactName
        /// </summary>
        [TestMethod]
        public void AccountsSearchAccountsContactNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchAccountsContactName(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchAccountsCustomField
        /// </summary>
        [TestMethod]
        public void AccountsSearchAccountsCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchAccountsCustomField(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchAccountsSoundsLikeName
        /// </summary>
        [TestMethod]
        public void AccountsSearchAccountsSoundsLikeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchAccountsSoundsLikeName(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByAccountId
        /// </summary>
        [TestMethod]
        public void AccountsSearchByAccountIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByAccountId(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByAccountNumber
        /// </summary>
        [TestMethod]
        public void AccountsSearchByAccountNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByAccountNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByAccountStatus
        /// </summary>
        [TestMethod]
        public void AccountsSearchByAccountStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByAccountStatus(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByAccountType
        /// </summary>
        [TestMethod]
        public void AccountsSearchByAccountTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByAccountType(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByAddress
        /// </summary>
        [TestMethod]
        public void AccountsSearchByAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByAddress(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByAgreement
        /// </summary>
        [TestMethod]
        public void AccountsSearchByAgreementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByAgreement(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByEmail
        /// </summary>
        [TestMethod]
        public void AccountsSearchByEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByEmail(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByExternalId
        /// </summary>
        [TestMethod]
        public void AccountsSearchByExternalIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByExternalId(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByName
        /// </summary>
        [TestMethod]
        public void AccountsSearchByNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByName(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByPhone
        /// </summary>
        [TestMethod]
        public void AccountsSearchByPhoneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByPhone(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSearchByPostalCode
        /// </summary>
        [TestMethod]
        public void AccountsSearchByPostalCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AccountsSearchByPostalCode(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsSetAccountDocumentFile
        /// </summary>
        [TestMethod]
        public void AccountsSetAccountDocumentFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? documentID = null;
            //var response = instance.AccountsSetAccountDocumentFile(accountNumber, documentID);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test AccountsSetAccountDocumentFileName
        /// </summary>
        [TestMethod]
        public void AccountsSetAccountDocumentFileNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? documentID = null;
            //string fileName = null;
            //var response = instance.AccountsSetAccountDocumentFileName(accountNumber, documentID, fileName);
            //Assert.IsInstanceOf<TsiWebDocumentResponse> (response, "response is TsiWebDocumentResponse");
        }
        
        /// <summary>
        /// Test AccountsSetAccountGroup
        /// </summary>
        [TestMethod]
        public void AccountsSetAccountGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //string group = null;
            //var response = instance.AccountsSetAccountGroup(accountNumber, group);
            //Assert.IsInstanceOf<TsiWebAssignedMarketingGroupsResponse> (response, "response is TsiWebAssignedMarketingGroupsResponse");
        }
        
        /// <summary>
        /// Test AccountsSetAccountProfile
        /// </summary>
        [TestMethod]
        public void AccountsSetAccountProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //string profile = null;
            //var response = instance.AccountsSetAccountProfile(accountNumber, profile);
            //Assert.IsInstanceOf<TsiWebAssignedMarketingProfilesResponse> (response, "response is TsiWebAssignedMarketingProfilesResponse");
        }
        
        /// <summary>
        /// Test AccountsSetAccountSICCode
        /// </summary>
        [TestMethod]
        public void AccountsSetAccountSICCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //string code = null;
            //var response = instance.AccountsSetAccountSICCode(accountNumber, code);
            //Assert.IsInstanceOf<TsiWebAssignedSICCodesResponse> (response, "response is TsiWebAssignedSICCodesResponse");
        }
        
        /// <summary>
        /// Test AccountsSetAccountSystem
        /// </summary>
        [TestMethod]
        public void AccountsSetAccountSystemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebAssignSystemModel system = null;
            //var response = instance.AccountsSetAccountSystem(accountNumber, system);
            //Assert.IsInstanceOf<TsiWebAccountSystemResponse> (response, "response is TsiWebAccountSystemResponse");
        }
        
        /// <summary>
        /// Test AccountsSetDefaultSystem
        /// </summary>
        [TestMethod]
        public void AccountsSetDefaultSystemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //string system = null;
            //var response = instance.AccountsSetDefaultSystem(accountNumber, system);
            //Assert.IsInstanceOf<TsiWebAccountSystemResponse> (response, "response is TsiWebAccountSystemResponse");
        }
        
        /// <summary>
        /// Test AccountsSetPrimaryBillTo
        /// </summary>
        [TestMethod]
        public void AccountsSetPrimaryBillToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? billToID = null;
            //var response = instance.AccountsSetPrimaryBillTo(accountNumber, billToID);
            //Assert.IsInstanceOf<TsiWebBillToResponse> (response, "response is TsiWebBillToResponse");
        }
        
        /// <summary>
        /// Test AccountsSetPrimaryFaxNumber
        /// </summary>
        [TestMethod]
        public void AccountsSetPrimaryFaxNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? phoneNumberID = null;
            //var response = instance.AccountsSetPrimaryFaxNumber(accountNumber, phoneNumberID);
            //Assert.IsInstanceOf<TsiWebPhoneNumberResponse> (response, "response is TsiWebPhoneNumberResponse");
        }
        
        /// <summary>
        /// Test AccountsSetPrimaryPhoneNumber
        /// </summary>
        [TestMethod]
        public void AccountsSetPrimaryPhoneNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? phoneNumberID = null;
            //var response = instance.AccountsSetPrimaryPhoneNumber(accountNumber, phoneNumberID);
            //Assert.IsInstanceOf<TsiWebPhoneNumberResponse> (response, "response is TsiWebPhoneNumberResponse");
        }
        
        /// <summary>
        /// Test AccountsSetPrimaryShipTo
        /// </summary>
        [TestMethod]
        public void AccountsSetPrimaryShipToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? shipToID = null;
            //var response = instance.AccountsSetPrimaryShipTo(accountNumber, shipToID);
            //Assert.IsInstanceOf<TsiWebShipToResponse> (response, "response is TsiWebShipToResponse");
        }
        
        /// <summary>
        /// Test AccountsSetTechAccountGroup
        /// </summary>
        [TestMethod]
        public void AccountsSetTechAccountGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? repnumber = null;
            //string groupName = null;
            //var response = instance.AccountsSetTechAccountGroup(repnumber, groupName);
            //Assert.IsInstanceOf<TsiWebCoManagedTechnicianResponse> (response, "response is TsiWebCoManagedTechnicianResponse");
        }
        
        /// <summary>
        /// Test AccountsUpdateAccount
        /// </summary>
        [TestMethod]
        public void AccountsUpdateAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //TsiWebAccount account = null;
            //var response = instance.AccountsUpdateAccount(accountNumber, account);
            //Assert.IsInstanceOf<TsiWebAccountResponse> (response, "response is TsiWebAccountResponse");
        }
        
        /// <summary>
        /// Test AccountsUpdateAccountDocumentProperties
        /// </summary>
        [TestMethod]
        public void AccountsUpdateAccountDocumentPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? documentID = null;
            //TsiWebAreasWebApiUpdateDocumentModel request = null;
            //var response = instance.AccountsUpdateAccountDocumentProperties(accountNumber, documentID, request);
            //Assert.IsInstanceOf<TsiWebDocumentResponse> (response, "response is TsiWebDocumentResponse");
        }
        
        /// <summary>
        /// Test AccountsUpdateAccountExternalProduct
        /// </summary>
        [TestMethod]
        public void AccountsUpdateAccountExternalProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? externalproductid = null;
            //TsiWebAccountExternalProduct request = null;
            //var response = instance.AccountsUpdateAccountExternalProduct(accountNumber, externalproductid, request);
            //Assert.IsInstanceOf<TsiWebAccountExternalProductResponse> (response, "response is TsiWebAccountExternalProductResponse");
        }
        
        /// <summary>
        /// Test AccountsUpdateBillTo
        /// </summary>
        [TestMethod]
        public void AccountsUpdateBillToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? billToID = null;
            //TsiWebBillTo billTo = null;
            //var response = instance.AccountsUpdateBillTo(accountNumber, billToID, billTo);
            //Assert.IsInstanceOf<TsiWebBillToResponse> (response, "response is TsiWebBillToResponse");
        }
        
        /// <summary>
        /// Test AccountsUpdateCustomFields
        /// </summary>
        [TestMethod]
        public void AccountsUpdateCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //List<TsiWebCustomField> customFields = null;
            //var response = instance.AccountsUpdateCustomFields(accountNumber, customFields);
            //Assert.IsInstanceOf<TsiWebCustomFieldsResponse> (response, "response is TsiWebCustomFieldsResponse");
        }
        
        /// <summary>
        /// Test AccountsUpdatePhoneNumber
        /// </summary>
        [TestMethod]
        public void AccountsUpdatePhoneNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? phoneNumberID = null;
            //TsiWebPhoneNumber phoneNumber = null;
            //var response = instance.AccountsUpdatePhoneNumber(accountNumber, phoneNumberID, phoneNumber);
            //Assert.IsInstanceOf<TsiWebPhoneNumberResponse> (response, "response is TsiWebPhoneNumberResponse");
        }
        
        /// <summary>
        /// Test AccountsUpdateShipTo
        /// </summary>
        [TestMethod]
        public void AccountsUpdateShipToTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //int? shipToID = null;
            //TsiWebShipTo shipTo = null;
            //var response = instance.AccountsUpdateShipTo(accountNumber, shipToID, shipTo);
            //Assert.IsInstanceOf<TsiWebShipToResponse> (response, "response is TsiWebShipToResponse");
        }
        
    }

}
