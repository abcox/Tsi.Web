/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
//using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using Tsi.Web.Client;
using Tsi.Web.Api;
using Tsi.Web.Model;

namespace Tsi.Web.Test
{
    /// <summary>
    ///  Class for testing AgreementsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class AgreementsApiTests
    {
        private AgreementsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new AgreementsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AgreementsApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AgreementsApi
            //Assert.IsInstanceOfType(typeof(AgreementsApi), instance, "instance is a AgreementsApi");
        }

        
        /// <summary>
        /// Test AgreementsAdvancedSearch
        /// </summary>
        [TestMethod]
        public void AgreementsAdvancedSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebAdvancedSearchRequest request = null;
            //var response = instance.AgreementsAdvancedSearch(request);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementAdditionalChargeByDetailId
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementAdditionalChargeByDetailIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //int? detailId = null;
            //var response = instance.AgreementsGetAgreementAdditionalChargeByDetailId(agreementNumber, detailId);
            //Assert.IsInstanceOf<TsiWebAgreementAdditionalCharge> (response, "response is TsiWebAgreementAdditionalCharge");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementAdditionalCharges
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementAdditionalChargesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //var response = instance.AgreementsGetAgreementAdditionalCharges(agreementNumber);
            //Assert.IsInstanceOf<List<TsiWebAgreementAdditionalCharge>> (response, "response is List<TsiWebAgreementAdditionalCharge>");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementBillToInformation
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementBillToInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //var response = instance.AgreementsGetAgreementBillToInformation(agreementNumber);
            //Assert.IsInstanceOf<TsiWebAgreementBillTo> (response, "response is TsiWebAgreementBillTo");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementCustomerAssets
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementCustomerAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //int? accountNumber = null;
            //var response = instance.AgreementsGetAgreementCustomerAssets(agreementNumber, accountNumber);
            //Assert.IsInstanceOf<List<TsiWebAgreementCustomerAsset>> (response, "response is List<TsiWebAgreementCustomerAsset>");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementCustomerAssetsByAssetID
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementCustomerAssetsByAssetIDTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //int? accountNumber = null;
            //int? customerassetNumber = null;
            //var response = instance.AgreementsGetAgreementCustomerAssetsByAssetID(agreementNumber, accountNumber, customerassetNumber);
            //Assert.IsInstanceOf<TsiWebAgreementCustomerAsset> (response, "response is TsiWebAgreementCustomerAsset");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementCustomerAssetsByProviderAssetID
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementCustomerAssetsByProviderAssetIDTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //int? accountNumber = null;
            //int? providerAssetNumber = null;
            //var response = instance.AgreementsGetAgreementCustomerAssetsByProviderAssetID(agreementNumber, accountNumber, providerAssetNumber);
            //Assert.IsInstanceOf<TsiWebAgreementCustomerAsset> (response, "response is TsiWebAgreementCustomerAsset");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementDetails
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //var response = instance.AgreementsGetAgreementDetails(agreementNumber);
            //Assert.IsInstanceOf<TsiWebAgreementDetail> (response, "response is TsiWebAgreementDetail");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementSummary
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementSummaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //var response = instance.AgreementsGetAgreementSummary(agreementNumber);
            //Assert.IsInstanceOf<TsiWebAgreementSummary> (response, "response is TsiWebAgreementSummary");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementsForAccounts
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementsForAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //bool? activeOnly = null;
            //var response = instance.AgreementsGetAgreementsForAccounts(accountNumber, activeOnly);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
        /// <summary>
        /// Test AgreementsGetAgreementsForAccounts_0
        /// </summary>
        [TestMethod]
        public void AgreementsGetAgreementsForAccounts_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? accountNumber = null;
            //bool? activeOnly = null;
            //var response = instance.AgreementsGetAgreementsForAccounts_0(accountNumber, activeOnly);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
        /// <summary>
        /// Test AgreementsGetCoveredAssetTypeByAssetTypeId
        /// </summary>
        [TestMethod]
        public void AgreementsGetCoveredAssetTypeByAssetTypeIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //int? coveredAssetNumber = null;
            //var response = instance.AgreementsGetCoveredAssetTypeByAssetTypeId(agreementNumber, coveredAssetNumber);
            //Assert.IsInstanceOf<TsiWebAgreementCoveredAssetType> (response, "response is TsiWebAgreementCoveredAssetType");
        }
        
        /// <summary>
        /// Test AgreementsGetCoveredAssetTypes
        /// </summary>
        [TestMethod]
        public void AgreementsGetCoveredAssetTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? agreementNumber = null;
            //var response = instance.AgreementsGetCoveredAssetTypes(agreementNumber);
            //Assert.IsInstanceOf<List<TsiWebAgreementCoveredAssetType>> (response, "response is List<TsiWebAgreementCoveredAssetType>");
        }
        
        /// <summary>
        /// Test AgreementsSearchByAgreementNumber
        /// </summary>
        [TestMethod]
        public void AgreementsSearchByAgreementNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AgreementsSearchByAgreementNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
        /// <summary>
        /// Test AgreementsSearchByAgreementType
        /// </summary>
        [TestMethod]
        public void AgreementsSearchByAgreementTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AgreementsSearchByAgreementType(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
        /// <summary>
        /// Test AgreementsSearchByContractNumber
        /// </summary>
        [TestMethod]
        public void AgreementsSearchByContractNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AgreementsSearchByContractNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
        /// <summary>
        /// Test AgreementsSearchByEndDate
        /// </summary>
        [TestMethod]
        public void AgreementsSearchByEndDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebDateTimeSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AgreementsSearchByEndDate(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
        /// <summary>
        /// Test AgreementsSearchByExternalProduct
        /// </summary>
        [TestMethod]
        public void AgreementsSearchByExternalProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AgreementsSearchByExternalProduct(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
        /// <summary>
        /// Test AgreementsSearchByStartDate
        /// </summary>
        [TestMethod]
        public void AgreementsSearchByStartDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebDateTimeSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.AgreementsSearchByStartDate(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAgreementResponse> (response, "response is TsiWebSearchAgreementResponse");
        }
        
    }

}
