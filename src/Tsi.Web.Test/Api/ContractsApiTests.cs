/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
//using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using Tsi.Web.Client;
using Tsi.Web.Api;
using Tsi.Web.Model;

namespace Tsi.Web.Test
{
    /// <summary>
    ///  Class for testing ContractsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class ContractsApiTests
    {
        private ContractsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new ContractsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ContractsApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ContractsApi
            //Assert.IsInstanceOfType(typeof(ContractsApi), instance, "instance is a ContractsApi");
        }

        
        /// <summary>
        /// Test ContractsAdvancedSearch
        /// </summary>
        [TestMethod]
        public void ContractsAdvancedSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebAdvancedSearchRequest request = null;
            //var response = instance.ContractsAdvancedSearch(request);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsCreateContract
        /// </summary>
        [TestMethod]
        public void ContractsCreateContractTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCreateContractModel model = null;
            //var response = instance.ContractsCreateContract(model);
            //Assert.IsInstanceOf<TsiWebContractResponse> (response, "response is TsiWebContractResponse");
        }
        
        /// <summary>
        /// Test ContractsCreateContractAccount
        /// </summary>
        [TestMethod]
        public void ContractsCreateContractAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? accountNumber = null;
            //var response = instance.ContractsCreateContractAccount(contractNumber, accountNumber);
            //Assert.IsInstanceOf<TsiWebContractResponse> (response, "response is TsiWebContractResponse");
        }
        
        /// <summary>
        /// Test ContractsCreateContractDocument
        /// </summary>
        [TestMethod]
        public void ContractsCreateContractDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsCreateContractDocument(contractNumber);
            //Assert.IsInstanceOf<TsiWebDocumentResponse> (response, "response is TsiWebDocumentResponse");
        }
        
        /// <summary>
        /// Test ContractsCreateContractLineItem
        /// </summary>
        [TestMethod]
        public void ContractsCreateContractLineItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? accountNumber = null;
            //TsiWebCreateContractLineItemModel model = null;
            //var response = instance.ContractsCreateContractLineItem(contractNumber, accountNumber, model);
            //Assert.IsInstanceOf<TsiWebContractDetailResponse> (response, "response is TsiWebContractDetailResponse");
        }
        
        /// <summary>
        /// Test ContractsDeleteContractAccount
        /// </summary>
        [TestMethod]
        public void ContractsDeleteContractAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? accountNumber = null;
            //bool? allowDeleteIfInvoiced = null;
            //var response = instance.ContractsDeleteContractAccount(contractNumber, accountNumber, allowDeleteIfInvoiced);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test ContractsDeleteContractLineItem
        /// </summary>
        [TestMethod]
        public void ContractsDeleteContractLineItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? contractDetailNumber = null;
            //var response = instance.ContractsDeleteContractLineItem(contractNumber, contractDetailNumber);
            //Assert.IsInstanceOf<TsiWebContractDetailResponse> (response, "response is TsiWebContractDetailResponse");
        }
        
        /// <summary>
        /// Test ContractsGetContractAccounts
        /// </summary>
        [TestMethod]
        public void ContractsGetContractAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractAccounts(contractNumber);
            //Assert.IsInstanceOf<List<TsiWebContractAccount>> (response, "response is List<TsiWebContractAccount>");
        }
        
        /// <summary>
        /// Test ContractsGetContractDetails
        /// </summary>
        [TestMethod]
        public void ContractsGetContractDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractDetails(contractNumber);
            //Assert.IsInstanceOf<TsiWebContractDetail> (response, "response is TsiWebContractDetail");
        }
        
        /// <summary>
        /// Test ContractsGetContractDocument
        /// </summary>
        [TestMethod]
        public void ContractsGetContractDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? documentID = null;
            //var response = instance.ContractsGetContractDocument(contractNumber, documentID);
            //Assert.IsInstanceOf<TsiWebDocumentSummary> (response, "response is TsiWebDocumentSummary");
        }
        
        /// <summary>
        /// Test ContractsGetContractDocuments
        /// </summary>
        [TestMethod]
        public void ContractsGetContractDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractDocuments(contractNumber);
            //Assert.IsInstanceOf<List<TsiWebDocumentSummary>> (response, "response is List<TsiWebDocumentSummary>");
        }
        
        /// <summary>
        /// Test ContractsGetContractItemsCovered
        /// </summary>
        [TestMethod]
        public void ContractsGetContractItemsCoveredTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractItemsCovered(contractNumber);
            //Assert.IsInstanceOf<List<TsiWebItemCovered>> (response, "response is List<TsiWebItemCovered>");
        }
        
        /// <summary>
        /// Test ContractsGetContractItemsCoveredByAccountNumber
        /// </summary>
        [TestMethod]
        public void ContractsGetContractItemsCoveredByAccountNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? accountNumber = null;
            //var response = instance.ContractsGetContractItemsCoveredByAccountNumber(contractNumber, accountNumber);
            //Assert.IsInstanceOf<List<TsiWebItemCovered>> (response, "response is List<TsiWebItemCovered>");
        }
        
        /// <summary>
        /// Test ContractsGetContractMeterGroupById
        /// </summary>
        [TestMethod]
        public void ContractsGetContractMeterGroupByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? meterGroupId = null;
            //var response = instance.ContractsGetContractMeterGroupById(contractNumber, meterGroupId);
            //Assert.IsInstanceOf<TsiWebContractMeterGroup> (response, "response is TsiWebContractMeterGroup");
        }
        
        /// <summary>
        /// Test ContractsGetContractMeterGroups
        /// </summary>
        [TestMethod]
        public void ContractsGetContractMeterGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractMeterGroups(contractNumber);
            //Assert.IsInstanceOf<List<TsiWebContractMeterGroup>> (response, "response is List<TsiWebContractMeterGroup>");
        }
        
        /// <summary>
        /// Test ContractsGetContractMeters
        /// </summary>
        [TestMethod]
        public void ContractsGetContractMetersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? detailId = null;
            //var response = instance.ContractsGetContractMeters(contractNumber, detailId);
            //Assert.IsInstanceOf<List<TsiWebContractMeter>> (response, "response is List<TsiWebContractMeter>");
        }
        
        /// <summary>
        /// Test ContractsGetContractPartsAndLabor
        /// </summary>
        [TestMethod]
        public void ContractsGetContractPartsAndLaborTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractPartsAndLabor(contractNumber);
            //Assert.IsInstanceOf<List<TsiWebPartAndLabor>> (response, "response is List<TsiWebPartAndLabor>");
        }
        
        /// <summary>
        /// Test ContractsGetContractPartsAndLaborByAccountNumber
        /// </summary>
        [TestMethod]
        public void ContractsGetContractPartsAndLaborByAccountNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? accountNumber = null;
            //var response = instance.ContractsGetContractPartsAndLaborByAccountNumber(contractNumber, accountNumber);
            //Assert.IsInstanceOf<List<TsiWebPartAndLabor>> (response, "response is List<TsiWebPartAndLabor>");
        }
        
        /// <summary>
        /// Test ContractsGetContractServiceOrderHistory
        /// </summary>
        [TestMethod]
        public void ContractsGetContractServiceOrderHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractServiceOrderHistory(contractNumber);
            //Assert.IsInstanceOf<List<TsiWebContractServiceOrder>> (response, "response is List<TsiWebContractServiceOrder>");
        }
        
        /// <summary>
        /// Test ContractsGetContractServiceOrderHistoryByAccountNumber
        /// </summary>
        [TestMethod]
        public void ContractsGetContractServiceOrderHistoryByAccountNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? accountNumber = null;
            //var response = instance.ContractsGetContractServiceOrderHistoryByAccountNumber(contractNumber, accountNumber);
            //Assert.IsInstanceOf<List<TsiWebServiceOrderSummary>> (response, "response is List<TsiWebServiceOrderSummary>");
        }
        
        /// <summary>
        /// Test ContractsGetContractSummary
        /// </summary>
        [TestMethod]
        public void ContractsGetContractSummaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractSummary(contractNumber);
            //Assert.IsInstanceOf<TsiWebContractSummary> (response, "response is TsiWebContractSummary");
        }
        
        /// <summary>
        /// Test ContractsGetContractTimeLogs
        /// </summary>
        [TestMethod]
        public void ContractsGetContractTimeLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetContractTimeLogs(contractNumber);
            //Assert.IsInstanceOf<List<TsiWebTimeLog>> (response, "response is List<TsiWebTimeLog>");
        }
        
        /// <summary>
        /// Test ContractsGetContractTimeLogsByAccountNumber
        /// </summary>
        [TestMethod]
        public void ContractsGetContractTimeLogsByAccountNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? accountNumber = null;
            //var response = instance.ContractsGetContractTimeLogsByAccountNumber(contractNumber, accountNumber);
            //Assert.IsInstanceOf<List<TsiWebTimeLog>> (response, "response is List<TsiWebTimeLog>");
        }
        
        /// <summary>
        /// Test ContractsGetCustomFields
        /// </summary>
        [TestMethod]
        public void ContractsGetCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //var response = instance.ContractsGetCustomFields(contractNumber);
            //Assert.IsInstanceOf<List<TsiWebCustomField>> (response, "response is List<TsiWebCustomField>");
        }
        
        /// <summary>
        /// Test ContractsGetFile
        /// </summary>
        [TestMethod]
        public void ContractsGetFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? documentID = null;
            //var response = instance.ContractsGetFile(contractNumber, documentID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test ContractsSearchByAccountNumber
        /// </summary>
        [TestMethod]
        public void ContractsSearchByAccountNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByAccountNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByAgreementNumber
        /// </summary>
        [TestMethod]
        public void ContractsSearchByAgreementNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByAgreementNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByBasis
        /// </summary>
        [TestMethod]
        public void ContractsSearchByBasisTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByBasis(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByContractNumber
        /// </summary>
        [TestMethod]
        public void ContractsSearchByContractNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByContractNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByContractType
        /// </summary>
        [TestMethod]
        public void ContractsSearchByContractTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByContractType(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByCustomField
        /// </summary>
        [TestMethod]
        public void ContractsSearchByCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByCustomField(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByEndDate
        /// </summary>
        [TestMethod]
        public void ContractsSearchByEndDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebDateTimeSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByEndDate(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByReference
        /// </summary>
        [TestMethod]
        public void ContractsSearchByReferenceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByReference(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByStartDate
        /// </summary>
        [TestMethod]
        public void ContractsSearchByStartDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebDateTimeSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByStartDate(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSearchByStatus
        /// </summary>
        [TestMethod]
        public void ContractsSearchByStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.ContractsSearchByStatus(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test ContractsSetContractDocumentFile
        /// </summary>
        [TestMethod]
        public void ContractsSetContractDocumentFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? documentID = null;
            //var response = instance.ContractsSetContractDocumentFile(contractNumber, documentID);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test ContractsSetContractDocumentFileName
        /// </summary>
        [TestMethod]
        public void ContractsSetContractDocumentFileNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? documentID = null;
            //string fileName = null;
            //var response = instance.ContractsSetContractDocumentFileName(contractNumber, documentID, fileName);
            //Assert.IsInstanceOf<TsiWebDocumentResponse> (response, "response is TsiWebDocumentResponse");
        }
        
        /// <summary>
        /// Test ContractsUpdateContract
        /// </summary>
        [TestMethod]
        public void ContractsUpdateContractTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //TsiWebUpdateContractModel model = null;
            //var response = instance.ContractsUpdateContract(contractNumber, model);
            //Assert.IsInstanceOf<TsiWebContractResponse> (response, "response is TsiWebContractResponse");
        }
        
        /// <summary>
        /// Test ContractsUpdateContractDocumentProperties
        /// </summary>
        [TestMethod]
        public void ContractsUpdateContractDocumentPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? documentID = null;
            //TsiWebAreasWebApiUpdateDocumentModel request = null;
            //var response = instance.ContractsUpdateContractDocumentProperties(contractNumber, documentID, request);
            //Assert.IsInstanceOf<TsiWebDocumentResponse> (response, "response is TsiWebDocumentResponse");
        }
        
        /// <summary>
        /// Test ContractsUpdateContractLineItem
        /// </summary>
        [TestMethod]
        public void ContractsUpdateContractLineItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //int? contractDetailNumber = null;
            //TsiWebUpdateContractLineItemModel model = null;
            //var response = instance.ContractsUpdateContractLineItem(contractNumber, contractDetailNumber, model);
            //Assert.IsInstanceOf<TsiWebContractDetailResponse> (response, "response is TsiWebContractDetailResponse");
        }
        
        /// <summary>
        /// Test ContractsUpdateCustomFields
        /// </summary>
        [TestMethod]
        public void ContractsUpdateCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? contractNumber = null;
            //List<TsiWebCustomField> customFields = null;
            //var response = instance.ContractsUpdateCustomFields(contractNumber, customFields);
            //Assert.IsInstanceOf<TsiWebCustomFieldsResponse> (response, "response is TsiWebCustomFieldsResponse");
        }
        
        /// <summary>
        /// Test ContractsUpdateMeterReadings
        /// </summary>
        [TestMethod]
        public void ContractsUpdateMeterReadingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebMeterModel model = null;
            //var response = instance.ContractsUpdateMeterReadings(model);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
        /// <summary>
        /// Test ContractsUpdateMeterReadings_0
        /// </summary>
        [TestMethod]
        public void ContractsUpdateMeterReadings_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebMeterModel model = null;
            //var response = instance.ContractsUpdateMeterReadings_0(model);
            //Assert.IsInstanceOf<TsiWebResponse> (response, "response is TsiWebResponse");
        }
        
    }

}
