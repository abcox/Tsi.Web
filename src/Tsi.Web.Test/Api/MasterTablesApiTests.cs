/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
//using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using Tsi.Web.Client;
using Tsi.Web.Api;
using Tsi.Web.Model;

namespace Tsi.Web.Test
{
    /// <summary>
    ///  Class for testing MasterTablesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class MasterTablesApiTests
    {
        private MasterTablesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new MasterTablesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MasterTablesApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MasterTablesApi
            //Assert.IsInstanceOfType(typeof(MasterTablesApi), instance, "instance is a MasterTablesApi");
        }

        
        /// <summary>
        /// Test MasterTablesCreateAccountCustomFieldCategory
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateAccountCustomFieldCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldCategoryRequest request = null;
            //var response = instance.MasterTablesCreateAccountCustomFieldCategory(request);
            //Assert.IsInstanceOf<TsiWebCustomFieldCategoryResponse> (response, "response is TsiWebCustomFieldCategoryResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateBooleanCustomFieldDefinition
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateBooleanCustomFieldDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldDefinitionModel model = null;
            //var response = instance.MasterTablesCreateBooleanCustomFieldDefinition(model);
            //Assert.IsInstanceOf<TsiWebCustomFieldDefinitionResponse> (response, "response is TsiWebCustomFieldDefinitionResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateContactCustomFieldCategory
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateContactCustomFieldCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldCategoryRequest request = null;
            //var response = instance.MasterTablesCreateContactCustomFieldCategory(request);
            //Assert.IsInstanceOf<TsiWebCustomFieldCategoryResponse> (response, "response is TsiWebCustomFieldCategoryResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateContractMeter
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateContractMeterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string meter = null;
            //var response = instance.MasterTablesCreateContractMeter(meter);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateContractMeterGroup
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateContractMeterGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string meterGroup = null;
            //var response = instance.MasterTablesCreateContractMeterGroup(meterGroup);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateCurrencyCustomFieldDefinition
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateCurrencyCustomFieldDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldDefinitionModel model = null;
            //var response = instance.MasterTablesCreateCurrencyCustomFieldDefinition(model);
            //Assert.IsInstanceOf<TsiWebCustomFieldDefinitionResponse> (response, "response is TsiWebCustomFieldDefinitionResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateDateCustomFieldDefinition
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateDateCustomFieldDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldDefinitionModel model = null;
            //var response = instance.MasterTablesCreateDateCustomFieldDefinition(model);
            //Assert.IsInstanceOf<TsiWebCustomFieldDefinitionResponse> (response, "response is TsiWebCustomFieldDefinitionResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateDropDownCustomFieldDefinition
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateDropDownCustomFieldDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldDefinitionModel model = null;
            //var response = instance.MasterTablesCreateDropDownCustomFieldDefinition(model);
            //Assert.IsInstanceOf<TsiWebCustomFieldDefinitionResponse> (response, "response is TsiWebCustomFieldDefinitionResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateExpensePaymentType
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateExpensePaymentTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebExpensePaymentTypeModel expensePaymentType = null;
            //var response = instance.MasterTablesCreateExpensePaymentType(expensePaymentType);
            //Assert.IsInstanceOf<TsiWebExpensePaymentTypesResponse> (response, "response is TsiWebExpensePaymentTypesResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateExpenseType
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateExpenseTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebExpenseTypeModel expenseType = null;
            //var response = instance.MasterTablesCreateExpenseType(expenseType);
            //Assert.IsInstanceOf<TsiWebExpenseTypesResponse> (response, "response is TsiWebExpenseTypesResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateJournalAction
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateJournalActionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebJournalAction action = null;
            //var response = instance.MasterTablesCreateJournalAction(action);
            //Assert.IsInstanceOf<TsiWebJournalActionsResponse> (response, "response is TsiWebJournalActionsResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateJournalTopic
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateJournalTopicTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string journalTopic = null;
            //var response = instance.MasterTablesCreateJournalTopic(journalTopic);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateNumberCustomFieldDefinition
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateNumberCustomFieldDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldDefinitionModel model = null;
            //var response = instance.MasterTablesCreateNumberCustomFieldDefinition(model);
            //Assert.IsInstanceOf<TsiWebCustomFieldDefinitionResponse> (response, "response is TsiWebCustomFieldDefinitionResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateOpportunityCustomFieldCategory
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateOpportunityCustomFieldCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldCategoryRequest request = null;
            //var response = instance.MasterTablesCreateOpportunityCustomFieldCategory(request);
            //Assert.IsInstanceOf<TsiWebCustomFieldCategoryResponse> (response, "response is TsiWebCustomFieldCategoryResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateResolution
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateResolutionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string resolution = null;
            //var response = instance.MasterTablesCreateResolution(resolution);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateServiceOrderProfile
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateServiceOrderProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string profile = null;
            //var response = instance.MasterTablesCreateServiceOrderProfile(profile);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateSymptom
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateSymptomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string symptom = null;
            //var response = instance.MasterTablesCreateSymptom(symptom);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateTextCustomFieldDefinition
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateTextCustomFieldDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldDefinitionModel model = null;
            //var response = instance.MasterTablesCreateTextCustomFieldDefinition(model);
            //Assert.IsInstanceOf<TsiWebCustomFieldDefinitionResponse> (response, "response is TsiWebCustomFieldDefinitionResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateTimeCustomFieldDefinition
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateTimeCustomFieldDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldDefinitionModel model = null;
            //var response = instance.MasterTablesCreateTimeCustomFieldDefinition(model);
            //Assert.IsInstanceOf<TsiWebCustomFieldDefinitionResponse> (response, "response is TsiWebCustomFieldDefinitionResponse");
        }
        
        /// <summary>
        /// Test MasterTablesCreateTimeEntryReason
        /// </summary>
        [TestMethod]
        public void MasterTablesCreateTimeEntryReasonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCreateTimeEntryReasonRequest reason = null;
            //var response = instance.MasterTablesCreateTimeEntryReason(reason);
            //Assert.IsInstanceOf<TsiWebTimeEntryReasonResponse> (response, "response is TsiWebTimeEntryReasonResponse");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountCustomFields
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetAccountCustomFields(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebCustomFieldCategory>> (response, "response is List<TsiWebCustomFieldCategory>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountCustomFields_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountCustomFields_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetAccountCustomFields_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebCustomFieldCategory>> (response, "response is List<TsiWebCustomFieldCategory>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountGroups
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetAccountGroups();
            //Assert.IsInstanceOf<List<TsiWebMarketingGroup>> (response, "response is List<TsiWebMarketingGroup>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountProfiles
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetAccountProfiles();
            //Assert.IsInstanceOf<List<TsiWebAccountProfile>> (response, "response is List<TsiWebAccountProfile>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountSources
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountSourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetAccountSources(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebAccountSource>> (response, "response is List<TsiWebAccountSource>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountSources_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountSources_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetAccountSources_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebAccountSource>> (response, "response is List<TsiWebAccountSource>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountStatuses
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountStatusesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetAccountStatuses(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebAccountStatus>> (response, "response is List<TsiWebAccountStatus>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountStatuses_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountStatuses_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetAccountStatuses_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebAccountStatus>> (response, "response is List<TsiWebAccountStatus>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetAccountTypes(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebAccountType>> (response, "response is List<TsiWebAccountType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAccountTypes_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAccountTypes_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetAccountTypes_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebAccountType>> (response, "response is List<TsiWebAccountType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetAssetTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetAssetTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetAssetTypes();
            //Assert.IsInstanceOf<List<TsiWebAssetType>> (response, "response is List<TsiWebAssetType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetBOTaxCodes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetBOTaxCodesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetBOTaxCodes();
            //Assert.IsInstanceOf<List<TsiWebBOTaxCode>> (response, "response is List<TsiWebBOTaxCode>");
        }
        
        /// <summary>
        /// Test MasterTablesGetBOTaxTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetBOTaxTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetBOTaxTypes();
            //Assert.IsInstanceOf<List<TsiWebBOTaxType>> (response, "response is List<TsiWebBOTaxType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetContactCustomFields
        /// </summary>
        [TestMethod]
        public void MasterTablesGetContactCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetContactCustomFields(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebCustomFieldCategory>> (response, "response is List<TsiWebCustomFieldCategory>");
        }
        
        /// <summary>
        /// Test MasterTablesGetContactCustomFields_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetContactCustomFields_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetContactCustomFields_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebCustomFieldCategory>> (response, "response is List<TsiWebCustomFieldCategory>");
        }
        
        /// <summary>
        /// Test MasterTablesGetContactGroups
        /// </summary>
        [TestMethod]
        public void MasterTablesGetContactGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetContactGroups();
            //Assert.IsInstanceOf<List<TsiWebMarketingGroup>> (response, "response is List<TsiWebMarketingGroup>");
        }
        
        /// <summary>
        /// Test MasterTablesGetContactProfiles
        /// </summary>
        [TestMethod]
        public void MasterTablesGetContactProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetContactProfiles();
            //Assert.IsInstanceOf<List<TsiWebContactProfile>> (response, "response is List<TsiWebContactProfile>");
        }
        
        /// <summary>
        /// Test MasterTablesGetContractMeterGroups
        /// </summary>
        [TestMethod]
        public void MasterTablesGetContractMeterGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetContractMeterGroups();
            //Assert.IsInstanceOf<List<TsiWebMeterGroup>> (response, "response is List<TsiWebMeterGroup>");
        }
        
        /// <summary>
        /// Test MasterTablesGetContractMeters
        /// </summary>
        [TestMethod]
        public void MasterTablesGetContractMetersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetContractMeters();
            //Assert.IsInstanceOf<List<TsiWebMeter>> (response, "response is List<TsiWebMeter>");
        }
        
        /// <summary>
        /// Test MasterTablesGetCountries
        /// </summary>
        [TestMethod]
        public void MasterTablesGetCountriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetCountries(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebCountry>> (response, "response is List<TsiWebCountry>");
        }
        
        /// <summary>
        /// Test MasterTablesGetCountries_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetCountries_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetCountries_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebCountry>> (response, "response is List<TsiWebCountry>");
        }
        
        /// <summary>
        /// Test MasterTablesGetDepartments
        /// </summary>
        [TestMethod]
        public void MasterTablesGetDepartmentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetDepartments();
            //Assert.IsInstanceOf<List<TsiWebDepartment>> (response, "response is List<TsiWebDepartment>");
        }
        
        /// <summary>
        /// Test MasterTablesGetDispatchBoards
        /// </summary>
        [TestMethod]
        public void MasterTablesGetDispatchBoardsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetDispatchBoards();
            //Assert.IsInstanceOf<List<TsiWebDispatchBoard>> (response, "response is List<TsiWebDispatchBoard>");
        }
        
        /// <summary>
        /// Test MasterTablesGetDocumentTopics
        /// </summary>
        [TestMethod]
        public void MasterTablesGetDocumentTopicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetDocumentTopics();
            //Assert.IsInstanceOf<List<TsiWebDocumentTopic>> (response, "response is List<TsiWebDocumentTopic>");
        }
        
        /// <summary>
        /// Test MasterTablesGetExpensePaymentTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetExpensePaymentTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetExpensePaymentTypes();
            //Assert.IsInstanceOf<List<TsiWebExpensePaymentType>> (response, "response is List<TsiWebExpensePaymentType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetExpenseTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetExpenseTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetExpenseTypes();
            //Assert.IsInstanceOf<List<TsiWebExpenseType>> (response, "response is List<TsiWebExpenseType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetExternalProducts
        /// </summary>
        [TestMethod]
        public void MasterTablesGetExternalProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetExternalProducts(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebExternalProduct>> (response, "response is List<TsiWebExternalProduct>");
        }
        
        /// <summary>
        /// Test MasterTablesGetExternalProducts_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetExternalProducts_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetExternalProducts_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebExternalProduct>> (response, "response is List<TsiWebExternalProduct>");
        }
        
        /// <summary>
        /// Test MasterTablesGetFreightTerms
        /// </summary>
        [TestMethod]
        public void MasterTablesGetFreightTermsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetFreightTerms();
            //Assert.IsInstanceOf<List<TsiWebFreightTerm>> (response, "response is List<TsiWebFreightTerm>");
        }
        
        /// <summary>
        /// Test MasterTablesGetInventoryLocations
        /// </summary>
        [TestMethod]
        public void MasterTablesGetInventoryLocationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetInventoryLocations(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebInventoryLocation>> (response, "response is List<TsiWebInventoryLocation>");
        }
        
        /// <summary>
        /// Test MasterTablesGetInventoryLocations_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetInventoryLocations_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetInventoryLocations_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebInventoryLocation>> (response, "response is List<TsiWebInventoryLocation>");
        }
        
        /// <summary>
        /// Test MasterTablesGetInvoiceTerms
        /// </summary>
        [TestMethod]
        public void MasterTablesGetInvoiceTermsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetInvoiceTerms();
            //Assert.IsInstanceOf<List<TsiWebInvoiceTerm>> (response, "response is List<TsiWebInvoiceTerm>");
        }
        
        /// <summary>
        /// Test MasterTablesGetJournalActions
        /// </summary>
        [TestMethod]
        public void MasterTablesGetJournalActionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetJournalActions(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebJournalAction>> (response, "response is List<TsiWebJournalAction>");
        }
        
        /// <summary>
        /// Test MasterTablesGetJournalActions_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetJournalActions_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetJournalActions_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebJournalAction>> (response, "response is List<TsiWebJournalAction>");
        }
        
        /// <summary>
        /// Test MasterTablesGetJournalTopics
        /// </summary>
        [TestMethod]
        public void MasterTablesGetJournalTopicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetJournalTopics(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebJournalTopic>> (response, "response is List<TsiWebJournalTopic>");
        }
        
        /// <summary>
        /// Test MasterTablesGetJournalTopics_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetJournalTopics_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetJournalTopics_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebJournalTopic>> (response, "response is List<TsiWebJournalTopic>");
        }
        
        /// <summary>
        /// Test MasterTablesGetNamePrefixes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetNamePrefixesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetNamePrefixes();
            //Assert.IsInstanceOf<List<TsiWebPrefix>> (response, "response is List<TsiWebPrefix>");
        }
        
        /// <summary>
        /// Test MasterTablesGetNextActionTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetNextActionTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetNextActionTypes();
            //Assert.IsInstanceOf<List<TsiWebNextActionType>> (response, "response is List<TsiWebNextActionType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityCloseReasons
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityCloseReasonsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetOpportunityCloseReasons();
            //Assert.IsInstanceOf<List<TsiWebCloseReason>> (response, "response is List<TsiWebCloseReason>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityCustomFields
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetOpportunityCustomFields(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebCustomFieldCategory>> (response, "response is List<TsiWebCustomFieldCategory>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityCustomFields_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityCustomFields_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetOpportunityCustomFields_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebCustomFieldCategory>> (response, "response is List<TsiWebCustomFieldCategory>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityHowDidYouHearAboutUs
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityHowDidYouHearAboutUsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetOpportunityHowDidYouHearAboutUs(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebHowDidYouHearAboutUs>> (response, "response is List<TsiWebHowDidYouHearAboutUs>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityHowDidYouHearAboutUs_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityHowDidYouHearAboutUs_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetOpportunityHowDidYouHearAboutUs_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebHowDidYouHearAboutUs>> (response, "response is List<TsiWebHowDidYouHearAboutUs>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityNames
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityNamesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetOpportunityNames();
            //Assert.IsInstanceOf<List<TsiWebOpportunityName>> (response, "response is List<TsiWebOpportunityName>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityStages
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityStagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetOpportunityStages();
            //Assert.IsInstanceOf<List<TsiWebOpportunityStage>> (response, "response is List<TsiWebOpportunityStage>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityStatuses
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityStatusesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetOpportunityStatuses(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebOpportunityStatus>> (response, "response is List<TsiWebOpportunityStatus>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityStatuses_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityStatuses_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetOpportunityStatuses_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebOpportunityStatus>> (response, "response is List<TsiWebOpportunityStatus>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetOpportunityTypes(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebOpportunityType>> (response, "response is List<TsiWebOpportunityType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetOpportunityTypes_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetOpportunityTypes_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetOpportunityTypes_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebOpportunityType>> (response, "response is List<TsiWebOpportunityType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetPasswordCategories
        /// </summary>
        [TestMethod]
        public void MasterTablesGetPasswordCategoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetPasswordCategories(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebPasswordCategory>> (response, "response is List<TsiWebPasswordCategory>");
        }
        
        /// <summary>
        /// Test MasterTablesGetPasswordCategories_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetPasswordCategories_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetPasswordCategories_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebPasswordCategory>> (response, "response is List<TsiWebPasswordCategory>");
        }
        
        /// <summary>
        /// Test MasterTablesGetPaymentMethods
        /// </summary>
        [TestMethod]
        public void MasterTablesGetPaymentMethodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetPaymentMethods();
            //Assert.IsInstanceOf<List<TsiWebPaymentMethod>> (response, "response is List<TsiWebPaymentMethod>");
        }
        
        /// <summary>
        /// Test MasterTablesGetPhoneLocations
        /// </summary>
        [TestMethod]
        public void MasterTablesGetPhoneLocationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetPhoneLocations(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebPhoneLocation>> (response, "response is List<TsiWebPhoneLocation>");
        }
        
        /// <summary>
        /// Test MasterTablesGetPhoneLocations_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetPhoneLocations_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetPhoneLocations_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebPhoneLocation>> (response, "response is List<TsiWebPhoneLocation>");
        }
        
        /// <summary>
        /// Test MasterTablesGetPriceLevels
        /// </summary>
        [TestMethod]
        public void MasterTablesGetPriceLevelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetPriceLevels();
            //Assert.IsInstanceOf<List<TsiWebPriceLevel>> (response, "response is List<TsiWebPriceLevel>");
        }
        
        /// <summary>
        /// Test MasterTablesGetPurchaseOrderDescriptions
        /// </summary>
        [TestMethod]
        public void MasterTablesGetPurchaseOrderDescriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetPurchaseOrderDescriptions();
            //Assert.IsInstanceOf<List<TsiWebPurchaseOrderDescription>> (response, "response is List<TsiWebPurchaseOrderDescription>");
        }
        
        /// <summary>
        /// Test MasterTablesGetReps
        /// </summary>
        [TestMethod]
        public void MasterTablesGetRepsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? activeOnly = null;
            //var response = instance.MasterTablesGetReps(activeOnly);
            //Assert.IsInstanceOf<List<TsiWebRepSummary>> (response, "response is List<TsiWebRepSummary>");
        }
        
        /// <summary>
        /// Test MasterTablesGetReps_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetReps_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? activeOnly = null;
            //var response = instance.MasterTablesGetReps_0(activeOnly);
            //Assert.IsInstanceOf<List<TsiWebRepSummary>> (response, "response is List<TsiWebRepSummary>");
        }
        
        /// <summary>
        /// Test MasterTablesGetResolutions
        /// </summary>
        [TestMethod]
        public void MasterTablesGetResolutionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetResolutions();
            //Assert.IsInstanceOf<List<TsiWebResolution>> (response, "response is List<TsiWebResolution>");
        }
        
        /// <summary>
        /// Test MasterTablesGetSICCodes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetSICCodesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetSICCodes();
            //Assert.IsInstanceOf<List<TsiWebSICCode>> (response, "response is List<TsiWebSICCode>");
        }
        
        /// <summary>
        /// Test MasterTablesGetSalesTaxCodes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetSalesTaxCodesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetSalesTaxCodes();
            //Assert.IsInstanceOf<List<TsiWebSalesTaxCode>> (response, "response is List<TsiWebSalesTaxCode>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderBriefDescriptions
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderBriefDescriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetServiceOrderBriefDescriptions();
            //Assert.IsInstanceOf<List<TsiWebServiceOrderBriefDescription>> (response, "response is List<TsiWebServiceOrderBriefDescription>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderComments
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetServiceOrderComments();
            //Assert.IsInstanceOf<List<TsiWebServiceOrderComment>> (response, "response is List<TsiWebServiceOrderComment>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderDetailComments
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderDetailCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetServiceOrderDetailComments();
            //Assert.IsInstanceOf<List<TsiWebServiceOrderDetailComment>> (response, "response is List<TsiWebServiceOrderDetailComment>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderNoteTopics
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderNoteTopicsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetServiceOrderNoteTopics(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebServiceOrderNoteTopic>> (response, "response is List<TsiWebServiceOrderNoteTopic>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderNoteTopics_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderNoteTopics_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetServiceOrderNoteTopics_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebServiceOrderNoteTopic>> (response, "response is List<TsiWebServiceOrderNoteTopic>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderPriorities
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderPrioritiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetServiceOrderPriorities();
            //Assert.IsInstanceOf<List<TsiWebServiceOrderPriority>> (response, "response is List<TsiWebServiceOrderPriority>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderProfiles
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetServiceOrderProfiles();
            //Assert.IsInstanceOf<List<TsiWebServiceOrderProfile>> (response, "response is List<TsiWebServiceOrderProfile>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderSeverities
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderSeveritiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetServiceOrderSeverities();
            //Assert.IsInstanceOf<List<TsiWebServiceOrderSeverity>> (response, "response is List<TsiWebServiceOrderSeverity>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderStatuses
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderStatusesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetServiceOrderStatuses(excludeSystemEntries);
            //Assert.IsInstanceOf<TsiWebServiceOrderStatus> (response, "response is TsiWebServiceOrderStatus");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderStatuses_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderStatuses_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetServiceOrderStatuses_0(excludeSystemEntries);
            //Assert.IsInstanceOf<TsiWebServiceOrderStatus> (response, "response is TsiWebServiceOrderStatus");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderTemplates
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetServiceOrderTemplates();
            //Assert.IsInstanceOf<List<TsiWebServiceOrderTemplate>> (response, "response is List<TsiWebServiceOrderTemplate>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetServiceOrderTypes(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebServiceOrderType>> (response, "response is List<TsiWebServiceOrderType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceOrderTypes_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceOrderTypes_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetServiceOrderTypes_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebServiceOrderType>> (response, "response is List<TsiWebServiceOrderType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetServiceZones
        /// </summary>
        [TestMethod]
        public void MasterTablesGetServiceZonesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetServiceZones();
            //Assert.IsInstanceOf<List<TsiWebServiceZone>> (response, "response is List<TsiWebServiceZone>");
        }
        
        /// <summary>
        /// Test MasterTablesGetShippers
        /// </summary>
        [TestMethod]
        public void MasterTablesGetShippersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetShippers();
            //Assert.IsInstanceOf<List<TsiWebShipper>> (response, "response is List<TsiWebShipper>");
        }
        
        /// <summary>
        /// Test MasterTablesGetShippingMethods
        /// </summary>
        [TestMethod]
        public void MasterTablesGetShippingMethodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetShippingMethods();
            //Assert.IsInstanceOf<List<TsiWebShippingMethod>> (response, "response is List<TsiWebShippingMethod>");
        }
        
        /// <summary>
        /// Test MasterTablesGetStates
        /// </summary>
        [TestMethod]
        public void MasterTablesGetStatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetStates(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebState>> (response, "response is List<TsiWebState>");
        }
        
        /// <summary>
        /// Test MasterTablesGetStates_0
        /// </summary>
        [TestMethod]
        public void MasterTablesGetStates_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? excludeSystemEntries = null;
            //var response = instance.MasterTablesGetStates_0(excludeSystemEntries);
            //Assert.IsInstanceOf<List<TsiWebState>> (response, "response is List<TsiWebState>");
        }
        
        /// <summary>
        /// Test MasterTablesGetSubContractors
        /// </summary>
        [TestMethod]
        public void MasterTablesGetSubContractorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetSubContractors();
            //Assert.IsInstanceOf<List<TsiWebSubContractor>> (response, "response is List<TsiWebSubContractor>");
        }
        
        /// <summary>
        /// Test MasterTablesGetSupportedSystems
        /// </summary>
        [TestMethod]
        public void MasterTablesGetSupportedSystemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetSupportedSystems();
            //Assert.IsInstanceOf<List<TsiWebSupportedSystem>> (response, "response is List<TsiWebSupportedSystem>");
        }
        
        /// <summary>
        /// Test MasterTablesGetSymptoms
        /// </summary>
        [TestMethod]
        public void MasterTablesGetSymptomsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetSymptoms();
            //Assert.IsInstanceOf<List<TsiWebSymptom>> (response, "response is List<TsiWebSymptom>");
        }
        
        /// <summary>
        /// Test MasterTablesGetSystemTypes
        /// </summary>
        [TestMethod]
        public void MasterTablesGetSystemTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetSystemTypes();
            //Assert.IsInstanceOf<List<TsiWebSystemType>> (response, "response is List<TsiWebSystemType>");
        }
        
        /// <summary>
        /// Test MasterTablesGetTaskActionPlans
        /// </summary>
        [TestMethod]
        public void MasterTablesGetTaskActionPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetTaskActionPlans();
            //Assert.IsInstanceOf<List<TsiWebTaskActionPlan>> (response, "response is List<TsiWebTaskActionPlan>");
        }
        
        /// <summary>
        /// Test MasterTablesGetTaskActions
        /// </summary>
        [TestMethod]
        public void MasterTablesGetTaskActionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetTaskActions();
            //Assert.IsInstanceOf<List<TsiWebTaskAction>> (response, "response is List<TsiWebTaskAction>");
        }
        
        /// <summary>
        /// Test MasterTablesGetTaskCheckListTemplates
        /// </summary>
        [TestMethod]
        public void MasterTablesGetTaskCheckListTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetTaskCheckListTemplates();
            //Assert.IsInstanceOf<List<TsiWebTaskCheckListTemplate>> (response, "response is List<TsiWebTaskCheckListTemplate>");
        }
        
        /// <summary>
        /// Test MasterTablesGetTaskLibraries
        /// </summary>
        [TestMethod]
        public void MasterTablesGetTaskLibrariesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetTaskLibraries();
            //Assert.IsInstanceOf<List<TsiWebTaskLibrary>> (response, "response is List<TsiWebTaskLibrary>");
        }
        
        /// <summary>
        /// Test MasterTablesGetTaskResources
        /// </summary>
        [TestMethod]
        public void MasterTablesGetTaskResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetTaskResources();
            //Assert.IsInstanceOf<List<TsiWebTaskResource>> (response, "response is List<TsiWebTaskResource>");
        }
        
        /// <summary>
        /// Test MasterTablesGetTimeEntryReasons
        /// </summary>
        [TestMethod]
        public void MasterTablesGetTimeEntryReasonsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetTimeEntryReasons();
            //Assert.IsInstanceOf<List<TsiWebTimeEntryReason>> (response, "response is List<TsiWebTimeEntryReason>");
        }
        
        /// <summary>
        /// Test MasterTablesGetTitles
        /// </summary>
        [TestMethod]
        public void MasterTablesGetTitlesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.MasterTablesGetTitles();
            //Assert.IsInstanceOf<List<TsiWebTitle>> (response, "response is List<TsiWebTitle>");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateAccountCustomFieldCategory
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateAccountCustomFieldCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldCategoryRequest request = null;
            //var response = instance.MasterTablesUpdateAccountCustomFieldCategory(request);
            //Assert.IsInstanceOf<TsiWebCustomFieldCategoryResponse> (response, "response is TsiWebCustomFieldCategoryResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateContactCustomFieldCategory
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateContactCustomFieldCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldCategoryRequest request = null;
            //var response = instance.MasterTablesUpdateContactCustomFieldCategory(request);
            //Assert.IsInstanceOf<TsiWebCustomFieldCategoryResponse> (response, "response is TsiWebCustomFieldCategoryResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateContractMeter
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateContractMeterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateEntryModel model = null;
            //var response = instance.MasterTablesUpdateContractMeter(model);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateContractMeterGroup
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateContractMeterGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateEntryModel model = null;
            //var response = instance.MasterTablesUpdateContractMeterGroup(model);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateCustomFieldDefinition
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateCustomFieldDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? customFieldID = null;
            //TsiWebCustomFieldDefinitionModel model = null;
            //var response = instance.MasterTablesUpdateCustomFieldDefinition(customFieldID, model);
            //Assert.IsInstanceOf<TsiWebCustomFieldDefinitionResponse> (response, "response is TsiWebCustomFieldDefinitionResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateExpensePaymentType
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateExpensePaymentTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateExpensePaymentTypeRequest request = null;
            //var response = instance.MasterTablesUpdateExpensePaymentType(request);
            //Assert.IsInstanceOf<TsiWebExpensePaymentTypesResponse> (response, "response is TsiWebExpensePaymentTypesResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateExpenseType
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateExpenseTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateExpenseTypeRequest request = null;
            //var response = instance.MasterTablesUpdateExpenseType(request);
            //Assert.IsInstanceOf<TsiWebExpenseTypesResponse> (response, "response is TsiWebExpenseTypesResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateJournalAction
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateJournalActionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateJournalActionRequest request = null;
            //var response = instance.MasterTablesUpdateJournalAction(request);
            //Assert.IsInstanceOf<TsiWebJournalActionsResponse> (response, "response is TsiWebJournalActionsResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateJournalTopic
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateJournalTopicTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateEntryModel model = null;
            //var response = instance.MasterTablesUpdateJournalTopic(model);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateOpportunityCustomFieldCategory
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateOpportunityCustomFieldCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldCategoryRequest request = null;
            //var response = instance.MasterTablesUpdateOpportunityCustomFieldCategory(request);
            //Assert.IsInstanceOf<TsiWebCustomFieldCategoryResponse> (response, "response is TsiWebCustomFieldCategoryResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateResolution
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateResolutionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateEntryModel model = null;
            //var response = instance.MasterTablesUpdateResolution(model);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateServiceOrderProfile
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateServiceOrderProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateEntryModel model = null;
            //var response = instance.MasterTablesUpdateServiceOrderProfile(model);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateSymptom
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateSymptomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateEntryModel model = null;
            //var response = instance.MasterTablesUpdateSymptom(model);
            //Assert.IsInstanceOf<TsiWebMasterTableResponse> (response, "response is TsiWebMasterTableResponse");
        }
        
        /// <summary>
        /// Test MasterTablesUpdateTimeEntryReason
        /// </summary>
        [TestMethod]
        public void MasterTablesUpdateTimeEntryReasonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebUpdateTimeEntryReasonRequest reason = null;
            //var response = instance.MasterTablesUpdateTimeEntryReason(reason);
            //Assert.IsInstanceOf<TsiWebTimeEntryReasonResponse> (response, "response is TsiWebTimeEntryReasonResponse");
        }
        
    }

}
