/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
//using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using Tsi.Web.Client;
using Tsi.Web.Api;
using Tsi.Web.Model;

namespace Tsi.Web.Test
{
    /// <summary>
    ///  Class for testing PriceBookApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class PriceBookApiTests
    {
        private PriceBookApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new PriceBookApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PriceBookApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PriceBookApi
            //Assert.IsInstanceOfType(typeof(PriceBookApi), instance, "instance is a PriceBookApi");
        }

        
        /// <summary>
        /// Test PriceBookAdvancedSearch
        /// </summary>
        [TestMethod]
        public void PriceBookAdvancedSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            TsiWebAdvancedSearchRequest request = new TsiWebAdvancedSearchRequest
            {
                Criteria = new List<TsiWebSearchCriteria>
                {
                    new TsiWebSearchCriteria
                    {
                        Criteria = " ", // Configuration.TestAccountName.ToString(),
                        SearchType = TsiWebSearchCriteria.Opportunity.SearchType.AccountName.ToString(),
                        MatchType =  TsiWebSearchCriteria.Opportunity.MatchType.Contains.ToString(),
                    },
                },
            };
            //var response = instance.PriceBookAdvancedSearch(request);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookCreatePriceBookItem
        /// </summary>
        [TestMethod]
        public void PriceBookCreatePriceBookItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCreatePriceBookItemModel priceBookItem = null;
            //bool? calculateClosedAssemblyCost = null;
            //var response = instance.PriceBookCreatePriceBookItem(priceBookItem, calculateClosedAssemblyCost);
            //Assert.IsInstanceOf<TsiWebPriceBookItemResponse> (response, "response is TsiWebPriceBookItemResponse");
        }
        
        /// <summary>
        /// Test PriceBookCreatePriceBookItemAssemblyDetail
        /// </summary>
        [TestMethod]
        public void PriceBookCreatePriceBookItemAssemblyDetailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //TsiWebAssemblyItem assemblyItem = null;
            //bool? recalculateClosedAssemblyCost = null;
            //var response = instance.PriceBookCreatePriceBookItemAssemblyDetail(priceBookItemNumber, assemblyItem, recalculateClosedAssemblyCost);
            //Assert.IsInstanceOf<TsiWebPriceBookItemResponse> (response, "response is TsiWebPriceBookItemResponse");
        }
        
        /// <summary>
        /// Test PriceBookCreatePriceBookItemAssemblyDetail_0
        /// </summary>
        [TestMethod]
        public void PriceBookCreatePriceBookItemAssemblyDetail_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //TsiWebAssemblyItem assemblyItem = null;
            //bool? recalculateClosedAssemblyCost = null;
            //var response = instance.PriceBookCreatePriceBookItemAssemblyDetail_0(priceBookItemNumber, assemblyItem, recalculateClosedAssemblyCost);
            //Assert.IsInstanceOf<TsiWebPriceBookItemResponse> (response, "response is TsiWebPriceBookItemResponse");
        }
        
        /// <summary>
        /// Test PriceBookCreatePriceBookItem_0
        /// </summary>
        [TestMethod]
        public void PriceBookCreatePriceBookItem_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCreatePriceBookItemModel priceBookItem = null;
            //bool? calculateClosedAssemblyCost = null;
            //var response = instance.PriceBookCreatePriceBookItem_0(priceBookItem, calculateClosedAssemblyCost);
            //Assert.IsInstanceOf<TsiWebPriceBookItemResponse> (response, "response is TsiWebPriceBookItemResponse");
        }
        
        /// <summary>
        /// Test PriceBookDeletePriceBookItemAssemblyDetail
        /// </summary>
        [TestMethod]
        public void PriceBookDeletePriceBookItemAssemblyDetailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //int? assemblyDetailNumber = null;
            //bool? recalculateClosedAssemblyCost = null;
            //var response = instance.PriceBookDeletePriceBookItemAssemblyDetail(priceBookItemNumber, assemblyDetailNumber, recalculateClosedAssemblyCost);
            //Assert.IsInstanceOf<TsiWebPriceBookItemResponse> (response, "response is TsiWebPriceBookItemResponse");
        }
        
        /// <summary>
        /// Test PriceBookGetCustomFields
        /// </summary>
        [TestMethod]
        public void PriceBookGetCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBooItemNumber = null;
            //string priceBookItemNumber = null;
            //var response = instance.PriceBookGetCustomFields(priceBooItemNumber, priceBookItemNumber);
            //Assert.IsInstanceOf<List<TsiWebCustomField>> (response, "response is List<TsiWebCustomField>");
        }
        
        /// <summary>
        /// Test PriceBookGetCustomFieldsByItemId
        /// </summary>
        [TestMethod]
        public void PriceBookGetCustomFieldsByItemIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string itemId = null;
            //var response = instance.PriceBookGetCustomFieldsByItemId(itemId);
            //Assert.IsInstanceOf<List<TsiWebCustomField>> (response, "response is List<TsiWebCustomField>");
        }
        
        /// <summary>
        /// Test PriceBookGetLocations
        /// </summary>
        [TestMethod]
        public void PriceBookGetLocationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string itemId = null;
            //var response = instance.PriceBookGetLocations(itemId);
            //Assert.IsInstanceOf<List<TsiWebLocationDetail>> (response, "response is List<TsiWebLocationDetail>");
        }
        
        /// <summary>
        /// Test PriceBookGetLocationsByPriceBookNumber
        /// </summary>
        [TestMethod]
        public void PriceBookGetLocationsByPriceBookNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //var response = instance.PriceBookGetLocationsByPriceBookNumber(priceBookItemNumber);
            //Assert.IsInstanceOf<List<TsiWebLocationDetail>> (response, "response is List<TsiWebLocationDetail>");
        }
        
        /// <summary>
        /// Test PriceBookGetMovementLogs
        /// </summary>
        [TestMethod]
        public void PriceBookGetMovementLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string itemId = null;
            //var response = instance.PriceBookGetMovementLogs(itemId);
            //Assert.IsInstanceOf<List<TsiWebMovementLog>> (response, "response is List<TsiWebMovementLog>");
        }
        
        /// <summary>
        /// Test PriceBookGetMovementLogsByPriceBookNumber
        /// </summary>
        [TestMethod]
        public void PriceBookGetMovementLogsByPriceBookNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //var response = instance.PriceBookGetMovementLogsByPriceBookNumber(priceBookItemNumber);
            //Assert.IsInstanceOf<List<TsiWebMovementLog>> (response, "response is List<TsiWebMovementLog>");
        }
        
        /// <summary>
        /// Test PriceBookGetPriceBookDetails
        /// </summary>
        [TestMethod]
        public void PriceBookGetPriceBookDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string itemId = null;
            //var response = instance.PriceBookGetPriceBookDetails(itemId);
            //Assert.IsInstanceOf<TsiWebPriceBookItemDetail> (response, "response is TsiWebPriceBookItemDetail");
        }
        
        /// <summary>
        /// Test PriceBookGetPriceBookDetailsByPriceBookNumber
        /// </summary>
        [TestMethod]
        public void PriceBookGetPriceBookDetailsByPriceBookNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //var response = instance.PriceBookGetPriceBookDetailsByPriceBookNumber(priceBookItemNumber);
            //Assert.IsInstanceOf<TsiWebPriceBookItemDetail> (response, "response is TsiWebPriceBookItemDetail");
        }
        
        /// <summary>
        /// Test PriceBookGetPriceBookSummary
        /// </summary>
        [TestMethod]
        public void PriceBookGetPriceBookSummaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string itemId = null;
            //var response = instance.PriceBookGetPriceBookSummary(itemId);
            //Assert.IsInstanceOf<TsiWebPriceBookItemSummary> (response, "response is TsiWebPriceBookItemSummary");
        }
        
        /// <summary>
        /// Test PriceBookGetPriceBookSummaryByPriceBookNumber
        /// </summary>
        [TestMethod]
        public void PriceBookGetPriceBookSummaryByPriceBookNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //var response = instance.PriceBookGetPriceBookSummaryByPriceBookNumber(priceBookItemNumber);
            //Assert.IsInstanceOf<TsiWebPriceBookItemSummary> (response, "response is TsiWebPriceBookItemSummary");
        }
        
        /// <summary>
        /// Test PriceBookSearchByCategory
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByCategoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByCategory(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookSearchByCustomField
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByCustomField(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchAccountResponse> (response, "response is TsiWebSearchAccountResponse");
        }
        
        /// <summary>
        /// Test PriceBookSearchByGlobalPricebook
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByGlobalPricebookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByGlobalPricebook(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookSearchByItemDescription
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByItemDescriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByItemDescription(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookSearchByItemId
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByItemIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //bool? activeOnly = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByItemId(criteria, activeOnly, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookSearchByItemType
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByItemTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            string criteria = TsiWebSearchCriteria.PriceBook.ItemType.M.ToString();
            int? pageRequestPageSize = null;
            int? pageRequestStartRow = null;
            var response = instance.PriceBookSearchByItemType(criteria, pageRequestPageSize, pageRequestStartRow);
            Assert.IsInstanceOfType(response, typeof(TsiWebSearchPriceBookResponse), "response is TsiWebSearchPriceBookResponse");
            Assert.IsTrue(response.PriceBookItems.Count > 0);
        }
        
        /// <summary>
        /// Test PriceBookSearchByMfgPartNumber
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByMfgPartNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByMfgPartNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookSearchByOurPartNumber
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByOurPartNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByOurPartNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookSearchByUpc
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByUpcTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByUpc(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookSearchByVendorPartNumber
        /// </summary>
        [TestMethod]
        public void PriceBookSearchByVendorPartNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.PriceBookSearchByVendorPartNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchPriceBookResponse> (response, "response is TsiWebSearchPriceBookResponse");
        }
        
        /// <summary>
        /// Test PriceBookUpdateCustomFields
        /// </summary>
        [TestMethod]
        public void PriceBookUpdateCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBooItemNumber = null;
            //List<TsiWebCustomField> customFields = null;
            //string priceBookItemNumber = null;
            //var response = instance.PriceBookUpdateCustomFields(priceBooItemNumber, customFields, priceBookItemNumber);
            //Assert.IsInstanceOf<TsiWebCustomFieldsResponse> (response, "response is TsiWebCustomFieldsResponse");
        }
        
        /// <summary>
        /// Test PriceBookUpdatePriceBookItem
        /// </summary>
        [TestMethod]
        public void PriceBookUpdatePriceBookItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //TsiWebUpdatePriceBookItemModel priceBookItem = null;
            //bool? recalculateClosedAssemblyCost = null;
            //var response = instance.PriceBookUpdatePriceBookItem(priceBookItemNumber, priceBookItem, recalculateClosedAssemblyCost);
            //Assert.IsInstanceOf<TsiWebPriceBookItemResponse> (response, "response is TsiWebPriceBookItemResponse");
        }
        
        /// <summary>
        /// Test PriceBookUpdatePriceBookItemAssemblyDetailQuantity
        /// </summary>
        [TestMethod]
        public void PriceBookUpdatePriceBookItemAssemblyDetailQuantityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //int? assemblyDetailNumber = null;
            //double? quantity = null;
            //bool? recalculateClosedAssemblyCost = null;
            //var response = instance.PriceBookUpdatePriceBookItemAssemblyDetailQuantity(priceBookItemNumber, assemblyDetailNumber, quantity, recalculateClosedAssemblyCost);
            //Assert.IsInstanceOf<TsiWebPriceBookItemResponse> (response, "response is TsiWebPriceBookItemResponse");
        }
        
        /// <summary>
        /// Test PriceBookUpdatePriceBookItem_0
        /// </summary>
        [TestMethod]
        public void PriceBookUpdatePriceBookItem_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? priceBookItemNumber = null;
            //TsiWebUpdatePriceBookItemModel priceBookItem = null;
            //bool? recalculateClosedAssemblyCost = null;
            //var response = instance.PriceBookUpdatePriceBookItem_0(priceBookItemNumber, priceBookItem, recalculateClosedAssemblyCost);
            //Assert.IsInstanceOf<TsiWebPriceBookItemResponse> (response, "response is TsiWebPriceBookItemResponse");
        }
        
    }

}
