/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
//using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using Tsi.Web.Client;
using Tsi.Web.Api;
using Tsi.Web.Model;

namespace Tsi.Web.Test
{
    /// <summary>
    ///  Class for testing TasksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class TasksApiTests
    {
        private TasksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new TasksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TasksApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TasksApi
            //Assert.IsInstanceOfType(typeof(TasksApi), instance, "instance is a TasksApi");
        }

        
        /// <summary>
        /// Test TasksAdvancedSearch
        /// </summary>
        [TestMethod]
        public void TasksAdvancedSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebAdvancedSearchRequest request = null;
            //var response = instance.TasksAdvancedSearch(request);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksCreateTask
        /// </summary>
        [TestMethod]
        public void TasksCreateTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCreateTaskModel model = null;
            //var response = instance.TasksCreateTask(model);
            //Assert.IsInstanceOf<TsiWebTasksResponse> (response, "response is TsiWebTasksResponse");
        }
        
        /// <summary>
        /// Test TasksCreateTaskCheckListItem
        /// </summary>
        [TestMethod]
        public void TasksCreateTaskCheckListItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskNumber = null;
            //TsiWebCreateTaskCheckListModel model = null;
            //var response = instance.TasksCreateTaskCheckListItem(taskNumber, model);
            //Assert.IsInstanceOf<TsiWebTaskCheckListResponse> (response, "response is TsiWebTaskCheckListResponse");
        }
        
        /// <summary>
        /// Test TasksGetCustomFields
        /// </summary>
        [TestMethod]
        public void TasksGetCustomFieldsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskNumber = null;
            //var response = instance.TasksGetCustomFields(taskNumber);
            //Assert.IsInstanceOf<List<TsiWebCustomField>> (response, "response is List<TsiWebCustomField>");
        }
        
        /// <summary>
        /// Test TasksGetTaskCheckList
        /// </summary>
        [TestMethod]
        public void TasksGetTaskCheckListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskNumber = null;
            //var response = instance.TasksGetTaskCheckList(taskNumber);
            //Assert.IsInstanceOf<List<TsiWebTaskChecklistItem>> (response, "response is List<TsiWebTaskChecklistItem>");
        }
        
        /// <summary>
        /// Test TasksGetTaskDetails
        /// </summary>
        [TestMethod]
        public void TasksGetTaskDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskNumber = null;
            //var response = instance.TasksGetTaskDetails(taskNumber);
            //Assert.IsInstanceOf<TsiWebTaskDetail> (response, "response is TsiWebTaskDetail");
        }
        
        /// <summary>
        /// Test TasksGetTaskSummary
        /// </summary>
        [TestMethod]
        public void TasksGetTaskSummaryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskNumber = null;
            //var response = instance.TasksGetTaskSummary(taskNumber);
            //Assert.IsInstanceOf<TsiWebTaskSummary> (response, "response is TsiWebTaskSummary");
        }
        
        /// <summary>
        /// Test TasksSearchByAccountName
        /// </summary>
        [TestMethod]
        public void TasksSearchByAccountNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByAccountName(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksSearchByCustomField
        /// </summary>
        [TestMethod]
        public void TasksSearchByCustomFieldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebCustomFieldSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByCustomField(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchContractResponse> (response, "response is TsiWebSearchContractResponse");
        }
        
        /// <summary>
        /// Test TasksSearchByEndDate
        /// </summary>
        [TestMethod]
        public void TasksSearchByEndDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebDateTimeSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByEndDate(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksSearchByScheduledByRep
        /// </summary>
        [TestMethod]
        public void TasksSearchByScheduledByRepTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByScheduledByRep(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksSearchByScheduledForRep
        /// </summary>
        [TestMethod]
        public void TasksSearchByScheduledForRepTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByScheduledForRep(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksSearchByStartDate
        /// </summary>
        [TestMethod]
        public void TasksSearchByStartDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebDateTimeSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByStartDate(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksSearchByTaskAction
        /// </summary>
        [TestMethod]
        public void TasksSearchByTaskActionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByTaskAction(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksSearchByTaskNumber
        /// </summary>
        [TestMethod]
        public void TasksSearchByTaskNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByTaskNumber(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksSearchByTaskType
        /// </summary>
        [TestMethod]
        public void TasksSearchByTaskTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TasksSearchByTaskType(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTaskResponse> (response, "response is TsiWebSearchTaskResponse");
        }
        
        /// <summary>
        /// Test TasksUpdateTask
        /// </summary>
        [TestMethod]
        public void TasksUpdateTaskTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskNumber = null;
            //TsiWebUpdateTaskModel model = null;
            //var response = instance.TasksUpdateTask(taskNumber, model);
            //Assert.IsInstanceOf<TsiWebTaskResponse> (response, "response is TsiWebTaskResponse");
        }
        
        /// <summary>
        /// Test TasksUpdateTaskCheckListItem
        /// </summary>
        [TestMethod]
        public void TasksUpdateTaskCheckListItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? taskNumber = null;
            //TsiWebUpdateTaskCheckListModel model = null;
            //var response = instance.TasksUpdateTaskCheckListItem(taskNumber, model);
            //Assert.IsInstanceOf<TsiWebTaskCheckListResponse> (response, "response is TsiWebTaskCheckListResponse");
        }
        
    }

}
