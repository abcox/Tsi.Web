/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
//using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using Tsi.Web.Client;
using Tsi.Web.Api;
using Tsi.Web.Model;

namespace Tsi.Web.Test
{
    /// <summary>
    ///  Class for testing TimeEntryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class TimeEntryApiTests
    {
        private TimeEntryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [TestInitialize]
        public void Init()
        {
            instance = new TimeEntryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TestCleanup]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TimeEntryApi
        /// </summary>
        [TestMethod]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TimeEntryApi
            //Assert.IsInstanceOfType(typeof(TimeEntryApi), instance, "instance is a TimeEntryApi");
        }

        
        /// <summary>
        /// Test TimeEntryAdvancedSearch
        /// </summary>
        [TestMethod]
        public void TimeEntryAdvancedSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebAdvancedSearchRequest request = null;
            //var response = instance.TimeEntryAdvancedSearch(request);
            //Assert.IsInstanceOf<TsiWebSearchTimeEntryResponse> (response, "response is TsiWebSearchTimeEntryResponse");
        }
        
        /// <summary>
        /// Test TimeEntryGetTimeEntriesByTechAssigned
        /// </summary>
        [TestMethod]
        public void TimeEntryGetTimeEntriesByTechAssignedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? techAssigned = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TimeEntryGetTimeEntriesByTechAssigned(techAssigned, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebTimeEntryResponse> (response, "response is TsiWebTimeEntryResponse");
        }
        
        /// <summary>
        /// Test TimeEntrySearchByEndDate
        /// </summary>
        [TestMethod]
        public void TimeEntrySearchByEndDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebDateTimeSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TimeEntrySearchByEndDate(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTimeEntryResponse> (response, "response is TsiWebSearchTimeEntryResponse");
        }
        
        /// <summary>
        /// Test TimeEntrySearchByStartDate
        /// </summary>
        [TestMethod]
        public void TimeEntrySearchByStartDateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TsiWebDateTimeSearchModel model = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TimeEntrySearchByStartDate(model, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTimeEntryResponse> (response, "response is TsiWebSearchTimeEntryResponse");
        }
        
        /// <summary>
        /// Test TimeEntrySearchByTimeEntryLogReason
        /// </summary>
        [TestMethod]
        public void TimeEntrySearchByTimeEntryLogReasonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TimeEntrySearchByTimeEntryLogReason(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTimeEntryResponse> (response, "response is TsiWebSearchTimeEntryResponse");
        }
        
        /// <summary>
        /// Test TimeEntrySearchByTimeEntryTEchAssigned
        /// </summary>
        [TestMethod]
        public void TimeEntrySearchByTimeEntryTEchAssignedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string criteria = null;
            //int? pageRequestPageSize = null;
            //int? pageRequestStartRow = null;
            //var response = instance.TimeEntrySearchByTimeEntryTEchAssigned(criteria, pageRequestPageSize, pageRequestStartRow);
            //Assert.IsInstanceOf<TsiWebSearchTimeEntryResponse> (response, "response is TsiWebSearchTimeEntryResponse");
        }
        
    }

}
