/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebAccountMarketingDetail
    /// </summary>
    [DataContract]
    public partial class TsiWebAccountMarketingDetail :  IEquatable<TsiWebAccountMarketingDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebAccountMarketingDetail" /> class.
        /// </summary>
        /// <param name="source">Gets or sets the account source.</param>
        /// <param name="sourceChangedDate">Gets or sets the account source changed date..</param>
        /// <param name="memo">Gets or sets the Marketing memo..</param>
        /// <param name="salesVolume">Gets or sets the sales volume..</param>
        /// <param name="numberOfEmployees">Gets or sets the number of employees..</param>
        public TsiWebAccountMarketingDetail(string source = default(string), DateTime? sourceChangedDate = default(DateTime?), string memo = default(string), double? salesVolume = default(double?), string numberOfEmployees = default(string))
        {
            this.Source = source;
            this.SourceChangedDate = sourceChangedDate;
            this.Memo = memo;
            this.SalesVolume = salesVolume;
            this.NumberOfEmployees = numberOfEmployees;
        }
        
        /// <summary>
        /// Gets or sets the account source
        /// </summary>
        /// <value>Gets or sets the account source</value>
        [DataMember(Name="Source", EmitDefaultValue=false)]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets the account source changed date.
        /// </summary>
        /// <value>Gets or sets the account source changed date.</value>
        [DataMember(Name="SourceChangedDate", EmitDefaultValue=false)]
        public DateTime? SourceChangedDate { get; set; }

        /// <summary>
        /// Gets or sets the Marketing memo.
        /// </summary>
        /// <value>Gets or sets the Marketing memo.</value>
        [DataMember(Name="Memo", EmitDefaultValue=false)]
        public string Memo { get; set; }

        /// <summary>
        /// Gets or sets the sales volume.
        /// </summary>
        /// <value>Gets or sets the sales volume.</value>
        [DataMember(Name="SalesVolume", EmitDefaultValue=false)]
        public double? SalesVolume { get; set; }

        /// <summary>
        /// Gets or sets the number of employees.
        /// </summary>
        /// <value>Gets or sets the number of employees.</value>
        [DataMember(Name="NumberOfEmployees", EmitDefaultValue=false)]
        public string NumberOfEmployees { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebAccountMarketingDetail {\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("  SourceChangedDate: ").Append(SourceChangedDate).Append("\n");
            sb.Append("  Memo: ").Append(Memo).Append("\n");
            sb.Append("  SalesVolume: ").Append(SalesVolume).Append("\n");
            sb.Append("  NumberOfEmployees: ").Append(NumberOfEmployees).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebAccountMarketingDetail);
        }

        /// <summary>
        /// Returns true if TsiWebAccountMarketingDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebAccountMarketingDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebAccountMarketingDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Source == input.Source ||
                    (this.Source != null &&
                    this.Source.Equals(input.Source))
                ) && 
                (
                    this.SourceChangedDate == input.SourceChangedDate ||
                    (this.SourceChangedDate != null &&
                    this.SourceChangedDate.Equals(input.SourceChangedDate))
                ) && 
                (
                    this.Memo == input.Memo ||
                    (this.Memo != null &&
                    this.Memo.Equals(input.Memo))
                ) && 
                (
                    this.SalesVolume == input.SalesVolume ||
                    (this.SalesVolume != null &&
                    this.SalesVolume.Equals(input.SalesVolume))
                ) && 
                (
                    this.NumberOfEmployees == input.NumberOfEmployees ||
                    (this.NumberOfEmployees != null &&
                    this.NumberOfEmployees.Equals(input.NumberOfEmployees))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Source != null)
                    hashCode = hashCode * 59 + this.Source.GetHashCode();
                if (this.SourceChangedDate != null)
                    hashCode = hashCode * 59 + this.SourceChangedDate.GetHashCode();
                if (this.Memo != null)
                    hashCode = hashCode * 59 + this.Memo.GetHashCode();
                if (this.SalesVolume != null)
                    hashCode = hashCode * 59 + this.SalesVolume.GetHashCode();
                if (this.NumberOfEmployees != null)
                    hashCode = hashCode * 59 + this.NumberOfEmployees.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
