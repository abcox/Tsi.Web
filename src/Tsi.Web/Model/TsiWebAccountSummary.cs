/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebAccountSummary
    /// </summary>
    [DataContract]
    public partial class TsiWebAccountSummary :  IEquatable<TsiWebAccountSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebAccountSummary" /> class.
        /// </summary>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="account">account.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="repName">repName.</param>
        /// <param name="repEmailAddress">repEmailAddress.</param>
        /// <param name="repPhoneNumber">repPhoneNumber.</param>
        /// <param name="primaryContactName">primaryContactName.</param>
        /// <param name="primaryContactEmailAddress">primaryContactEmailAddress.</param>
        /// <param name="primaryContactPhoneNumber">primaryContactPhoneNumber.</param>
        /// <param name="relatedAccounts">relatedAccounts.</param>
        /// <param name="parentAccountNumber">parentAccountNumber.</param>
        /// <param name="journalEntries">journalEntries.</param>
        /// <param name="openInvoices">openInvoices.</param>
        /// <param name="openQuotes">openQuotes.</param>
        /// <param name="openOpportunities">openOpportunities.</param>
        /// <param name="openProjectCount">openProjectCount.</param>
        /// <param name="openServiceOrders">openServiceOrders.</param>
        /// <param name="pastDueTasks">pastDueTasks.</param>
        /// <param name="openRMAs">openRMAs.</param>
        /// <param name="numberOfContacts">numberOfContacts.</param>
        public TsiWebAccountSummary(int? accountNumber = default(int?), TsiWebAccount account = default(TsiWebAccount), string phoneNumber = default(string), string faxNumber = default(string), string repName = default(string), string repEmailAddress = default(string), string repPhoneNumber = default(string), string primaryContactName = default(string), string primaryContactEmailAddress = default(string), string primaryContactPhoneNumber = default(string), int? relatedAccounts = default(int?), int? parentAccountNumber = default(int?), int? journalEntries = default(int?), int? openInvoices = default(int?), int? openQuotes = default(int?), int? openOpportunities = default(int?), int? openProjectCount = default(int?), int? openServiceOrders = default(int?), int? pastDueTasks = default(int?), int? openRMAs = default(int?), int? numberOfContacts = default(int?))
        {
            this.AccountNumber = accountNumber;
            this.Account = account;
            this.PhoneNumber = phoneNumber;
            this.FaxNumber = faxNumber;
            this.RepName = repName;
            this.RepEmailAddress = repEmailAddress;
            this.RepPhoneNumber = repPhoneNumber;
            this.PrimaryContactName = primaryContactName;
            this.PrimaryContactEmailAddress = primaryContactEmailAddress;
            this.PrimaryContactPhoneNumber = primaryContactPhoneNumber;
            this.RelatedAccounts = relatedAccounts;
            this.ParentAccountNumber = parentAccountNumber;
            this.JournalEntries = journalEntries;
            this.OpenInvoices = openInvoices;
            this.OpenQuotes = openQuotes;
            this.OpenOpportunities = openOpportunities;
            this.OpenProjectCount = openProjectCount;
            this.OpenServiceOrders = openServiceOrders;
            this.PastDueTasks = pastDueTasks;
            this.OpenRMAs = openRMAs;
            this.NumberOfContacts = numberOfContacts;
        }
        
        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets Account
        /// </summary>
        [DataMember(Name="Account", EmitDefaultValue=false)]
        public TsiWebAccount Account { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="PhoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="FaxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets RepName
        /// </summary>
        [DataMember(Name="RepName", EmitDefaultValue=false)]
        public string RepName { get; set; }

        /// <summary>
        /// Gets or Sets RepEmailAddress
        /// </summary>
        [DataMember(Name="RepEmailAddress", EmitDefaultValue=false)]
        public string RepEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets RepPhoneNumber
        /// </summary>
        [DataMember(Name="RepPhoneNumber", EmitDefaultValue=false)]
        public string RepPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContactName
        /// </summary>
        [DataMember(Name="PrimaryContactName", EmitDefaultValue=false)]
        public string PrimaryContactName { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContactEmailAddress
        /// </summary>
        [DataMember(Name="PrimaryContactEmailAddress", EmitDefaultValue=false)]
        public string PrimaryContactEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryContactPhoneNumber
        /// </summary>
        [DataMember(Name="PrimaryContactPhoneNumber", EmitDefaultValue=false)]
        public string PrimaryContactPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets RelatedAccounts
        /// </summary>
        [DataMember(Name="RelatedAccounts", EmitDefaultValue=false)]
        public int? RelatedAccounts { get; set; }

        /// <summary>
        /// Gets or Sets ParentAccountNumber
        /// </summary>
        [DataMember(Name="ParentAccountNumber", EmitDefaultValue=false)]
        public int? ParentAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets JournalEntries
        /// </summary>
        [DataMember(Name="JournalEntries", EmitDefaultValue=false)]
        public int? JournalEntries { get; set; }

        /// <summary>
        /// Gets or Sets OpenInvoices
        /// </summary>
        [DataMember(Name="OpenInvoices", EmitDefaultValue=false)]
        public int? OpenInvoices { get; set; }

        /// <summary>
        /// Gets or Sets OpenQuotes
        /// </summary>
        [DataMember(Name="OpenQuotes", EmitDefaultValue=false)]
        public int? OpenQuotes { get; set; }

        /// <summary>
        /// Gets or Sets OpenOpportunities
        /// </summary>
        [DataMember(Name="OpenOpportunities", EmitDefaultValue=false)]
        public int? OpenOpportunities { get; set; }

        /// <summary>
        /// Gets or Sets OpenProjectCount
        /// </summary>
        [DataMember(Name="OpenProjectCount", EmitDefaultValue=false)]
        public int? OpenProjectCount { get; set; }

        /// <summary>
        /// Gets or Sets OpenServiceOrders
        /// </summary>
        [DataMember(Name="OpenServiceOrders", EmitDefaultValue=false)]
        public int? OpenServiceOrders { get; set; }

        /// <summary>
        /// Gets or Sets PastDueTasks
        /// </summary>
        [DataMember(Name="PastDueTasks", EmitDefaultValue=false)]
        public int? PastDueTasks { get; set; }

        /// <summary>
        /// Gets or Sets OpenRMAs
        /// </summary>
        [DataMember(Name="OpenRMAs", EmitDefaultValue=false)]
        public int? OpenRMAs { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfContacts
        /// </summary>
        [DataMember(Name="NumberOfContacts", EmitDefaultValue=false)]
        public int? NumberOfContacts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebAccountSummary {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  Account: ").Append(Account).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  RepName: ").Append(RepName).Append("\n");
            sb.Append("  RepEmailAddress: ").Append(RepEmailAddress).Append("\n");
            sb.Append("  RepPhoneNumber: ").Append(RepPhoneNumber).Append("\n");
            sb.Append("  PrimaryContactName: ").Append(PrimaryContactName).Append("\n");
            sb.Append("  PrimaryContactEmailAddress: ").Append(PrimaryContactEmailAddress).Append("\n");
            sb.Append("  PrimaryContactPhoneNumber: ").Append(PrimaryContactPhoneNumber).Append("\n");
            sb.Append("  RelatedAccounts: ").Append(RelatedAccounts).Append("\n");
            sb.Append("  ParentAccountNumber: ").Append(ParentAccountNumber).Append("\n");
            sb.Append("  JournalEntries: ").Append(JournalEntries).Append("\n");
            sb.Append("  OpenInvoices: ").Append(OpenInvoices).Append("\n");
            sb.Append("  OpenQuotes: ").Append(OpenQuotes).Append("\n");
            sb.Append("  OpenOpportunities: ").Append(OpenOpportunities).Append("\n");
            sb.Append("  OpenProjectCount: ").Append(OpenProjectCount).Append("\n");
            sb.Append("  OpenServiceOrders: ").Append(OpenServiceOrders).Append("\n");
            sb.Append("  PastDueTasks: ").Append(PastDueTasks).Append("\n");
            sb.Append("  OpenRMAs: ").Append(OpenRMAs).Append("\n");
            sb.Append("  NumberOfContacts: ").Append(NumberOfContacts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebAccountSummary);
        }

        /// <summary>
        /// Returns true if TsiWebAccountSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebAccountSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebAccountSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.Account == input.Account ||
                    (this.Account != null &&
                    this.Account.Equals(input.Account))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.RepName == input.RepName ||
                    (this.RepName != null &&
                    this.RepName.Equals(input.RepName))
                ) && 
                (
                    this.RepEmailAddress == input.RepEmailAddress ||
                    (this.RepEmailAddress != null &&
                    this.RepEmailAddress.Equals(input.RepEmailAddress))
                ) && 
                (
                    this.RepPhoneNumber == input.RepPhoneNumber ||
                    (this.RepPhoneNumber != null &&
                    this.RepPhoneNumber.Equals(input.RepPhoneNumber))
                ) && 
                (
                    this.PrimaryContactName == input.PrimaryContactName ||
                    (this.PrimaryContactName != null &&
                    this.PrimaryContactName.Equals(input.PrimaryContactName))
                ) && 
                (
                    this.PrimaryContactEmailAddress == input.PrimaryContactEmailAddress ||
                    (this.PrimaryContactEmailAddress != null &&
                    this.PrimaryContactEmailAddress.Equals(input.PrimaryContactEmailAddress))
                ) && 
                (
                    this.PrimaryContactPhoneNumber == input.PrimaryContactPhoneNumber ||
                    (this.PrimaryContactPhoneNumber != null &&
                    this.PrimaryContactPhoneNumber.Equals(input.PrimaryContactPhoneNumber))
                ) && 
                (
                    this.RelatedAccounts == input.RelatedAccounts ||
                    (this.RelatedAccounts != null &&
                    this.RelatedAccounts.Equals(input.RelatedAccounts))
                ) && 
                (
                    this.ParentAccountNumber == input.ParentAccountNumber ||
                    (this.ParentAccountNumber != null &&
                    this.ParentAccountNumber.Equals(input.ParentAccountNumber))
                ) && 
                (
                    this.JournalEntries == input.JournalEntries ||
                    (this.JournalEntries != null &&
                    this.JournalEntries.Equals(input.JournalEntries))
                ) && 
                (
                    this.OpenInvoices == input.OpenInvoices ||
                    (this.OpenInvoices != null &&
                    this.OpenInvoices.Equals(input.OpenInvoices))
                ) && 
                (
                    this.OpenQuotes == input.OpenQuotes ||
                    (this.OpenQuotes != null &&
                    this.OpenQuotes.Equals(input.OpenQuotes))
                ) && 
                (
                    this.OpenOpportunities == input.OpenOpportunities ||
                    (this.OpenOpportunities != null &&
                    this.OpenOpportunities.Equals(input.OpenOpportunities))
                ) && 
                (
                    this.OpenProjectCount == input.OpenProjectCount ||
                    (this.OpenProjectCount != null &&
                    this.OpenProjectCount.Equals(input.OpenProjectCount))
                ) && 
                (
                    this.OpenServiceOrders == input.OpenServiceOrders ||
                    (this.OpenServiceOrders != null &&
                    this.OpenServiceOrders.Equals(input.OpenServiceOrders))
                ) && 
                (
                    this.PastDueTasks == input.PastDueTasks ||
                    (this.PastDueTasks != null &&
                    this.PastDueTasks.Equals(input.PastDueTasks))
                ) && 
                (
                    this.OpenRMAs == input.OpenRMAs ||
                    (this.OpenRMAs != null &&
                    this.OpenRMAs.Equals(input.OpenRMAs))
                ) && 
                (
                    this.NumberOfContacts == input.NumberOfContacts ||
                    (this.NumberOfContacts != null &&
                    this.NumberOfContacts.Equals(input.NumberOfContacts))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.Account != null)
                    hashCode = hashCode * 59 + this.Account.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.RepName != null)
                    hashCode = hashCode * 59 + this.RepName.GetHashCode();
                if (this.RepEmailAddress != null)
                    hashCode = hashCode * 59 + this.RepEmailAddress.GetHashCode();
                if (this.RepPhoneNumber != null)
                    hashCode = hashCode * 59 + this.RepPhoneNumber.GetHashCode();
                if (this.PrimaryContactName != null)
                    hashCode = hashCode * 59 + this.PrimaryContactName.GetHashCode();
                if (this.PrimaryContactEmailAddress != null)
                    hashCode = hashCode * 59 + this.PrimaryContactEmailAddress.GetHashCode();
                if (this.PrimaryContactPhoneNumber != null)
                    hashCode = hashCode * 59 + this.PrimaryContactPhoneNumber.GetHashCode();
                if (this.RelatedAccounts != null)
                    hashCode = hashCode * 59 + this.RelatedAccounts.GetHashCode();
                if (this.ParentAccountNumber != null)
                    hashCode = hashCode * 59 + this.ParentAccountNumber.GetHashCode();
                if (this.JournalEntries != null)
                    hashCode = hashCode * 59 + this.JournalEntries.GetHashCode();
                if (this.OpenInvoices != null)
                    hashCode = hashCode * 59 + this.OpenInvoices.GetHashCode();
                if (this.OpenQuotes != null)
                    hashCode = hashCode * 59 + this.OpenQuotes.GetHashCode();
                if (this.OpenOpportunities != null)
                    hashCode = hashCode * 59 + this.OpenOpportunities.GetHashCode();
                if (this.OpenProjectCount != null)
                    hashCode = hashCode * 59 + this.OpenProjectCount.GetHashCode();
                if (this.OpenServiceOrders != null)
                    hashCode = hashCode * 59 + this.OpenServiceOrders.GetHashCode();
                if (this.PastDueTasks != null)
                    hashCode = hashCode * 59 + this.PastDueTasks.GetHashCode();
                if (this.OpenRMAs != null)
                    hashCode = hashCode * 59 + this.OpenRMAs.GetHashCode();
                if (this.NumberOfContacts != null)
                    hashCode = hashCode * 59 + this.NumberOfContacts.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
