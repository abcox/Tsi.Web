/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebAccountingDetail
    /// </summary>
    [DataContract]
    public partial class TsiWebAccountingDetail :  IEquatable<TsiWebAccountingDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebAccountingDetail" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TsiWebAccountingDetail() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebAccountingDetail" /> class.
        /// </summary>
        /// <param name="aRCustomerNumber">aRCustomerNumber.</param>
        /// <param name="salesTaxCode">salesTaxCode (required).</param>
        /// <param name="creditHoldSpecialInstructions">creditHoldSpecialInstructions.</param>
        /// <param name="accountingCompanyId">accountingCompanyId.</param>
        /// <param name="bOTaxCode">bOTaxCode.</param>
        /// <param name="bOTaxType">bOTaxType.</param>
        /// <param name="defaultPaymentType">defaultPaymentType.</param>
        /// <param name="defaultShipMethod">defaultShipMethod.</param>
        /// <param name="gSTTaxExemptId">gSTTaxExemptId.</param>
        /// <param name="taxExemptCategory">taxExemptCategory.</param>
        /// <param name="taxExemptId">taxExemptId.</param>
        /// <param name="defaultTerms">defaultTerms.</param>
        /// <param name="department">department.</param>
        /// <param name="defaultPriceLevel">defaultPriceLevel.</param>
        /// <param name="primaryBillToName">primaryBillToName.</param>
        /// <param name="primaryShipToName">primaryShipToName.</param>
        /// <param name="defaultPayMethodName">defaultPayMethodName.</param>
        /// <param name="defaultLaborRate">defaultLaborRate.</param>
        /// <param name="allowedInvoicePaymentLateDays">allowedInvoicePaymentLateDays.</param>
        /// <param name="defaultPayMethodId">defaultPayMethodId.</param>
        /// <param name="defaultPriceLevelId">defaultPriceLevelId.</param>
        /// <param name="primaryBillToId">primaryBillToId.</param>
        /// <param name="primaryShipToId">primaryShipToId.</param>
        /// <param name="addToAccountsReceiveable">addToAccountsReceiveable.</param>
        /// <param name="alwaysBillParent">alwaysBillParent.</param>
        /// <param name="applyQuantityDiscounts">applyQuantityDiscounts.</param>
        /// <param name="creditHold">creditHold.</param>
        /// <param name="enableCentralBilling">enableCentralBilling.</param>
        /// <param name="gSTExempt">gSTExempt.</param>
        /// <param name="providerTaxExempt">providerTaxExempt.</param>
        /// <param name="taxFreight">taxFreight.</param>
        /// <param name="taxLabor">taxLabor.</param>
        /// <param name="includeParentOrdersInCBIInvoices">includeParentOrdersInCBIInvoices.</param>
        public TsiWebAccountingDetail(string aRCustomerNumber = default(string), string salesTaxCode = default(string), string creditHoldSpecialInstructions = default(string), string accountingCompanyId = default(string), string bOTaxCode = default(string), string bOTaxType = default(string), string defaultPaymentType = default(string), string defaultShipMethod = default(string), string gSTTaxExemptId = default(string), string taxExemptCategory = default(string), string taxExemptId = default(string), string defaultTerms = default(string), string department = default(string), string defaultPriceLevel = default(string), string primaryBillToName = default(string), string primaryShipToName = default(string), string defaultPayMethodName = default(string), double? defaultLaborRate = default(double?), int? allowedInvoicePaymentLateDays = default(int?), int? defaultPayMethodId = default(int?), int? defaultPriceLevelId = default(int?), int? primaryBillToId = default(int?), int? primaryShipToId = default(int?), bool? addToAccountsReceiveable = default(bool?), bool? alwaysBillParent = default(bool?), bool? applyQuantityDiscounts = default(bool?), bool? creditHold = default(bool?), bool? enableCentralBilling = default(bool?), bool? gSTExempt = default(bool?), bool? providerTaxExempt = default(bool?), bool? taxFreight = default(bool?), bool? taxLabor = default(bool?), bool? includeParentOrdersInCBIInvoices = default(bool?))
        {
            // to ensure "salesTaxCode" is required (not null)
            if (salesTaxCode == null)
            {
                throw new InvalidDataException("salesTaxCode is a required property for TsiWebAccountingDetail and cannot be null");
            }
            else
            {
                this.SalesTaxCode = salesTaxCode;
            }
            this.ARCustomerNumber = aRCustomerNumber;
            this.CreditHoldSpecialInstructions = creditHoldSpecialInstructions;
            this.AccountingCompanyId = accountingCompanyId;
            this.BOTaxCode = bOTaxCode;
            this.BOTaxType = bOTaxType;
            this.DefaultPaymentType = defaultPaymentType;
            this.DefaultShipMethod = defaultShipMethod;
            this.GSTTaxExemptId = gSTTaxExemptId;
            this.TaxExemptCategory = taxExemptCategory;
            this.TaxExemptId = taxExemptId;
            this.DefaultTerms = defaultTerms;
            this.Department = department;
            this.DefaultPriceLevel = defaultPriceLevel;
            this.PrimaryBillToName = primaryBillToName;
            this.PrimaryShipToName = primaryShipToName;
            this.DefaultPayMethodName = defaultPayMethodName;
            this.DefaultLaborRate = defaultLaborRate;
            this.AllowedInvoicePaymentLateDays = allowedInvoicePaymentLateDays;
            this.DefaultPayMethodId = defaultPayMethodId;
            this.DefaultPriceLevelId = defaultPriceLevelId;
            this.PrimaryBillToId = primaryBillToId;
            this.PrimaryShipToId = primaryShipToId;
            this.AddToAccountsReceiveable = addToAccountsReceiveable;
            this.AlwaysBillParent = alwaysBillParent;
            this.ApplyQuantityDiscounts = applyQuantityDiscounts;
            this.CreditHold = creditHold;
            this.EnableCentralBilling = enableCentralBilling;
            this.GSTExempt = gSTExempt;
            this.ProviderTaxExempt = providerTaxExempt;
            this.TaxFreight = taxFreight;
            this.TaxLabor = taxLabor;
            this.IncludeParentOrdersInCBIInvoices = includeParentOrdersInCBIInvoices;
        }
        
        /// <summary>
        /// Gets or Sets ARCustomerNumber
        /// </summary>
        [DataMember(Name="ARCustomerNumber", EmitDefaultValue=false)]
        public string ARCustomerNumber { get; set; }

        /// <summary>
        /// Gets or Sets SalesTaxCode
        /// </summary>
        [DataMember(Name="SalesTaxCode", EmitDefaultValue=false)]
        public string SalesTaxCode { get; set; }

        /// <summary>
        /// Gets or Sets CreditHoldSpecialInstructions
        /// </summary>
        [DataMember(Name="CreditHoldSpecialInstructions", EmitDefaultValue=false)]
        public string CreditHoldSpecialInstructions { get; set; }

        /// <summary>
        /// Gets or Sets AccountingCompanyId
        /// </summary>
        [DataMember(Name="AccountingCompanyId", EmitDefaultValue=false)]
        public string AccountingCompanyId { get; set; }

        /// <summary>
        /// Gets or Sets BOTaxCode
        /// </summary>
        [DataMember(Name="BOTaxCode", EmitDefaultValue=false)]
        public string BOTaxCode { get; set; }

        /// <summary>
        /// Gets or Sets BOTaxType
        /// </summary>
        [DataMember(Name="BOTaxType", EmitDefaultValue=false)]
        public string BOTaxType { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPaymentType
        /// </summary>
        [DataMember(Name="DefaultPaymentType", EmitDefaultValue=false)]
        public string DefaultPaymentType { get; set; }

        /// <summary>
        /// Gets or Sets DefaultShipMethod
        /// </summary>
        [DataMember(Name="DefaultShipMethod", EmitDefaultValue=false)]
        public string DefaultShipMethod { get; set; }

        /// <summary>
        /// Gets or Sets GSTTaxExemptId
        /// </summary>
        [DataMember(Name="GSTTaxExemptId", EmitDefaultValue=false)]
        public string GSTTaxExemptId { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptCategory
        /// </summary>
        [DataMember(Name="TaxExemptCategory", EmitDefaultValue=false)]
        public string TaxExemptCategory { get; set; }

        /// <summary>
        /// Gets or Sets TaxExemptId
        /// </summary>
        [DataMember(Name="TaxExemptId", EmitDefaultValue=false)]
        public string TaxExemptId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultTerms
        /// </summary>
        [DataMember(Name="DefaultTerms", EmitDefaultValue=false)]
        public string DefaultTerms { get; set; }

        /// <summary>
        /// Gets or Sets Department
        /// </summary>
        [DataMember(Name="Department", EmitDefaultValue=false)]
        public string Department { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPriceLevel
        /// </summary>
        [DataMember(Name="DefaultPriceLevel", EmitDefaultValue=false)]
        public string DefaultPriceLevel { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryBillToName
        /// </summary>
        [DataMember(Name="PrimaryBillToName", EmitDefaultValue=false)]
        public string PrimaryBillToName { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryShipToName
        /// </summary>
        [DataMember(Name="PrimaryShipToName", EmitDefaultValue=false)]
        public string PrimaryShipToName { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPayMethodName
        /// </summary>
        [DataMember(Name="DefaultPayMethodName", EmitDefaultValue=false)]
        public string DefaultPayMethodName { get; set; }

        /// <summary>
        /// Gets or Sets DefaultLaborRate
        /// </summary>
        [DataMember(Name="DefaultLaborRate", EmitDefaultValue=false)]
        public double? DefaultLaborRate { get; set; }

        /// <summary>
        /// Gets or Sets AllowedInvoicePaymentLateDays
        /// </summary>
        [DataMember(Name="AllowedInvoicePaymentLateDays", EmitDefaultValue=false)]
        public int? AllowedInvoicePaymentLateDays { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPayMethodId
        /// </summary>
        [DataMember(Name="DefaultPayMethodId", EmitDefaultValue=false)]
        public int? DefaultPayMethodId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPriceLevelId
        /// </summary>
        [DataMember(Name="DefaultPriceLevelId", EmitDefaultValue=false)]
        public int? DefaultPriceLevelId { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryBillToId
        /// </summary>
        [DataMember(Name="PrimaryBillToId", EmitDefaultValue=false)]
        public int? PrimaryBillToId { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryShipToId
        /// </summary>
        [DataMember(Name="PrimaryShipToId", EmitDefaultValue=false)]
        public int? PrimaryShipToId { get; set; }

        /// <summary>
        /// Gets or Sets AddToAccountsReceiveable
        /// </summary>
        [DataMember(Name="AddToAccountsReceiveable", EmitDefaultValue=false)]
        public bool? AddToAccountsReceiveable { get; set; }

        /// <summary>
        /// Gets or Sets AlwaysBillParent
        /// </summary>
        [DataMember(Name="AlwaysBillParent", EmitDefaultValue=false)]
        public bool? AlwaysBillParent { get; set; }

        /// <summary>
        /// Gets or Sets ApplyQuantityDiscounts
        /// </summary>
        [DataMember(Name="ApplyQuantityDiscounts", EmitDefaultValue=false)]
        public bool? ApplyQuantityDiscounts { get; set; }

        /// <summary>
        /// Gets or Sets CreditHold
        /// </summary>
        [DataMember(Name="CreditHold", EmitDefaultValue=false)]
        public bool? CreditHold { get; set; }

        /// <summary>
        /// Gets or Sets EnableCentralBilling
        /// </summary>
        [DataMember(Name="EnableCentralBilling", EmitDefaultValue=false)]
        public bool? EnableCentralBilling { get; set; }

        /// <summary>
        /// Gets or Sets GSTExempt
        /// </summary>
        [DataMember(Name="GSTExempt", EmitDefaultValue=false)]
        public bool? GSTExempt { get; set; }

        /// <summary>
        /// Gets or Sets ProviderTaxExempt
        /// </summary>
        [DataMember(Name="ProviderTaxExempt", EmitDefaultValue=false)]
        public bool? ProviderTaxExempt { get; set; }

        /// <summary>
        /// Gets or Sets TaxFreight
        /// </summary>
        [DataMember(Name="TaxFreight", EmitDefaultValue=false)]
        public bool? TaxFreight { get; set; }

        /// <summary>
        /// Gets or Sets TaxLabor
        /// </summary>
        [DataMember(Name="TaxLabor", EmitDefaultValue=false)]
        public bool? TaxLabor { get; set; }

        /// <summary>
        /// Gets or Sets IncludeParentOrdersInCBIInvoices
        /// </summary>
        [DataMember(Name="IncludeParentOrdersInCBIInvoices", EmitDefaultValue=false)]
        public bool? IncludeParentOrdersInCBIInvoices { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebAccountingDetail {\n");
            sb.Append("  ARCustomerNumber: ").Append(ARCustomerNumber).Append("\n");
            sb.Append("  SalesTaxCode: ").Append(SalesTaxCode).Append("\n");
            sb.Append("  CreditHoldSpecialInstructions: ").Append(CreditHoldSpecialInstructions).Append("\n");
            sb.Append("  AccountingCompanyId: ").Append(AccountingCompanyId).Append("\n");
            sb.Append("  BOTaxCode: ").Append(BOTaxCode).Append("\n");
            sb.Append("  BOTaxType: ").Append(BOTaxType).Append("\n");
            sb.Append("  DefaultPaymentType: ").Append(DefaultPaymentType).Append("\n");
            sb.Append("  DefaultShipMethod: ").Append(DefaultShipMethod).Append("\n");
            sb.Append("  GSTTaxExemptId: ").Append(GSTTaxExemptId).Append("\n");
            sb.Append("  TaxExemptCategory: ").Append(TaxExemptCategory).Append("\n");
            sb.Append("  TaxExemptId: ").Append(TaxExemptId).Append("\n");
            sb.Append("  DefaultTerms: ").Append(DefaultTerms).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("  DefaultPriceLevel: ").Append(DefaultPriceLevel).Append("\n");
            sb.Append("  PrimaryBillToName: ").Append(PrimaryBillToName).Append("\n");
            sb.Append("  PrimaryShipToName: ").Append(PrimaryShipToName).Append("\n");
            sb.Append("  DefaultPayMethodName: ").Append(DefaultPayMethodName).Append("\n");
            sb.Append("  DefaultLaborRate: ").Append(DefaultLaborRate).Append("\n");
            sb.Append("  AllowedInvoicePaymentLateDays: ").Append(AllowedInvoicePaymentLateDays).Append("\n");
            sb.Append("  DefaultPayMethodId: ").Append(DefaultPayMethodId).Append("\n");
            sb.Append("  DefaultPriceLevelId: ").Append(DefaultPriceLevelId).Append("\n");
            sb.Append("  PrimaryBillToId: ").Append(PrimaryBillToId).Append("\n");
            sb.Append("  PrimaryShipToId: ").Append(PrimaryShipToId).Append("\n");
            sb.Append("  AddToAccountsReceiveable: ").Append(AddToAccountsReceiveable).Append("\n");
            sb.Append("  AlwaysBillParent: ").Append(AlwaysBillParent).Append("\n");
            sb.Append("  ApplyQuantityDiscounts: ").Append(ApplyQuantityDiscounts).Append("\n");
            sb.Append("  CreditHold: ").Append(CreditHold).Append("\n");
            sb.Append("  EnableCentralBilling: ").Append(EnableCentralBilling).Append("\n");
            sb.Append("  GSTExempt: ").Append(GSTExempt).Append("\n");
            sb.Append("  ProviderTaxExempt: ").Append(ProviderTaxExempt).Append("\n");
            sb.Append("  TaxFreight: ").Append(TaxFreight).Append("\n");
            sb.Append("  TaxLabor: ").Append(TaxLabor).Append("\n");
            sb.Append("  IncludeParentOrdersInCBIInvoices: ").Append(IncludeParentOrdersInCBIInvoices).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebAccountingDetail);
        }

        /// <summary>
        /// Returns true if TsiWebAccountingDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebAccountingDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebAccountingDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ARCustomerNumber == input.ARCustomerNumber ||
                    (this.ARCustomerNumber != null &&
                    this.ARCustomerNumber.Equals(input.ARCustomerNumber))
                ) && 
                (
                    this.SalesTaxCode == input.SalesTaxCode ||
                    (this.SalesTaxCode != null &&
                    this.SalesTaxCode.Equals(input.SalesTaxCode))
                ) && 
                (
                    this.CreditHoldSpecialInstructions == input.CreditHoldSpecialInstructions ||
                    (this.CreditHoldSpecialInstructions != null &&
                    this.CreditHoldSpecialInstructions.Equals(input.CreditHoldSpecialInstructions))
                ) && 
                (
                    this.AccountingCompanyId == input.AccountingCompanyId ||
                    (this.AccountingCompanyId != null &&
                    this.AccountingCompanyId.Equals(input.AccountingCompanyId))
                ) && 
                (
                    this.BOTaxCode == input.BOTaxCode ||
                    (this.BOTaxCode != null &&
                    this.BOTaxCode.Equals(input.BOTaxCode))
                ) && 
                (
                    this.BOTaxType == input.BOTaxType ||
                    (this.BOTaxType != null &&
                    this.BOTaxType.Equals(input.BOTaxType))
                ) && 
                (
                    this.DefaultPaymentType == input.DefaultPaymentType ||
                    (this.DefaultPaymentType != null &&
                    this.DefaultPaymentType.Equals(input.DefaultPaymentType))
                ) && 
                (
                    this.DefaultShipMethod == input.DefaultShipMethod ||
                    (this.DefaultShipMethod != null &&
                    this.DefaultShipMethod.Equals(input.DefaultShipMethod))
                ) && 
                (
                    this.GSTTaxExemptId == input.GSTTaxExemptId ||
                    (this.GSTTaxExemptId != null &&
                    this.GSTTaxExemptId.Equals(input.GSTTaxExemptId))
                ) && 
                (
                    this.TaxExemptCategory == input.TaxExemptCategory ||
                    (this.TaxExemptCategory != null &&
                    this.TaxExemptCategory.Equals(input.TaxExemptCategory))
                ) && 
                (
                    this.TaxExemptId == input.TaxExemptId ||
                    (this.TaxExemptId != null &&
                    this.TaxExemptId.Equals(input.TaxExemptId))
                ) && 
                (
                    this.DefaultTerms == input.DefaultTerms ||
                    (this.DefaultTerms != null &&
                    this.DefaultTerms.Equals(input.DefaultTerms))
                ) && 
                (
                    this.Department == input.Department ||
                    (this.Department != null &&
                    this.Department.Equals(input.Department))
                ) && 
                (
                    this.DefaultPriceLevel == input.DefaultPriceLevel ||
                    (this.DefaultPriceLevel != null &&
                    this.DefaultPriceLevel.Equals(input.DefaultPriceLevel))
                ) && 
                (
                    this.PrimaryBillToName == input.PrimaryBillToName ||
                    (this.PrimaryBillToName != null &&
                    this.PrimaryBillToName.Equals(input.PrimaryBillToName))
                ) && 
                (
                    this.PrimaryShipToName == input.PrimaryShipToName ||
                    (this.PrimaryShipToName != null &&
                    this.PrimaryShipToName.Equals(input.PrimaryShipToName))
                ) && 
                (
                    this.DefaultPayMethodName == input.DefaultPayMethodName ||
                    (this.DefaultPayMethodName != null &&
                    this.DefaultPayMethodName.Equals(input.DefaultPayMethodName))
                ) && 
                (
                    this.DefaultLaborRate == input.DefaultLaborRate ||
                    (this.DefaultLaborRate != null &&
                    this.DefaultLaborRate.Equals(input.DefaultLaborRate))
                ) && 
                (
                    this.AllowedInvoicePaymentLateDays == input.AllowedInvoicePaymentLateDays ||
                    (this.AllowedInvoicePaymentLateDays != null &&
                    this.AllowedInvoicePaymentLateDays.Equals(input.AllowedInvoicePaymentLateDays))
                ) && 
                (
                    this.DefaultPayMethodId == input.DefaultPayMethodId ||
                    (this.DefaultPayMethodId != null &&
                    this.DefaultPayMethodId.Equals(input.DefaultPayMethodId))
                ) && 
                (
                    this.DefaultPriceLevelId == input.DefaultPriceLevelId ||
                    (this.DefaultPriceLevelId != null &&
                    this.DefaultPriceLevelId.Equals(input.DefaultPriceLevelId))
                ) && 
                (
                    this.PrimaryBillToId == input.PrimaryBillToId ||
                    (this.PrimaryBillToId != null &&
                    this.PrimaryBillToId.Equals(input.PrimaryBillToId))
                ) && 
                (
                    this.PrimaryShipToId == input.PrimaryShipToId ||
                    (this.PrimaryShipToId != null &&
                    this.PrimaryShipToId.Equals(input.PrimaryShipToId))
                ) && 
                (
                    this.AddToAccountsReceiveable == input.AddToAccountsReceiveable ||
                    (this.AddToAccountsReceiveable != null &&
                    this.AddToAccountsReceiveable.Equals(input.AddToAccountsReceiveable))
                ) && 
                (
                    this.AlwaysBillParent == input.AlwaysBillParent ||
                    (this.AlwaysBillParent != null &&
                    this.AlwaysBillParent.Equals(input.AlwaysBillParent))
                ) && 
                (
                    this.ApplyQuantityDiscounts == input.ApplyQuantityDiscounts ||
                    (this.ApplyQuantityDiscounts != null &&
                    this.ApplyQuantityDiscounts.Equals(input.ApplyQuantityDiscounts))
                ) && 
                (
                    this.CreditHold == input.CreditHold ||
                    (this.CreditHold != null &&
                    this.CreditHold.Equals(input.CreditHold))
                ) && 
                (
                    this.EnableCentralBilling == input.EnableCentralBilling ||
                    (this.EnableCentralBilling != null &&
                    this.EnableCentralBilling.Equals(input.EnableCentralBilling))
                ) && 
                (
                    this.GSTExempt == input.GSTExempt ||
                    (this.GSTExempt != null &&
                    this.GSTExempt.Equals(input.GSTExempt))
                ) && 
                (
                    this.ProviderTaxExempt == input.ProviderTaxExempt ||
                    (this.ProviderTaxExempt != null &&
                    this.ProviderTaxExempt.Equals(input.ProviderTaxExempt))
                ) && 
                (
                    this.TaxFreight == input.TaxFreight ||
                    (this.TaxFreight != null &&
                    this.TaxFreight.Equals(input.TaxFreight))
                ) && 
                (
                    this.TaxLabor == input.TaxLabor ||
                    (this.TaxLabor != null &&
                    this.TaxLabor.Equals(input.TaxLabor))
                ) && 
                (
                    this.IncludeParentOrdersInCBIInvoices == input.IncludeParentOrdersInCBIInvoices ||
                    (this.IncludeParentOrdersInCBIInvoices != null &&
                    this.IncludeParentOrdersInCBIInvoices.Equals(input.IncludeParentOrdersInCBIInvoices))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ARCustomerNumber != null)
                    hashCode = hashCode * 59 + this.ARCustomerNumber.GetHashCode();
                if (this.SalesTaxCode != null)
                    hashCode = hashCode * 59 + this.SalesTaxCode.GetHashCode();
                if (this.CreditHoldSpecialInstructions != null)
                    hashCode = hashCode * 59 + this.CreditHoldSpecialInstructions.GetHashCode();
                if (this.AccountingCompanyId != null)
                    hashCode = hashCode * 59 + this.AccountingCompanyId.GetHashCode();
                if (this.BOTaxCode != null)
                    hashCode = hashCode * 59 + this.BOTaxCode.GetHashCode();
                if (this.BOTaxType != null)
                    hashCode = hashCode * 59 + this.BOTaxType.GetHashCode();
                if (this.DefaultPaymentType != null)
                    hashCode = hashCode * 59 + this.DefaultPaymentType.GetHashCode();
                if (this.DefaultShipMethod != null)
                    hashCode = hashCode * 59 + this.DefaultShipMethod.GetHashCode();
                if (this.GSTTaxExemptId != null)
                    hashCode = hashCode * 59 + this.GSTTaxExemptId.GetHashCode();
                if (this.TaxExemptCategory != null)
                    hashCode = hashCode * 59 + this.TaxExemptCategory.GetHashCode();
                if (this.TaxExemptId != null)
                    hashCode = hashCode * 59 + this.TaxExemptId.GetHashCode();
                if (this.DefaultTerms != null)
                    hashCode = hashCode * 59 + this.DefaultTerms.GetHashCode();
                if (this.Department != null)
                    hashCode = hashCode * 59 + this.Department.GetHashCode();
                if (this.DefaultPriceLevel != null)
                    hashCode = hashCode * 59 + this.DefaultPriceLevel.GetHashCode();
                if (this.PrimaryBillToName != null)
                    hashCode = hashCode * 59 + this.PrimaryBillToName.GetHashCode();
                if (this.PrimaryShipToName != null)
                    hashCode = hashCode * 59 + this.PrimaryShipToName.GetHashCode();
                if (this.DefaultPayMethodName != null)
                    hashCode = hashCode * 59 + this.DefaultPayMethodName.GetHashCode();
                if (this.DefaultLaborRate != null)
                    hashCode = hashCode * 59 + this.DefaultLaborRate.GetHashCode();
                if (this.AllowedInvoicePaymentLateDays != null)
                    hashCode = hashCode * 59 + this.AllowedInvoicePaymentLateDays.GetHashCode();
                if (this.DefaultPayMethodId != null)
                    hashCode = hashCode * 59 + this.DefaultPayMethodId.GetHashCode();
                if (this.DefaultPriceLevelId != null)
                    hashCode = hashCode * 59 + this.DefaultPriceLevelId.GetHashCode();
                if (this.PrimaryBillToId != null)
                    hashCode = hashCode * 59 + this.PrimaryBillToId.GetHashCode();
                if (this.PrimaryShipToId != null)
                    hashCode = hashCode * 59 + this.PrimaryShipToId.GetHashCode();
                if (this.AddToAccountsReceiveable != null)
                    hashCode = hashCode * 59 + this.AddToAccountsReceiveable.GetHashCode();
                if (this.AlwaysBillParent != null)
                    hashCode = hashCode * 59 + this.AlwaysBillParent.GetHashCode();
                if (this.ApplyQuantityDiscounts != null)
                    hashCode = hashCode * 59 + this.ApplyQuantityDiscounts.GetHashCode();
                if (this.CreditHold != null)
                    hashCode = hashCode * 59 + this.CreditHold.GetHashCode();
                if (this.EnableCentralBilling != null)
                    hashCode = hashCode * 59 + this.EnableCentralBilling.GetHashCode();
                if (this.GSTExempt != null)
                    hashCode = hashCode * 59 + this.GSTExempt.GetHashCode();
                if (this.ProviderTaxExempt != null)
                    hashCode = hashCode * 59 + this.ProviderTaxExempt.GetHashCode();
                if (this.TaxFreight != null)
                    hashCode = hashCode * 59 + this.TaxFreight.GetHashCode();
                if (this.TaxLabor != null)
                    hashCode = hashCode * 59 + this.TaxLabor.GetHashCode();
                if (this.IncludeParentOrdersInCBIInvoices != null)
                    hashCode = hashCode * 59 + this.IncludeParentOrdersInCBIInvoices.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
