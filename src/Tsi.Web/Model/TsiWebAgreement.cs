/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebAgreement
    /// </summary>
    [DataContract]
    public partial class TsiWebAgreement :  IEquatable<TsiWebAgreement>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebAgreement" /> class.
        /// </summary>
        /// <param name="accountNumber">Gets or sets the AccountNumber.</param>
        /// <param name="externalProduct">Gets or sets the External Product.</param>
        /// <param name="startDate">Gets or sets the Start date.</param>
        /// <param name="endDate">Gets or sets the End Date.</param>
        /// <param name="type">Gets or sets the Type of agreement.</param>
        /// <param name="salesTaxCode">Gets or sets the sales tax codes of the agreement.</param>
        /// <param name="contractNumber">Gets or sets the Contact number.</param>
        /// <param name="lastBilledDate">Gets or sets the Last Billed Date.</param>
        /// <param name="lastPolledDate">Gets or sets the Last Polled Date.</param>
        /// <param name="invoiceComments">Gets or sets the InvoiceComments.</param>
        /// <param name="invoiceDetailFormat">Gets or sets the InvoiceDetailFormat.</param>
        /// <param name="makeAllItemsTaxExempt">Gets or sets the MakeAllItemsTaxExempt.</param>
        /// <param name="consolidatedInvoice">Gets or sets the ConsolidatedInvoice.</param>
        /// <param name="emailInvoiceFlag">Gets or sets the EmailInvoiceFlag.</param>
        /// <param name="automatedBilling">Gets or sets the AutomatedBilling.</param>
        /// <param name="billingPeriod">Gets or sets the BillingPeriod.</param>
        /// <param name="billingPeriodDescription">Gets or sets the BillingPeriodDescription.</param>
        /// <param name="nextBillingPeriod">Gets or sets the NextBillingPeriod.</param>
        /// <param name="dayToBill">Gets or sets the DayToBill.</param>
        /// <param name="dayToProcessPayment">Gets or sets the DayToProcessPayment.</param>
        /// <param name="payMethod">Gets or sets the PayMethod.</param>
        /// <param name="payMethodName">Gets or sets the PayMethodName.</param>
        /// <param name="monthlyTotal">Gets or sets the MonthlyTotal.</param>
        /// <param name="billedPeriodTotal">Gets or sets the FkPayMethods.</param>
        /// <param name="summarizedInvoiceFormat">Gets or sets the SummarizedInvoiceFormat.</param>
        /// <param name="detailedInvoiceFormat">Gets or sets the FkPayMethods.</param>
        /// <param name="totalPrice">Gets or sets the TotalPrice.</param>
        /// <param name="totalCost">Gets or sets the TotalCost.</param>
        /// <param name="dateCreated">Gets or sets the DateCreated.</param>
        /// <param name="agreementBillTo">Gets or sets the AgreementBillTo.</param>
        public TsiWebAgreement(int? accountNumber = default(int?), string externalProduct = default(string), DateTime? startDate = default(DateTime?), DateTime? endDate = default(DateTime?), string type = default(string), string salesTaxCode = default(string), int? contractNumber = default(int?), DateTime? lastBilledDate = default(DateTime?), DateTime? lastPolledDate = default(DateTime?), string invoiceComments = default(string), bool? invoiceDetailFormat = default(bool?), bool? makeAllItemsTaxExempt = default(bool?), bool? consolidatedInvoice = default(bool?), bool? emailInvoiceFlag = default(bool?), bool? automatedBilling = default(bool?), int? billingPeriod = default(int?), string billingPeriodDescription = default(string), DateTime? nextBillingPeriod = default(DateTime?), int? dayToBill = default(int?), int? dayToProcessPayment = default(int?), int? payMethod = default(int?), string payMethodName = default(string), bool? monthlyTotal = default(bool?), bool? billedPeriodTotal = default(bool?), bool? summarizedInvoiceFormat = default(bool?), bool? detailedInvoiceFormat = default(bool?), double? totalPrice = default(double?), double? totalCost = default(double?), DateTime? dateCreated = default(DateTime?), TsiWebAgreementBillTo agreementBillTo = default(TsiWebAgreementBillTo))
        {
            this.AccountNumber = accountNumber;
            this.ExternalProduct = externalProduct;
            this.StartDate = startDate;
            this.EndDate = endDate;
            this.Type = type;
            this.SalesTaxCode = salesTaxCode;
            this.ContractNumber = contractNumber;
            this.LastBilledDate = lastBilledDate;
            this.LastPolledDate = lastPolledDate;
            this.InvoiceComments = invoiceComments;
            this.InvoiceDetailFormat = invoiceDetailFormat;
            this.MakeAllItemsTaxExempt = makeAllItemsTaxExempt;
            this.ConsolidatedInvoice = consolidatedInvoice;
            this.EmailInvoiceFlag = emailInvoiceFlag;
            this.AutomatedBilling = automatedBilling;
            this.BillingPeriod = billingPeriod;
            this.BillingPeriodDescription = billingPeriodDescription;
            this.NextBillingPeriod = nextBillingPeriod;
            this.DayToBill = dayToBill;
            this.DayToProcessPayment = dayToProcessPayment;
            this.PayMethod = payMethod;
            this.PayMethodName = payMethodName;
            this.MonthlyTotal = monthlyTotal;
            this.BilledPeriodTotal = billedPeriodTotal;
            this.SummarizedInvoiceFormat = summarizedInvoiceFormat;
            this.DetailedInvoiceFormat = detailedInvoiceFormat;
            this.TotalPrice = totalPrice;
            this.TotalCost = totalCost;
            this.DateCreated = dateCreated;
            this.AgreementBillTo = agreementBillTo;
        }
        
        /// <summary>
        /// Gets or sets the AccountNumber
        /// </summary>
        /// <value>Gets or sets the AccountNumber</value>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or sets the External Product
        /// </summary>
        /// <value>Gets or sets the External Product</value>
        [DataMember(Name="ExternalProduct", EmitDefaultValue=false)]
        public string ExternalProduct { get; set; }

        /// <summary>
        /// Gets or sets the Start date
        /// </summary>
        /// <value>Gets or sets the Start date</value>
        [DataMember(Name="StartDate", EmitDefaultValue=false)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or sets the End Date
        /// </summary>
        /// <value>Gets or sets the End Date</value>
        [DataMember(Name="EndDate", EmitDefaultValue=false)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or sets the Type of agreement
        /// </summary>
        /// <value>Gets or sets the Type of agreement</value>
        [DataMember(Name="Type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the sales tax codes of the agreement
        /// </summary>
        /// <value>Gets or sets the sales tax codes of the agreement</value>
        [DataMember(Name="SalesTaxCode", EmitDefaultValue=false)]
        public string SalesTaxCode { get; set; }

        /// <summary>
        /// Gets or sets the Contact number
        /// </summary>
        /// <value>Gets or sets the Contact number</value>
        [DataMember(Name="ContractNumber", EmitDefaultValue=false)]
        public int? ContractNumber { get; set; }

        /// <summary>
        /// Gets or sets the Last Billed Date
        /// </summary>
        /// <value>Gets or sets the Last Billed Date</value>
        [DataMember(Name="LastBilledDate", EmitDefaultValue=false)]
        public DateTime? LastBilledDate { get; set; }

        /// <summary>
        /// Gets or sets the Last Polled Date
        /// </summary>
        /// <value>Gets or sets the Last Polled Date</value>
        [DataMember(Name="LastPolledDate", EmitDefaultValue=false)]
        public DateTime? LastPolledDate { get; set; }

        /// <summary>
        /// Gets or sets the InvoiceComments
        /// </summary>
        /// <value>Gets or sets the InvoiceComments</value>
        [DataMember(Name="InvoiceComments", EmitDefaultValue=false)]
        public string InvoiceComments { get; set; }

        /// <summary>
        /// Gets or sets the InvoiceDetailFormat
        /// </summary>
        /// <value>Gets or sets the InvoiceDetailFormat</value>
        [DataMember(Name="InvoiceDetailFormat", EmitDefaultValue=false)]
        public bool? InvoiceDetailFormat { get; set; }

        /// <summary>
        /// Gets or sets the MakeAllItemsTaxExempt
        /// </summary>
        /// <value>Gets or sets the MakeAllItemsTaxExempt</value>
        [DataMember(Name="MakeAllItemsTaxExempt", EmitDefaultValue=false)]
        public bool? MakeAllItemsTaxExempt { get; set; }

        /// <summary>
        /// Gets or sets the ConsolidatedInvoice
        /// </summary>
        /// <value>Gets or sets the ConsolidatedInvoice</value>
        [DataMember(Name="ConsolidatedInvoice", EmitDefaultValue=false)]
        public bool? ConsolidatedInvoice { get; set; }

        /// <summary>
        /// Gets or sets the EmailInvoiceFlag
        /// </summary>
        /// <value>Gets or sets the EmailInvoiceFlag</value>
        [DataMember(Name="EmailInvoiceFlag", EmitDefaultValue=false)]
        public bool? EmailInvoiceFlag { get; set; }

        /// <summary>
        /// Gets or sets the AutomatedBilling
        /// </summary>
        /// <value>Gets or sets the AutomatedBilling</value>
        [DataMember(Name="AutomatedBilling", EmitDefaultValue=false)]
        public bool? AutomatedBilling { get; set; }

        /// <summary>
        /// Gets or sets the BillingPeriod
        /// </summary>
        /// <value>Gets or sets the BillingPeriod</value>
        [DataMember(Name="BillingPeriod", EmitDefaultValue=false)]
        public int? BillingPeriod { get; set; }

        /// <summary>
        /// Gets or sets the BillingPeriodDescription
        /// </summary>
        /// <value>Gets or sets the BillingPeriodDescription</value>
        [DataMember(Name="BillingPeriodDescription", EmitDefaultValue=false)]
        public string BillingPeriodDescription { get; set; }

        /// <summary>
        /// Gets or sets the NextBillingPeriod
        /// </summary>
        /// <value>Gets or sets the NextBillingPeriod</value>
        [DataMember(Name="NextBillingPeriod", EmitDefaultValue=false)]
        public DateTime? NextBillingPeriod { get; set; }

        /// <summary>
        /// Gets or sets the DayToBill
        /// </summary>
        /// <value>Gets or sets the DayToBill</value>
        [DataMember(Name="DayToBill", EmitDefaultValue=false)]
        public int? DayToBill { get; set; }

        /// <summary>
        /// Gets or sets the DayToProcessPayment
        /// </summary>
        /// <value>Gets or sets the DayToProcessPayment</value>
        [DataMember(Name="DayToProcessPayment", EmitDefaultValue=false)]
        public int? DayToProcessPayment { get; set; }

        /// <summary>
        /// Gets or sets the PayMethod
        /// </summary>
        /// <value>Gets or sets the PayMethod</value>
        [DataMember(Name="PayMethod", EmitDefaultValue=false)]
        public int? PayMethod { get; set; }

        /// <summary>
        /// Gets or sets the PayMethodName
        /// </summary>
        /// <value>Gets or sets the PayMethodName</value>
        [DataMember(Name="PayMethodName", EmitDefaultValue=false)]
        public string PayMethodName { get; set; }

        /// <summary>
        /// Gets or sets the MonthlyTotal
        /// </summary>
        /// <value>Gets or sets the MonthlyTotal</value>
        [DataMember(Name="MonthlyTotal", EmitDefaultValue=false)]
        public bool? MonthlyTotal { get; set; }

        /// <summary>
        /// Gets or sets the FkPayMethods
        /// </summary>
        /// <value>Gets or sets the FkPayMethods</value>
        [DataMember(Name="BilledPeriodTotal", EmitDefaultValue=false)]
        public bool? BilledPeriodTotal { get; set; }

        /// <summary>
        /// Gets or sets the SummarizedInvoiceFormat
        /// </summary>
        /// <value>Gets or sets the SummarizedInvoiceFormat</value>
        [DataMember(Name="SummarizedInvoiceFormat", EmitDefaultValue=false)]
        public bool? SummarizedInvoiceFormat { get; set; }

        /// <summary>
        /// Gets or sets the FkPayMethods
        /// </summary>
        /// <value>Gets or sets the FkPayMethods</value>
        [DataMember(Name="DetailedInvoiceFormat", EmitDefaultValue=false)]
        public bool? DetailedInvoiceFormat { get; set; }

        /// <summary>
        /// Gets or sets the TotalPrice
        /// </summary>
        /// <value>Gets or sets the TotalPrice</value>
        [DataMember(Name="TotalPrice", EmitDefaultValue=false)]
        public double? TotalPrice { get; set; }

        /// <summary>
        /// Gets or sets the TotalCost
        /// </summary>
        /// <value>Gets or sets the TotalCost</value>
        [DataMember(Name="TotalCost", EmitDefaultValue=false)]
        public double? TotalCost { get; set; }

        /// <summary>
        /// Gets or sets the DateCreated
        /// </summary>
        /// <value>Gets or sets the DateCreated</value>
        [DataMember(Name="DateCreated", EmitDefaultValue=false)]
        public DateTime? DateCreated { get; set; }

        /// <summary>
        /// Gets or sets the AgreementBillTo
        /// </summary>
        /// <value>Gets or sets the AgreementBillTo</value>
        [DataMember(Name="AgreementBillTo", EmitDefaultValue=false)]
        public TsiWebAgreementBillTo AgreementBillTo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebAgreement {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  ExternalProduct: ").Append(ExternalProduct).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  SalesTaxCode: ").Append(SalesTaxCode).Append("\n");
            sb.Append("  ContractNumber: ").Append(ContractNumber).Append("\n");
            sb.Append("  LastBilledDate: ").Append(LastBilledDate).Append("\n");
            sb.Append("  LastPolledDate: ").Append(LastPolledDate).Append("\n");
            sb.Append("  InvoiceComments: ").Append(InvoiceComments).Append("\n");
            sb.Append("  InvoiceDetailFormat: ").Append(InvoiceDetailFormat).Append("\n");
            sb.Append("  MakeAllItemsTaxExempt: ").Append(MakeAllItemsTaxExempt).Append("\n");
            sb.Append("  ConsolidatedInvoice: ").Append(ConsolidatedInvoice).Append("\n");
            sb.Append("  EmailInvoiceFlag: ").Append(EmailInvoiceFlag).Append("\n");
            sb.Append("  AutomatedBilling: ").Append(AutomatedBilling).Append("\n");
            sb.Append("  BillingPeriod: ").Append(BillingPeriod).Append("\n");
            sb.Append("  BillingPeriodDescription: ").Append(BillingPeriodDescription).Append("\n");
            sb.Append("  NextBillingPeriod: ").Append(NextBillingPeriod).Append("\n");
            sb.Append("  DayToBill: ").Append(DayToBill).Append("\n");
            sb.Append("  DayToProcessPayment: ").Append(DayToProcessPayment).Append("\n");
            sb.Append("  PayMethod: ").Append(PayMethod).Append("\n");
            sb.Append("  PayMethodName: ").Append(PayMethodName).Append("\n");
            sb.Append("  MonthlyTotal: ").Append(MonthlyTotal).Append("\n");
            sb.Append("  BilledPeriodTotal: ").Append(BilledPeriodTotal).Append("\n");
            sb.Append("  SummarizedInvoiceFormat: ").Append(SummarizedInvoiceFormat).Append("\n");
            sb.Append("  DetailedInvoiceFormat: ").Append(DetailedInvoiceFormat).Append("\n");
            sb.Append("  TotalPrice: ").Append(TotalPrice).Append("\n");
            sb.Append("  TotalCost: ").Append(TotalCost).Append("\n");
            sb.Append("  DateCreated: ").Append(DateCreated).Append("\n");
            sb.Append("  AgreementBillTo: ").Append(AgreementBillTo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebAgreement);
        }

        /// <summary>
        /// Returns true if TsiWebAgreement instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebAgreement to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebAgreement input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.ExternalProduct == input.ExternalProduct ||
                    (this.ExternalProduct != null &&
                    this.ExternalProduct.Equals(input.ExternalProduct))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.SalesTaxCode == input.SalesTaxCode ||
                    (this.SalesTaxCode != null &&
                    this.SalesTaxCode.Equals(input.SalesTaxCode))
                ) && 
                (
                    this.ContractNumber == input.ContractNumber ||
                    (this.ContractNumber != null &&
                    this.ContractNumber.Equals(input.ContractNumber))
                ) && 
                (
                    this.LastBilledDate == input.LastBilledDate ||
                    (this.LastBilledDate != null &&
                    this.LastBilledDate.Equals(input.LastBilledDate))
                ) && 
                (
                    this.LastPolledDate == input.LastPolledDate ||
                    (this.LastPolledDate != null &&
                    this.LastPolledDate.Equals(input.LastPolledDate))
                ) && 
                (
                    this.InvoiceComments == input.InvoiceComments ||
                    (this.InvoiceComments != null &&
                    this.InvoiceComments.Equals(input.InvoiceComments))
                ) && 
                (
                    this.InvoiceDetailFormat == input.InvoiceDetailFormat ||
                    (this.InvoiceDetailFormat != null &&
                    this.InvoiceDetailFormat.Equals(input.InvoiceDetailFormat))
                ) && 
                (
                    this.MakeAllItemsTaxExempt == input.MakeAllItemsTaxExempt ||
                    (this.MakeAllItemsTaxExempt != null &&
                    this.MakeAllItemsTaxExempt.Equals(input.MakeAllItemsTaxExempt))
                ) && 
                (
                    this.ConsolidatedInvoice == input.ConsolidatedInvoice ||
                    (this.ConsolidatedInvoice != null &&
                    this.ConsolidatedInvoice.Equals(input.ConsolidatedInvoice))
                ) && 
                (
                    this.EmailInvoiceFlag == input.EmailInvoiceFlag ||
                    (this.EmailInvoiceFlag != null &&
                    this.EmailInvoiceFlag.Equals(input.EmailInvoiceFlag))
                ) && 
                (
                    this.AutomatedBilling == input.AutomatedBilling ||
                    (this.AutomatedBilling != null &&
                    this.AutomatedBilling.Equals(input.AutomatedBilling))
                ) && 
                (
                    this.BillingPeriod == input.BillingPeriod ||
                    (this.BillingPeriod != null &&
                    this.BillingPeriod.Equals(input.BillingPeriod))
                ) && 
                (
                    this.BillingPeriodDescription == input.BillingPeriodDescription ||
                    (this.BillingPeriodDescription != null &&
                    this.BillingPeriodDescription.Equals(input.BillingPeriodDescription))
                ) && 
                (
                    this.NextBillingPeriod == input.NextBillingPeriod ||
                    (this.NextBillingPeriod != null &&
                    this.NextBillingPeriod.Equals(input.NextBillingPeriod))
                ) && 
                (
                    this.DayToBill == input.DayToBill ||
                    (this.DayToBill != null &&
                    this.DayToBill.Equals(input.DayToBill))
                ) && 
                (
                    this.DayToProcessPayment == input.DayToProcessPayment ||
                    (this.DayToProcessPayment != null &&
                    this.DayToProcessPayment.Equals(input.DayToProcessPayment))
                ) && 
                (
                    this.PayMethod == input.PayMethod ||
                    (this.PayMethod != null &&
                    this.PayMethod.Equals(input.PayMethod))
                ) && 
                (
                    this.PayMethodName == input.PayMethodName ||
                    (this.PayMethodName != null &&
                    this.PayMethodName.Equals(input.PayMethodName))
                ) && 
                (
                    this.MonthlyTotal == input.MonthlyTotal ||
                    (this.MonthlyTotal != null &&
                    this.MonthlyTotal.Equals(input.MonthlyTotal))
                ) && 
                (
                    this.BilledPeriodTotal == input.BilledPeriodTotal ||
                    (this.BilledPeriodTotal != null &&
                    this.BilledPeriodTotal.Equals(input.BilledPeriodTotal))
                ) && 
                (
                    this.SummarizedInvoiceFormat == input.SummarizedInvoiceFormat ||
                    (this.SummarizedInvoiceFormat != null &&
                    this.SummarizedInvoiceFormat.Equals(input.SummarizedInvoiceFormat))
                ) && 
                (
                    this.DetailedInvoiceFormat == input.DetailedInvoiceFormat ||
                    (this.DetailedInvoiceFormat != null &&
                    this.DetailedInvoiceFormat.Equals(input.DetailedInvoiceFormat))
                ) && 
                (
                    this.TotalPrice == input.TotalPrice ||
                    (this.TotalPrice != null &&
                    this.TotalPrice.Equals(input.TotalPrice))
                ) && 
                (
                    this.TotalCost == input.TotalCost ||
                    (this.TotalCost != null &&
                    this.TotalCost.Equals(input.TotalCost))
                ) && 
                (
                    this.DateCreated == input.DateCreated ||
                    (this.DateCreated != null &&
                    this.DateCreated.Equals(input.DateCreated))
                ) && 
                (
                    this.AgreementBillTo == input.AgreementBillTo ||
                    (this.AgreementBillTo != null &&
                    this.AgreementBillTo.Equals(input.AgreementBillTo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.ExternalProduct != null)
                    hashCode = hashCode * 59 + this.ExternalProduct.GetHashCode();
                if (this.StartDate != null)
                    hashCode = hashCode * 59 + this.StartDate.GetHashCode();
                if (this.EndDate != null)
                    hashCode = hashCode * 59 + this.EndDate.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.SalesTaxCode != null)
                    hashCode = hashCode * 59 + this.SalesTaxCode.GetHashCode();
                if (this.ContractNumber != null)
                    hashCode = hashCode * 59 + this.ContractNumber.GetHashCode();
                if (this.LastBilledDate != null)
                    hashCode = hashCode * 59 + this.LastBilledDate.GetHashCode();
                if (this.LastPolledDate != null)
                    hashCode = hashCode * 59 + this.LastPolledDate.GetHashCode();
                if (this.InvoiceComments != null)
                    hashCode = hashCode * 59 + this.InvoiceComments.GetHashCode();
                if (this.InvoiceDetailFormat != null)
                    hashCode = hashCode * 59 + this.InvoiceDetailFormat.GetHashCode();
                if (this.MakeAllItemsTaxExempt != null)
                    hashCode = hashCode * 59 + this.MakeAllItemsTaxExempt.GetHashCode();
                if (this.ConsolidatedInvoice != null)
                    hashCode = hashCode * 59 + this.ConsolidatedInvoice.GetHashCode();
                if (this.EmailInvoiceFlag != null)
                    hashCode = hashCode * 59 + this.EmailInvoiceFlag.GetHashCode();
                if (this.AutomatedBilling != null)
                    hashCode = hashCode * 59 + this.AutomatedBilling.GetHashCode();
                if (this.BillingPeriod != null)
                    hashCode = hashCode * 59 + this.BillingPeriod.GetHashCode();
                if (this.BillingPeriodDescription != null)
                    hashCode = hashCode * 59 + this.BillingPeriodDescription.GetHashCode();
                if (this.NextBillingPeriod != null)
                    hashCode = hashCode * 59 + this.NextBillingPeriod.GetHashCode();
                if (this.DayToBill != null)
                    hashCode = hashCode * 59 + this.DayToBill.GetHashCode();
                if (this.DayToProcessPayment != null)
                    hashCode = hashCode * 59 + this.DayToProcessPayment.GetHashCode();
                if (this.PayMethod != null)
                    hashCode = hashCode * 59 + this.PayMethod.GetHashCode();
                if (this.PayMethodName != null)
                    hashCode = hashCode * 59 + this.PayMethodName.GetHashCode();
                if (this.MonthlyTotal != null)
                    hashCode = hashCode * 59 + this.MonthlyTotal.GetHashCode();
                if (this.BilledPeriodTotal != null)
                    hashCode = hashCode * 59 + this.BilledPeriodTotal.GetHashCode();
                if (this.SummarizedInvoiceFormat != null)
                    hashCode = hashCode * 59 + this.SummarizedInvoiceFormat.GetHashCode();
                if (this.DetailedInvoiceFormat != null)
                    hashCode = hashCode * 59 + this.DetailedInvoiceFormat.GetHashCode();
                if (this.TotalPrice != null)
                    hashCode = hashCode * 59 + this.TotalPrice.GetHashCode();
                if (this.TotalCost != null)
                    hashCode = hashCode * 59 + this.TotalCost.GetHashCode();
                if (this.DateCreated != null)
                    hashCode = hashCode * 59 + this.DateCreated.GetHashCode();
                if (this.AgreementBillTo != null)
                    hashCode = hashCode * 59 + this.AgreementBillTo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
