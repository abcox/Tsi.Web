/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebAgreementSummary
    /// </summary>
    [DataContract]
    public partial class TsiWebAgreementSummary :  IEquatable<TsiWebAgreementSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebAgreementSummary" /> class.
        /// </summary>
        /// <param name="agreementNumber">Gets or sets the AgreementNumber.</param>
        /// <param name="accountName">Gets or sets the  AccountName.</param>
        /// <param name="primaryPhone">Gets or sets the Account Primary phone.</param>
        /// <param name="primaryFax">Gets or sets the  Account Primary fax.</param>
        /// <param name="agreement">Gets or sets the Agreement.</param>
        /// <param name="additionalCharges">Gets or sets the count of Additional charges.</param>
        /// <param name="coveredAssetTypes">Gets or sets the count CoveredAssetTypes.</param>
        /// <param name="customerAssetTypes">Gets or sets the count CustomerAssetTypes.</param>
        /// <param name="internalComments">Gets or sets the InternalComments.</param>
        /// <param name="invoices">Gets or sets the count Invoices.</param>
        public TsiWebAgreementSummary(int? agreementNumber = default(int?), string accountName = default(string), string primaryPhone = default(string), string primaryFax = default(string), TsiWebAgreement agreement = default(TsiWebAgreement), int? additionalCharges = default(int?), int? coveredAssetTypes = default(int?), int? customerAssetTypes = default(int?), string internalComments = default(string), int? invoices = default(int?))
        {
            this.AgreementNumber = agreementNumber;
            this.AccountName = accountName;
            this.PrimaryPhone = primaryPhone;
            this.PrimaryFax = primaryFax;
            this.Agreement = agreement;
            this.AdditionalCharges = additionalCharges;
            this.CoveredAssetTypes = coveredAssetTypes;
            this.CustomerAssetTypes = customerAssetTypes;
            this.InternalComments = internalComments;
            this.Invoices = invoices;
        }
        
        /// <summary>
        /// Gets or sets the AgreementNumber
        /// </summary>
        /// <value>Gets or sets the AgreementNumber</value>
        [DataMember(Name="AgreementNumber", EmitDefaultValue=false)]
        public int? AgreementNumber { get; set; }

        /// <summary>
        /// Gets or sets the  AccountName
        /// </summary>
        /// <value>Gets or sets the  AccountName</value>
        [DataMember(Name="AccountName", EmitDefaultValue=false)]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or sets the Account Primary phone
        /// </summary>
        /// <value>Gets or sets the Account Primary phone</value>
        [DataMember(Name="PrimaryPhone", EmitDefaultValue=false)]
        public string PrimaryPhone { get; set; }

        /// <summary>
        /// Gets or sets the  Account Primary fax
        /// </summary>
        /// <value>Gets or sets the  Account Primary fax</value>
        [DataMember(Name="PrimaryFax", EmitDefaultValue=false)]
        public string PrimaryFax { get; set; }

        /// <summary>
        /// Gets or sets the Agreement
        /// </summary>
        /// <value>Gets or sets the Agreement</value>
        [DataMember(Name="Agreement", EmitDefaultValue=false)]
        public TsiWebAgreement Agreement { get; set; }

        /// <summary>
        /// Gets or sets the count of Additional charges
        /// </summary>
        /// <value>Gets or sets the count of Additional charges</value>
        [DataMember(Name="AdditionalCharges", EmitDefaultValue=false)]
        public int? AdditionalCharges { get; set; }

        /// <summary>
        /// Gets or sets the count CoveredAssetTypes
        /// </summary>
        /// <value>Gets or sets the count CoveredAssetTypes</value>
        [DataMember(Name="CoveredAssetTypes", EmitDefaultValue=false)]
        public int? CoveredAssetTypes { get; set; }

        /// <summary>
        /// Gets or sets the count CustomerAssetTypes
        /// </summary>
        /// <value>Gets or sets the count CustomerAssetTypes</value>
        [DataMember(Name="CustomerAssetTypes", EmitDefaultValue=false)]
        public int? CustomerAssetTypes { get; set; }

        /// <summary>
        /// Gets or sets the InternalComments
        /// </summary>
        /// <value>Gets or sets the InternalComments</value>
        [DataMember(Name="InternalComments", EmitDefaultValue=false)]
        public string InternalComments { get; set; }

        /// <summary>
        /// Gets or sets the count Invoices
        /// </summary>
        /// <value>Gets or sets the count Invoices</value>
        [DataMember(Name="Invoices", EmitDefaultValue=false)]
        public int? Invoices { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebAgreementSummary {\n");
            sb.Append("  AgreementNumber: ").Append(AgreementNumber).Append("\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  PrimaryPhone: ").Append(PrimaryPhone).Append("\n");
            sb.Append("  PrimaryFax: ").Append(PrimaryFax).Append("\n");
            sb.Append("  Agreement: ").Append(Agreement).Append("\n");
            sb.Append("  AdditionalCharges: ").Append(AdditionalCharges).Append("\n");
            sb.Append("  CoveredAssetTypes: ").Append(CoveredAssetTypes).Append("\n");
            sb.Append("  CustomerAssetTypes: ").Append(CustomerAssetTypes).Append("\n");
            sb.Append("  InternalComments: ").Append(InternalComments).Append("\n");
            sb.Append("  Invoices: ").Append(Invoices).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebAgreementSummary);
        }

        /// <summary>
        /// Returns true if TsiWebAgreementSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebAgreementSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebAgreementSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AgreementNumber == input.AgreementNumber ||
                    (this.AgreementNumber != null &&
                    this.AgreementNumber.Equals(input.AgreementNumber))
                ) && 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.PrimaryPhone == input.PrimaryPhone ||
                    (this.PrimaryPhone != null &&
                    this.PrimaryPhone.Equals(input.PrimaryPhone))
                ) && 
                (
                    this.PrimaryFax == input.PrimaryFax ||
                    (this.PrimaryFax != null &&
                    this.PrimaryFax.Equals(input.PrimaryFax))
                ) && 
                (
                    this.Agreement == input.Agreement ||
                    (this.Agreement != null &&
                    this.Agreement.Equals(input.Agreement))
                ) && 
                (
                    this.AdditionalCharges == input.AdditionalCharges ||
                    (this.AdditionalCharges != null &&
                    this.AdditionalCharges.Equals(input.AdditionalCharges))
                ) && 
                (
                    this.CoveredAssetTypes == input.CoveredAssetTypes ||
                    (this.CoveredAssetTypes != null &&
                    this.CoveredAssetTypes.Equals(input.CoveredAssetTypes))
                ) && 
                (
                    this.CustomerAssetTypes == input.CustomerAssetTypes ||
                    (this.CustomerAssetTypes != null &&
                    this.CustomerAssetTypes.Equals(input.CustomerAssetTypes))
                ) && 
                (
                    this.InternalComments == input.InternalComments ||
                    (this.InternalComments != null &&
                    this.InternalComments.Equals(input.InternalComments))
                ) && 
                (
                    this.Invoices == input.Invoices ||
                    (this.Invoices != null &&
                    this.Invoices.Equals(input.Invoices))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AgreementNumber != null)
                    hashCode = hashCode * 59 + this.AgreementNumber.GetHashCode();
                if (this.AccountName != null)
                    hashCode = hashCode * 59 + this.AccountName.GetHashCode();
                if (this.PrimaryPhone != null)
                    hashCode = hashCode * 59 + this.PrimaryPhone.GetHashCode();
                if (this.PrimaryFax != null)
                    hashCode = hashCode * 59 + this.PrimaryFax.GetHashCode();
                if (this.Agreement != null)
                    hashCode = hashCode * 59 + this.Agreement.GetHashCode();
                if (this.AdditionalCharges != null)
                    hashCode = hashCode * 59 + this.AdditionalCharges.GetHashCode();
                if (this.CoveredAssetTypes != null)
                    hashCode = hashCode * 59 + this.CoveredAssetTypes.GetHashCode();
                if (this.CustomerAssetTypes != null)
                    hashCode = hashCode * 59 + this.CustomerAssetTypes.GetHashCode();
                if (this.InternalComments != null)
                    hashCode = hashCode * 59 + this.InternalComments.GetHashCode();
                if (this.Invoices != null)
                    hashCode = hashCode * 59 + this.Invoices.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
