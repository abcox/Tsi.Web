/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebContractAccount
    /// </summary>
    [DataContract]
    public partial class TsiWebContractAccount :  IEquatable<TsiWebContractAccount>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebContractAccount" /> class.
        /// </summary>
        /// <param name="accountName">Gets or sets the AccountName.</param>
        /// <param name="accountNumber">Gets or sets the AccountNumber.</param>
        /// <param name="primaryPhoneNumber">Gets or sets the PrimaryPhoneNumber.</param>
        /// <param name="primaryFax">Gets or sets the PrimaryFax.</param>
        /// <param name="address">Gets or sets the Address.</param>
        /// <param name="city">Gets or sets the City.</param>
        /// <param name="state">Gets or sets the StartdateTime.</param>
        /// <param name="accountID">Gets or sets the StartdateTime.</param>
        public TsiWebContractAccount(string accountName = default(string), int? accountNumber = default(int?), string primaryPhoneNumber = default(string), string primaryFax = default(string), string address = default(string), string city = default(string), string state = default(string), string accountID = default(string))
        {
            this.AccountName = accountName;
            this.AccountNumber = accountNumber;
            this.PrimaryPhoneNumber = primaryPhoneNumber;
            this.PrimaryFax = primaryFax;
            this.Address = address;
            this.City = city;
            this.State = state;
            this.AccountID = accountID;
        }
        
        /// <summary>
        /// Gets or sets the AccountName
        /// </summary>
        /// <value>Gets or sets the AccountName</value>
        [DataMember(Name="AccountName", EmitDefaultValue=false)]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or sets the AccountNumber
        /// </summary>
        /// <value>Gets or sets the AccountNumber</value>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or sets the PrimaryPhoneNumber
        /// </summary>
        /// <value>Gets or sets the PrimaryPhoneNumber</value>
        [DataMember(Name="PrimaryPhoneNumber", EmitDefaultValue=false)]
        public string PrimaryPhoneNumber { get; set; }

        /// <summary>
        /// Gets or sets the PrimaryFax
        /// </summary>
        /// <value>Gets or sets the PrimaryFax</value>
        [DataMember(Name="PrimaryFax", EmitDefaultValue=false)]
        public string PrimaryFax { get; set; }

        /// <summary>
        /// Gets or sets the Address
        /// </summary>
        /// <value>Gets or sets the Address</value>
        [DataMember(Name="Address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or sets the City
        /// </summary>
        /// <value>Gets or sets the City</value>
        [DataMember(Name="City", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or sets the StartdateTime
        /// </summary>
        /// <value>Gets or sets the StartdateTime</value>
        [DataMember(Name="State", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets the StartdateTime
        /// </summary>
        /// <value>Gets or sets the StartdateTime</value>
        [DataMember(Name="AccountID", EmitDefaultValue=false)]
        public string AccountID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebContractAccount {\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  PrimaryPhoneNumber: ").Append(PrimaryPhoneNumber).Append("\n");
            sb.Append("  PrimaryFax: ").Append(PrimaryFax).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  AccountID: ").Append(AccountID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebContractAccount);
        }

        /// <summary>
        /// Returns true if TsiWebContractAccount instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebContractAccount to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebContractAccount input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.PrimaryPhoneNumber == input.PrimaryPhoneNumber ||
                    (this.PrimaryPhoneNumber != null &&
                    this.PrimaryPhoneNumber.Equals(input.PrimaryPhoneNumber))
                ) && 
                (
                    this.PrimaryFax == input.PrimaryFax ||
                    (this.PrimaryFax != null &&
                    this.PrimaryFax.Equals(input.PrimaryFax))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.AccountID == input.AccountID ||
                    (this.AccountID != null &&
                    this.AccountID.Equals(input.AccountID))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountName != null)
                    hashCode = hashCode * 59 + this.AccountName.GetHashCode();
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.PrimaryPhoneNumber != null)
                    hashCode = hashCode * 59 + this.PrimaryPhoneNumber.GetHashCode();
                if (this.PrimaryFax != null)
                    hashCode = hashCode * 59 + this.PrimaryFax.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.AccountID != null)
                    hashCode = hashCode * 59 + this.AccountID.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
