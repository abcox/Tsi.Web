/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebContractDetail
    /// </summary>
    [DataContract]
    public partial class TsiWebContractDetail :  IEquatable<TsiWebContractDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebContractDetail" /> class.
        /// </summary>
        /// <param name="contractNumber">Gets or sets the ContractNumber.</param>
        /// <param name="contractAccount">Gets or sets the ContractAccount.</param>
        /// <param name="contract">Gets or sets the Contract.</param>
        /// <param name="createdByRep">Gets or sets Created by rep.</param>
        /// <param name="assignedTechRep">Gets or sets assigned tech.</param>
        /// <param name="repToCredit">Gets or sets the rep to credit.</param>
        /// <param name="itemsCovered">Gets or sets the ItemsCovered.</param>
        /// <param name="customFields">Gets or sets the CustomFields.</param>
        public TsiWebContractDetail(int? contractNumber = default(int?), List<TsiWebContractAccount> contractAccount = default(List<TsiWebContractAccount>), TsiWebContract contract = default(TsiWebContract), TsiWebPerson createdByRep = default(TsiWebPerson), TsiWebPerson assignedTechRep = default(TsiWebPerson), TsiWebPerson repToCredit = default(TsiWebPerson), List<TsiWebItemCovered> itemsCovered = default(List<TsiWebItemCovered>), List<TsiWebCustomField> customFields = default(List<TsiWebCustomField>))
        {
            this.ContractNumber = contractNumber;
            this.ContractAccount = contractAccount;
            this.Contract = contract;
            this.CreatedByRep = createdByRep;
            this.AssignedTechRep = assignedTechRep;
            this.RepToCredit = repToCredit;
            this.ItemsCovered = itemsCovered;
            this.CustomFields = customFields;
        }
        
        /// <summary>
        /// Gets or sets the ContractNumber
        /// </summary>
        /// <value>Gets or sets the ContractNumber</value>
        [DataMember(Name="ContractNumber", EmitDefaultValue=false)]
        public int? ContractNumber { get; set; }

        /// <summary>
        /// Gets or sets the ContractAccount
        /// </summary>
        /// <value>Gets or sets the ContractAccount</value>
        [DataMember(Name="ContractAccount", EmitDefaultValue=false)]
        public List<TsiWebContractAccount> ContractAccount { get; set; }

        /// <summary>
        /// Gets or sets the Contract
        /// </summary>
        /// <value>Gets or sets the Contract</value>
        [DataMember(Name="Contract", EmitDefaultValue=false)]
        public TsiWebContract Contract { get; set; }

        /// <summary>
        /// Gets or sets Created by rep
        /// </summary>
        /// <value>Gets or sets Created by rep</value>
        [DataMember(Name="CreatedByRep", EmitDefaultValue=false)]
        public TsiWebPerson CreatedByRep { get; set; }

        /// <summary>
        /// Gets or sets assigned tech
        /// </summary>
        /// <value>Gets or sets assigned tech</value>
        [DataMember(Name="AssignedTechRep", EmitDefaultValue=false)]
        public TsiWebPerson AssignedTechRep { get; set; }

        /// <summary>
        /// Gets or sets the rep to credit
        /// </summary>
        /// <value>Gets or sets the rep to credit</value>
        [DataMember(Name="RepToCredit", EmitDefaultValue=false)]
        public TsiWebPerson RepToCredit { get; set; }

        /// <summary>
        /// Gets or sets the ItemsCovered
        /// </summary>
        /// <value>Gets or sets the ItemsCovered</value>
        [DataMember(Name="ItemsCovered", EmitDefaultValue=false)]
        public List<TsiWebItemCovered> ItemsCovered { get; set; }

        /// <summary>
        /// Gets or sets the CustomFields
        /// </summary>
        /// <value>Gets or sets the CustomFields</value>
        [DataMember(Name="CustomFields", EmitDefaultValue=false)]
        public List<TsiWebCustomField> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebContractDetail {\n");
            sb.Append("  ContractNumber: ").Append(ContractNumber).Append("\n");
            sb.Append("  ContractAccount: ").Append(ContractAccount).Append("\n");
            sb.Append("  Contract: ").Append(Contract).Append("\n");
            sb.Append("  CreatedByRep: ").Append(CreatedByRep).Append("\n");
            sb.Append("  AssignedTechRep: ").Append(AssignedTechRep).Append("\n");
            sb.Append("  RepToCredit: ").Append(RepToCredit).Append("\n");
            sb.Append("  ItemsCovered: ").Append(ItemsCovered).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebContractDetail);
        }

        /// <summary>
        /// Returns true if TsiWebContractDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebContractDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebContractDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ContractNumber == input.ContractNumber ||
                    (this.ContractNumber != null &&
                    this.ContractNumber.Equals(input.ContractNumber))
                ) && 
                (
                    this.ContractAccount == input.ContractAccount ||
                    this.ContractAccount != null &&
                    this.ContractAccount.SequenceEqual(input.ContractAccount)
                ) && 
                (
                    this.Contract == input.Contract ||
                    (this.Contract != null &&
                    this.Contract.Equals(input.Contract))
                ) && 
                (
                    this.CreatedByRep == input.CreatedByRep ||
                    (this.CreatedByRep != null &&
                    this.CreatedByRep.Equals(input.CreatedByRep))
                ) && 
                (
                    this.AssignedTechRep == input.AssignedTechRep ||
                    (this.AssignedTechRep != null &&
                    this.AssignedTechRep.Equals(input.AssignedTechRep))
                ) && 
                (
                    this.RepToCredit == input.RepToCredit ||
                    (this.RepToCredit != null &&
                    this.RepToCredit.Equals(input.RepToCredit))
                ) && 
                (
                    this.ItemsCovered == input.ItemsCovered ||
                    this.ItemsCovered != null &&
                    this.ItemsCovered.SequenceEqual(input.ItemsCovered)
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ContractNumber != null)
                    hashCode = hashCode * 59 + this.ContractNumber.GetHashCode();
                if (this.ContractAccount != null)
                    hashCode = hashCode * 59 + this.ContractAccount.GetHashCode();
                if (this.Contract != null)
                    hashCode = hashCode * 59 + this.Contract.GetHashCode();
                if (this.CreatedByRep != null)
                    hashCode = hashCode * 59 + this.CreatedByRep.GetHashCode();
                if (this.AssignedTechRep != null)
                    hashCode = hashCode * 59 + this.AssignedTechRep.GetHashCode();
                if (this.RepToCredit != null)
                    hashCode = hashCode * 59 + this.RepToCredit.GetHashCode();
                if (this.ItemsCovered != null)
                    hashCode = hashCode * 59 + this.ItemsCovered.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
