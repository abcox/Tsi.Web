/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebContractServiceOrder
    /// </summary>
    [DataContract]
    public partial class TsiWebContractServiceOrder :  IEquatable<TsiWebContractServiceOrder>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebContractServiceOrder" /> class.
        /// </summary>
        /// <param name="serviceOrderNumber">serviceOrderNumber.</param>
        /// <param name="contactName">contactName.</param>
        /// <param name="contactNumber">contactNumber.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="technicianAssigned">technicianAssigned.</param>
        /// <param name="technicianAssignedName">technicianAssignedName.</param>
        /// <param name="invoicedStatus">invoicedStatus.</param>
        /// <param name="billable">billable.</param>
        /// <param name="actualTime">actualTime.</param>
        /// <param name="customerPurchaseOrder">customerPurchaseOrder.</param>
        /// <param name="priority">priority.</param>
        /// <param name="serviceOrderType">serviceOrderType.</param>
        /// <param name="dateTimeReceived">dateTimeReceived.</param>
        /// <param name="dateTimeRequested">dateTimeRequested.</param>
        /// <param name="dateTimeOpened">dateTimeOpened.</param>
        /// <param name="dateTimeClosed">dateTimeClosed.</param>
        /// <param name="system">system.</param>
        /// <param name="reference">reference.</param>
        /// <param name="status">status.</param>
        /// <param name="briefDescription">briefDescription.</param>
        public TsiWebContractServiceOrder(int? serviceOrderNumber = default(int?), string contactName = default(string), int? contactNumber = default(int?), int? accountNumber = default(int?), int? technicianAssigned = default(int?), string technicianAssignedName = default(string), string invoicedStatus = default(string), string billable = default(string), string actualTime = default(string), string customerPurchaseOrder = default(string), string priority = default(string), string serviceOrderType = default(string), DateTime? dateTimeReceived = default(DateTime?), DateTime? dateTimeRequested = default(DateTime?), DateTime? dateTimeOpened = default(DateTime?), DateTime? dateTimeClosed = default(DateTime?), string system = default(string), string reference = default(string), string status = default(string), string briefDescription = default(string))
        {
            this.ServiceOrderNumber = serviceOrderNumber;
            this.ContactName = contactName;
            this.ContactNumber = contactNumber;
            this.AccountNumber = accountNumber;
            this.TechnicianAssigned = technicianAssigned;
            this.TechnicianAssignedName = technicianAssignedName;
            this.InvoicedStatus = invoicedStatus;
            this.Billable = billable;
            this.ActualTime = actualTime;
            this.CustomerPurchaseOrder = customerPurchaseOrder;
            this.Priority = priority;
            this.ServiceOrderType = serviceOrderType;
            this.DateTimeReceived = dateTimeReceived;
            this.DateTimeRequested = dateTimeRequested;
            this.DateTimeOpened = dateTimeOpened;
            this.DateTimeClosed = dateTimeClosed;
            this.System = system;
            this.Reference = reference;
            this.Status = status;
            this.BriefDescription = briefDescription;
        }
        
        /// <summary>
        /// Gets or Sets ServiceOrderNumber
        /// </summary>
        [DataMember(Name="ServiceOrderNumber", EmitDefaultValue=false)]
        public int? ServiceOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name="ContactName", EmitDefaultValue=false)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets ContactNumber
        /// </summary>
        [DataMember(Name="ContactNumber", EmitDefaultValue=false)]
        public int? ContactNumber { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets TechnicianAssigned
        /// </summary>
        [DataMember(Name="TechnicianAssigned", EmitDefaultValue=false)]
        public int? TechnicianAssigned { get; set; }

        /// <summary>
        /// Gets or Sets TechnicianAssignedName
        /// </summary>
        [DataMember(Name="TechnicianAssignedName", EmitDefaultValue=false)]
        public string TechnicianAssignedName { get; set; }

        /// <summary>
        /// Gets or Sets InvoicedStatus
        /// </summary>
        [DataMember(Name="InvoicedStatus", EmitDefaultValue=false)]
        public string InvoicedStatus { get; set; }

        /// <summary>
        /// Gets or Sets Billable
        /// </summary>
        [DataMember(Name="Billable", EmitDefaultValue=false)]
        public string Billable { get; set; }

        /// <summary>
        /// Gets or Sets ActualTime
        /// </summary>
        [DataMember(Name="ActualTime", EmitDefaultValue=false)]
        public string ActualTime { get; set; }

        /// <summary>
        /// Gets or Sets CustomerPurchaseOrder
        /// </summary>
        [DataMember(Name="CustomerPurchaseOrder", EmitDefaultValue=false)]
        public string CustomerPurchaseOrder { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="Priority", EmitDefaultValue=false)]
        public string Priority { get; set; }

        /// <summary>
        /// Gets or Sets ServiceOrderType
        /// </summary>
        [DataMember(Name="ServiceOrderType", EmitDefaultValue=false)]
        public string ServiceOrderType { get; set; }

        /// <summary>
        /// Gets or Sets DateTimeReceived
        /// </summary>
        [DataMember(Name="DateTimeReceived", EmitDefaultValue=false)]
        public DateTime? DateTimeReceived { get; set; }

        /// <summary>
        /// Gets or Sets DateTimeRequested
        /// </summary>
        [DataMember(Name="DateTimeRequested", EmitDefaultValue=false)]
        public DateTime? DateTimeRequested { get; set; }

        /// <summary>
        /// Gets or Sets DateTimeOpened
        /// </summary>
        [DataMember(Name="DateTimeOpened", EmitDefaultValue=false)]
        public DateTime? DateTimeOpened { get; set; }

        /// <summary>
        /// Gets or Sets DateTimeClosed
        /// </summary>
        [DataMember(Name="DateTimeClosed", EmitDefaultValue=false)]
        public DateTime? DateTimeClosed { get; set; }

        /// <summary>
        /// Gets or Sets System
        /// </summary>
        [DataMember(Name="System", EmitDefaultValue=false)]
        public string System { get; set; }

        /// <summary>
        /// Gets or Sets Reference
        /// </summary>
        [DataMember(Name="Reference", EmitDefaultValue=false)]
        public string Reference { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets BriefDescription
        /// </summary>
        [DataMember(Name="BriefDescription", EmitDefaultValue=false)]
        public string BriefDescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebContractServiceOrder {\n");
            sb.Append("  ServiceOrderNumber: ").Append(ServiceOrderNumber).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  ContactNumber: ").Append(ContactNumber).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  TechnicianAssigned: ").Append(TechnicianAssigned).Append("\n");
            sb.Append("  TechnicianAssignedName: ").Append(TechnicianAssignedName).Append("\n");
            sb.Append("  InvoicedStatus: ").Append(InvoicedStatus).Append("\n");
            sb.Append("  Billable: ").Append(Billable).Append("\n");
            sb.Append("  ActualTime: ").Append(ActualTime).Append("\n");
            sb.Append("  CustomerPurchaseOrder: ").Append(CustomerPurchaseOrder).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  ServiceOrderType: ").Append(ServiceOrderType).Append("\n");
            sb.Append("  DateTimeReceived: ").Append(DateTimeReceived).Append("\n");
            sb.Append("  DateTimeRequested: ").Append(DateTimeRequested).Append("\n");
            sb.Append("  DateTimeOpened: ").Append(DateTimeOpened).Append("\n");
            sb.Append("  DateTimeClosed: ").Append(DateTimeClosed).Append("\n");
            sb.Append("  System: ").Append(System).Append("\n");
            sb.Append("  Reference: ").Append(Reference).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  BriefDescription: ").Append(BriefDescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebContractServiceOrder);
        }

        /// <summary>
        /// Returns true if TsiWebContractServiceOrder instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebContractServiceOrder to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebContractServiceOrder input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ServiceOrderNumber == input.ServiceOrderNumber ||
                    (this.ServiceOrderNumber != null &&
                    this.ServiceOrderNumber.Equals(input.ServiceOrderNumber))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.ContactNumber == input.ContactNumber ||
                    (this.ContactNumber != null &&
                    this.ContactNumber.Equals(input.ContactNumber))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.TechnicianAssigned == input.TechnicianAssigned ||
                    (this.TechnicianAssigned != null &&
                    this.TechnicianAssigned.Equals(input.TechnicianAssigned))
                ) && 
                (
                    this.TechnicianAssignedName == input.TechnicianAssignedName ||
                    (this.TechnicianAssignedName != null &&
                    this.TechnicianAssignedName.Equals(input.TechnicianAssignedName))
                ) && 
                (
                    this.InvoicedStatus == input.InvoicedStatus ||
                    (this.InvoicedStatus != null &&
                    this.InvoicedStatus.Equals(input.InvoicedStatus))
                ) && 
                (
                    this.Billable == input.Billable ||
                    (this.Billable != null &&
                    this.Billable.Equals(input.Billable))
                ) && 
                (
                    this.ActualTime == input.ActualTime ||
                    (this.ActualTime != null &&
                    this.ActualTime.Equals(input.ActualTime))
                ) && 
                (
                    this.CustomerPurchaseOrder == input.CustomerPurchaseOrder ||
                    (this.CustomerPurchaseOrder != null &&
                    this.CustomerPurchaseOrder.Equals(input.CustomerPurchaseOrder))
                ) && 
                (
                    this.Priority == input.Priority ||
                    (this.Priority != null &&
                    this.Priority.Equals(input.Priority))
                ) && 
                (
                    this.ServiceOrderType == input.ServiceOrderType ||
                    (this.ServiceOrderType != null &&
                    this.ServiceOrderType.Equals(input.ServiceOrderType))
                ) && 
                (
                    this.DateTimeReceived == input.DateTimeReceived ||
                    (this.DateTimeReceived != null &&
                    this.DateTimeReceived.Equals(input.DateTimeReceived))
                ) && 
                (
                    this.DateTimeRequested == input.DateTimeRequested ||
                    (this.DateTimeRequested != null &&
                    this.DateTimeRequested.Equals(input.DateTimeRequested))
                ) && 
                (
                    this.DateTimeOpened == input.DateTimeOpened ||
                    (this.DateTimeOpened != null &&
                    this.DateTimeOpened.Equals(input.DateTimeOpened))
                ) && 
                (
                    this.DateTimeClosed == input.DateTimeClosed ||
                    (this.DateTimeClosed != null &&
                    this.DateTimeClosed.Equals(input.DateTimeClosed))
                ) && 
                (
                    this.System == input.System ||
                    (this.System != null &&
                    this.System.Equals(input.System))
                ) && 
                (
                    this.Reference == input.Reference ||
                    (this.Reference != null &&
                    this.Reference.Equals(input.Reference))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.BriefDescription == input.BriefDescription ||
                    (this.BriefDescription != null &&
                    this.BriefDescription.Equals(input.BriefDescription))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ServiceOrderNumber != null)
                    hashCode = hashCode * 59 + this.ServiceOrderNumber.GetHashCode();
                if (this.ContactName != null)
                    hashCode = hashCode * 59 + this.ContactName.GetHashCode();
                if (this.ContactNumber != null)
                    hashCode = hashCode * 59 + this.ContactNumber.GetHashCode();
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.TechnicianAssigned != null)
                    hashCode = hashCode * 59 + this.TechnicianAssigned.GetHashCode();
                if (this.TechnicianAssignedName != null)
                    hashCode = hashCode * 59 + this.TechnicianAssignedName.GetHashCode();
                if (this.InvoicedStatus != null)
                    hashCode = hashCode * 59 + this.InvoicedStatus.GetHashCode();
                if (this.Billable != null)
                    hashCode = hashCode * 59 + this.Billable.GetHashCode();
                if (this.ActualTime != null)
                    hashCode = hashCode * 59 + this.ActualTime.GetHashCode();
                if (this.CustomerPurchaseOrder != null)
                    hashCode = hashCode * 59 + this.CustomerPurchaseOrder.GetHashCode();
                if (this.Priority != null)
                    hashCode = hashCode * 59 + this.Priority.GetHashCode();
                if (this.ServiceOrderType != null)
                    hashCode = hashCode * 59 + this.ServiceOrderType.GetHashCode();
                if (this.DateTimeReceived != null)
                    hashCode = hashCode * 59 + this.DateTimeReceived.GetHashCode();
                if (this.DateTimeRequested != null)
                    hashCode = hashCode * 59 + this.DateTimeRequested.GetHashCode();
                if (this.DateTimeOpened != null)
                    hashCode = hashCode * 59 + this.DateTimeOpened.GetHashCode();
                if (this.DateTimeClosed != null)
                    hashCode = hashCode * 59 + this.DateTimeClosed.GetHashCode();
                if (this.System != null)
                    hashCode = hashCode * 59 + this.System.GetHashCode();
                if (this.Reference != null)
                    hashCode = hashCode * 59 + this.Reference.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.BriefDescription != null)
                    hashCode = hashCode * 59 + this.BriefDescription.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
