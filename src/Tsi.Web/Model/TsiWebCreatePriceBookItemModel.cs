/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebCreatePriceBookItemModel
    /// </summary>
    [DataContract]
    public partial class TsiWebCreatePriceBookItemModel :  IEquatable<TsiWebCreatePriceBookItemModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebCreatePriceBookItemModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TsiWebCreatePriceBookItemModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebCreatePriceBookItemModel" /> class.
        /// </summary>
        /// <param name="itemId">itemId (required).</param>
        /// <param name="item">item (required).</param>
        /// <param name="assembly">assembly.</param>
        public TsiWebCreatePriceBookItemModel(string itemId = default(string), TsiWebPriceBookItem item = default(TsiWebPriceBookItem), List<TsiWebAssemblyItem> assembly = default(List<TsiWebAssemblyItem>))
        {
            // to ensure "itemId" is required (not null)
            if (itemId == null)
            {
                throw new InvalidDataException("itemId is a required property for TsiWebCreatePriceBookItemModel and cannot be null");
            }
            else
            {
                this.ItemId = itemId;
            }
            // to ensure "item" is required (not null)
            if (item == null)
            {
                throw new InvalidDataException("item is a required property for TsiWebCreatePriceBookItemModel and cannot be null");
            }
            else
            {
                this.Item = item;
            }
            this.Assembly = assembly;
        }
        
        /// <summary>
        /// Gets or Sets ItemId
        /// </summary>
        [DataMember(Name="ItemId", EmitDefaultValue=false)]
        public string ItemId { get; set; }

        /// <summary>
        /// Gets or Sets Item
        /// </summary>
        [DataMember(Name="Item", EmitDefaultValue=false)]
        public TsiWebPriceBookItem Item { get; set; }

        /// <summary>
        /// Gets or Sets Assembly
        /// </summary>
        [DataMember(Name="Assembly", EmitDefaultValue=false)]
        public List<TsiWebAssemblyItem> Assembly { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebCreatePriceBookItemModel {\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  Item: ").Append(Item).Append("\n");
            sb.Append("  Assembly: ").Append(Assembly).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebCreatePriceBookItemModel);
        }

        /// <summary>
        /// Returns true if TsiWebCreatePriceBookItemModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebCreatePriceBookItemModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebCreatePriceBookItemModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.Item == input.Item ||
                    (this.Item != null &&
                    this.Item.Equals(input.Item))
                ) && 
                (
                    this.Assembly == input.Assembly ||
                    this.Assembly != null &&
                    this.Assembly.SequenceEqual(input.Assembly)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.Item != null)
                    hashCode = hashCode * 59 + this.Item.GetHashCode();
                if (this.Assembly != null)
                    hashCode = hashCode * 59 + this.Assembly.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
