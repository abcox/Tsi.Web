/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebCreatePurchaseOrderModel
    /// </summary>
    [DataContract]
    public partial class TsiWebCreatePurchaseOrderModel :  IEquatable<TsiWebCreatePurchaseOrderModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebCreatePurchaseOrderModel" /> class.
        /// </summary>
        /// <param name="vendorItem">vendorItem.</param>
        /// <param name="assemblyCostToUseType">Base, Average, Latest, OrderDetailEstimatedCost.</param>
        /// <param name="defaultReceivingBin">defaultReceivingBin.</param>
        /// <param name="description">description.</param>
        /// <param name="reference">reference.</param>
        /// <param name="purchaseOrderDate">purchaseOrderDate.</param>
        /// <param name="confirmedBy">confirmedBy.</param>
        /// <param name="confirmedDate">confirmedDate.</param>
        /// <param name="buyingRepNumber">buyingRepNumber.</param>
        /// <param name="comments">comments.</param>
        /// <param name="orderTerms">orderTerms.</param>
        /// <param name="freightTerms">freightTerms.</param>
        /// <param name="shippingMethod">shippingMethod.</param>
        /// <param name="updateLatestCost">updateLatestCost.</param>
        /// <param name="allowBackOrders">allowBackOrders.</param>
        /// <param name="expectedDate">expectedDate.</param>
        /// <param name="defaultReceivingLocation">defaultReceivingLocation.</param>
        /// <param name="invoiceTerms">invoiceTerms.</param>
        /// <param name="freight">freight.</param>
        /// <param name="blindShip">blindShip.</param>
        /// <param name="orderIdentificationNumber">orderIdentificationNumber.</param>
        /// <param name="trackingNumber">trackingNumber.</param>
        /// <param name="requestedRepNumber">requestedRepNumber.</param>
        /// <param name="linkAccountNumber">linkAccountNumber.</param>
        /// <param name="linkQuoteNumber">linkQuoteNumber.</param>
        /// <param name="linkServiceOrderNumber">linkServiceOrderNumber.</param>
        /// <param name="paidInFull">paidInFull.</param>
        /// <param name="internalComments">internalComments.</param>
        /// <param name="shipper">shipper.</param>
        /// <param name="shipToAddressType">shipToAddressType.</param>
        /// <param name="shipToAddressAccountNumber">shipToAddressAccountNumber.</param>
        /// <param name="alternateShipToAddressID">alternateShipToAddressID.</param>
        /// <param name="shipTo">shipTo.</param>
        /// <param name="billToAddressType">billToAddressType.</param>
        /// <param name="billToAddressAccountNumber">billToAddressAccountNumber.</param>
        /// <param name="alternateBillToAddressID">alternateBillToAddressID.</param>
        /// <param name="billTo">billTo.</param>
        /// <param name="useVendorCostInPriceBook">useVendorCostInPriceBook.</param>
        public TsiWebCreatePurchaseOrderModel(TsiWebPuchaseOrderVendorItem vendorItem = default(TsiWebPuchaseOrderVendorItem), string assemblyCostToUseType = default(string), string defaultReceivingBin = default(string), string description = default(string), string reference = default(string), SystemNullableTsiWebOptionalDateTime purchaseOrderDate = default(SystemNullableTsiWebOptionalDateTime), string confirmedBy = default(string), SystemNullableTsiWebOptionalDateTime confirmedDate = default(SystemNullableTsiWebOptionalDateTime), int? buyingRepNumber = default(int?), string comments = default(string), string orderTerms = default(string), string freightTerms = default(string), string shippingMethod = default(string), bool? updateLatestCost = default(bool?), bool? allowBackOrders = default(bool?), SystemNullableTsiWebOptionalDateTime expectedDate = default(SystemNullableTsiWebOptionalDateTime), string defaultReceivingLocation = default(string), string invoiceTerms = default(string), double? freight = default(double?), bool? blindShip = default(bool?), string orderIdentificationNumber = default(string), string trackingNumber = default(string), int? requestedRepNumber = default(int?), int? linkAccountNumber = default(int?), int? linkQuoteNumber = default(int?), int? linkServiceOrderNumber = default(int?), bool? paidInFull = default(bool?), string internalComments = default(string), string shipper = default(string), string shipToAddressType = default(string), int? shipToAddressAccountNumber = default(int?), int? alternateShipToAddressID = default(int?), TsiWebAlternateAddress shipTo = default(TsiWebAlternateAddress), string billToAddressType = default(string), int? billToAddressAccountNumber = default(int?), int? alternateBillToAddressID = default(int?), TsiWebAlternateAddress billTo = default(TsiWebAlternateAddress), bool? useVendorCostInPriceBook = default(bool?))
        {
            this.VendorItem = vendorItem;
            this.AssemblyCostToUseType = assemblyCostToUseType;
            this.DefaultReceivingBin = defaultReceivingBin;
            this.Description = description;
            this.Reference = reference;
            this.PurchaseOrderDate = purchaseOrderDate;
            this.ConfirmedBy = confirmedBy;
            this.ConfirmedDate = confirmedDate;
            this.BuyingRepNumber = buyingRepNumber;
            this.Comments = comments;
            this.OrderTerms = orderTerms;
            this.FreightTerms = freightTerms;
            this.ShippingMethod = shippingMethod;
            this.UpdateLatestCost = updateLatestCost;
            this.AllowBackOrders = allowBackOrders;
            this.ExpectedDate = expectedDate;
            this.DefaultReceivingLocation = defaultReceivingLocation;
            this.InvoiceTerms = invoiceTerms;
            this.Freight = freight;
            this.BlindShip = blindShip;
            this.OrderIdentificationNumber = orderIdentificationNumber;
            this.TrackingNumber = trackingNumber;
            this.RequestedRepNumber = requestedRepNumber;
            this.LinkAccountNumber = linkAccountNumber;
            this.LinkQuoteNumber = linkQuoteNumber;
            this.LinkServiceOrderNumber = linkServiceOrderNumber;
            this.PaidInFull = paidInFull;
            this.InternalComments = internalComments;
            this.Shipper = shipper;
            this.ShipToAddressType = shipToAddressType;
            this.ShipToAddressAccountNumber = shipToAddressAccountNumber;
            this.AlternateShipToAddressID = alternateShipToAddressID;
            this.ShipTo = shipTo;
            this.BillToAddressType = billToAddressType;
            this.BillToAddressAccountNumber = billToAddressAccountNumber;
            this.AlternateBillToAddressID = alternateBillToAddressID;
            this.BillTo = billTo;
            this.UseVendorCostInPriceBook = useVendorCostInPriceBook;
        }
        
        /// <summary>
        /// Gets or Sets VendorItem
        /// </summary>
        [DataMember(Name="VendorItem", EmitDefaultValue=false)]
        public TsiWebPuchaseOrderVendorItem VendorItem { get; set; }

        /// <summary>
        /// Base, Average, Latest, OrderDetailEstimatedCost
        /// </summary>
        /// <value>Base, Average, Latest, OrderDetailEstimatedCost</value>
        [DataMember(Name="AssemblyCostToUseType", EmitDefaultValue=false)]
        public string AssemblyCostToUseType { get; set; }

        /// <summary>
        /// Gets or Sets DefaultReceivingBin
        /// </summary>
        [DataMember(Name="DefaultReceivingBin", EmitDefaultValue=false)]
        public string DefaultReceivingBin { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Reference
        /// </summary>
        [DataMember(Name="Reference", EmitDefaultValue=false)]
        public string Reference { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderDate
        /// </summary>
        [DataMember(Name="PurchaseOrderDate", EmitDefaultValue=false)]
        public SystemNullableTsiWebOptionalDateTime PurchaseOrderDate { get; set; }

        /// <summary>
        /// Gets or Sets ConfirmedBy
        /// </summary>
        [DataMember(Name="ConfirmedBy", EmitDefaultValue=false)]
        public string ConfirmedBy { get; set; }

        /// <summary>
        /// Gets or Sets ConfirmedDate
        /// </summary>
        [DataMember(Name="ConfirmedDate", EmitDefaultValue=false)]
        public SystemNullableTsiWebOptionalDateTime ConfirmedDate { get; set; }

        /// <summary>
        /// Gets or Sets BuyingRepNumber
        /// </summary>
        [DataMember(Name="BuyingRepNumber", EmitDefaultValue=false)]
        public int? BuyingRepNumber { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="Comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets OrderTerms
        /// </summary>
        [DataMember(Name="OrderTerms", EmitDefaultValue=false)]
        public string OrderTerms { get; set; }

        /// <summary>
        /// Gets or Sets FreightTerms
        /// </summary>
        [DataMember(Name="FreightTerms", EmitDefaultValue=false)]
        public string FreightTerms { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMethod
        /// </summary>
        [DataMember(Name="ShippingMethod", EmitDefaultValue=false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// Gets or Sets UpdateLatestCost
        /// </summary>
        [DataMember(Name="UpdateLatestCost", EmitDefaultValue=false)]
        public bool? UpdateLatestCost { get; set; }

        /// <summary>
        /// Gets or Sets AllowBackOrders
        /// </summary>
        [DataMember(Name="AllowBackOrders", EmitDefaultValue=false)]
        public bool? AllowBackOrders { get; set; }

        /// <summary>
        /// Gets or Sets ExpectedDate
        /// </summary>
        [DataMember(Name="ExpectedDate", EmitDefaultValue=false)]
        public SystemNullableTsiWebOptionalDateTime ExpectedDate { get; set; }

        /// <summary>
        /// Gets or Sets DefaultReceivingLocation
        /// </summary>
        [DataMember(Name="DefaultReceivingLocation", EmitDefaultValue=false)]
        public string DefaultReceivingLocation { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceTerms
        /// </summary>
        [DataMember(Name="InvoiceTerms", EmitDefaultValue=false)]
        public string InvoiceTerms { get; set; }

        /// <summary>
        /// Gets or Sets Freight
        /// </summary>
        [DataMember(Name="Freight", EmitDefaultValue=false)]
        public double? Freight { get; set; }

        /// <summary>
        /// Gets or Sets BlindShip
        /// </summary>
        [DataMember(Name="BlindShip", EmitDefaultValue=false)]
        public bool? BlindShip { get; set; }

        /// <summary>
        /// Gets or Sets OrderIdentificationNumber
        /// </summary>
        [DataMember(Name="OrderIdentificationNumber", EmitDefaultValue=false)]
        public string OrderIdentificationNumber { get; set; }

        /// <summary>
        /// Gets or Sets TrackingNumber
        /// </summary>
        [DataMember(Name="TrackingNumber", EmitDefaultValue=false)]
        public string TrackingNumber { get; set; }

        /// <summary>
        /// Gets or Sets RequestedRepNumber
        /// </summary>
        [DataMember(Name="RequestedRepNumber", EmitDefaultValue=false)]
        public int? RequestedRepNumber { get; set; }

        /// <summary>
        /// Gets or Sets LinkAccountNumber
        /// </summary>
        [DataMember(Name="LinkAccountNumber", EmitDefaultValue=false)]
        public int? LinkAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets LinkQuoteNumber
        /// </summary>
        [DataMember(Name="LinkQuoteNumber", EmitDefaultValue=false)]
        public int? LinkQuoteNumber { get; set; }

        /// <summary>
        /// Gets or Sets LinkServiceOrderNumber
        /// </summary>
        [DataMember(Name="LinkServiceOrderNumber", EmitDefaultValue=false)]
        public int? LinkServiceOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets PaidInFull
        /// </summary>
        [DataMember(Name="PaidInFull", EmitDefaultValue=false)]
        public bool? PaidInFull { get; set; }

        /// <summary>
        /// Gets or Sets InternalComments
        /// </summary>
        [DataMember(Name="InternalComments", EmitDefaultValue=false)]
        public string InternalComments { get; set; }

        /// <summary>
        /// Gets or Sets Shipper
        /// </summary>
        [DataMember(Name="Shipper", EmitDefaultValue=false)]
        public string Shipper { get; set; }

        /// <summary>
        /// Gets or Sets ShipToAddressType
        /// </summary>
        [DataMember(Name="ShipToAddressType", EmitDefaultValue=false)]
        public string ShipToAddressType { get; set; }

        /// <summary>
        /// Gets or Sets ShipToAddressAccountNumber
        /// </summary>
        [DataMember(Name="ShipToAddressAccountNumber", EmitDefaultValue=false)]
        public int? ShipToAddressAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets AlternateShipToAddressID
        /// </summary>
        [DataMember(Name="AlternateShipToAddressID", EmitDefaultValue=false)]
        public int? AlternateShipToAddressID { get; set; }

        /// <summary>
        /// Gets or Sets ShipTo
        /// </summary>
        [DataMember(Name="ShipTo", EmitDefaultValue=false)]
        public TsiWebAlternateAddress ShipTo { get; set; }

        /// <summary>
        /// Gets or Sets BillToAddressType
        /// </summary>
        [DataMember(Name="BillToAddressType", EmitDefaultValue=false)]
        public string BillToAddressType { get; set; }

        /// <summary>
        /// Gets or Sets BillToAddressAccountNumber
        /// </summary>
        [DataMember(Name="BillToAddressAccountNumber", EmitDefaultValue=false)]
        public int? BillToAddressAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets AlternateBillToAddressID
        /// </summary>
        [DataMember(Name="AlternateBillToAddressID", EmitDefaultValue=false)]
        public int? AlternateBillToAddressID { get; set; }

        /// <summary>
        /// Gets or Sets BillTo
        /// </summary>
        [DataMember(Name="BillTo", EmitDefaultValue=false)]
        public TsiWebAlternateAddress BillTo { get; set; }

        /// <summary>
        /// Gets or Sets UseVendorCostInPriceBook
        /// </summary>
        [DataMember(Name="UseVendorCostInPriceBook", EmitDefaultValue=false)]
        public bool? UseVendorCostInPriceBook { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebCreatePurchaseOrderModel {\n");
            sb.Append("  VendorItem: ").Append(VendorItem).Append("\n");
            sb.Append("  AssemblyCostToUseType: ").Append(AssemblyCostToUseType).Append("\n");
            sb.Append("  DefaultReceivingBin: ").Append(DefaultReceivingBin).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Reference: ").Append(Reference).Append("\n");
            sb.Append("  PurchaseOrderDate: ").Append(PurchaseOrderDate).Append("\n");
            sb.Append("  ConfirmedBy: ").Append(ConfirmedBy).Append("\n");
            sb.Append("  ConfirmedDate: ").Append(ConfirmedDate).Append("\n");
            sb.Append("  BuyingRepNumber: ").Append(BuyingRepNumber).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  OrderTerms: ").Append(OrderTerms).Append("\n");
            sb.Append("  FreightTerms: ").Append(FreightTerms).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  UpdateLatestCost: ").Append(UpdateLatestCost).Append("\n");
            sb.Append("  AllowBackOrders: ").Append(AllowBackOrders).Append("\n");
            sb.Append("  ExpectedDate: ").Append(ExpectedDate).Append("\n");
            sb.Append("  DefaultReceivingLocation: ").Append(DefaultReceivingLocation).Append("\n");
            sb.Append("  InvoiceTerms: ").Append(InvoiceTerms).Append("\n");
            sb.Append("  Freight: ").Append(Freight).Append("\n");
            sb.Append("  BlindShip: ").Append(BlindShip).Append("\n");
            sb.Append("  OrderIdentificationNumber: ").Append(OrderIdentificationNumber).Append("\n");
            sb.Append("  TrackingNumber: ").Append(TrackingNumber).Append("\n");
            sb.Append("  RequestedRepNumber: ").Append(RequestedRepNumber).Append("\n");
            sb.Append("  LinkAccountNumber: ").Append(LinkAccountNumber).Append("\n");
            sb.Append("  LinkQuoteNumber: ").Append(LinkQuoteNumber).Append("\n");
            sb.Append("  LinkServiceOrderNumber: ").Append(LinkServiceOrderNumber).Append("\n");
            sb.Append("  PaidInFull: ").Append(PaidInFull).Append("\n");
            sb.Append("  InternalComments: ").Append(InternalComments).Append("\n");
            sb.Append("  Shipper: ").Append(Shipper).Append("\n");
            sb.Append("  ShipToAddressType: ").Append(ShipToAddressType).Append("\n");
            sb.Append("  ShipToAddressAccountNumber: ").Append(ShipToAddressAccountNumber).Append("\n");
            sb.Append("  AlternateShipToAddressID: ").Append(AlternateShipToAddressID).Append("\n");
            sb.Append("  ShipTo: ").Append(ShipTo).Append("\n");
            sb.Append("  BillToAddressType: ").Append(BillToAddressType).Append("\n");
            sb.Append("  BillToAddressAccountNumber: ").Append(BillToAddressAccountNumber).Append("\n");
            sb.Append("  AlternateBillToAddressID: ").Append(AlternateBillToAddressID).Append("\n");
            sb.Append("  BillTo: ").Append(BillTo).Append("\n");
            sb.Append("  UseVendorCostInPriceBook: ").Append(UseVendorCostInPriceBook).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebCreatePurchaseOrderModel);
        }

        /// <summary>
        /// Returns true if TsiWebCreatePurchaseOrderModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebCreatePurchaseOrderModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebCreatePurchaseOrderModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.VendorItem == input.VendorItem ||
                    (this.VendorItem != null &&
                    this.VendorItem.Equals(input.VendorItem))
                ) && 
                (
                    this.AssemblyCostToUseType == input.AssemblyCostToUseType ||
                    (this.AssemblyCostToUseType != null &&
                    this.AssemblyCostToUseType.Equals(input.AssemblyCostToUseType))
                ) && 
                (
                    this.DefaultReceivingBin == input.DefaultReceivingBin ||
                    (this.DefaultReceivingBin != null &&
                    this.DefaultReceivingBin.Equals(input.DefaultReceivingBin))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Reference == input.Reference ||
                    (this.Reference != null &&
                    this.Reference.Equals(input.Reference))
                ) && 
                (
                    this.PurchaseOrderDate == input.PurchaseOrderDate ||
                    (this.PurchaseOrderDate != null &&
                    this.PurchaseOrderDate.Equals(input.PurchaseOrderDate))
                ) && 
                (
                    this.ConfirmedBy == input.ConfirmedBy ||
                    (this.ConfirmedBy != null &&
                    this.ConfirmedBy.Equals(input.ConfirmedBy))
                ) && 
                (
                    this.ConfirmedDate == input.ConfirmedDate ||
                    (this.ConfirmedDate != null &&
                    this.ConfirmedDate.Equals(input.ConfirmedDate))
                ) && 
                (
                    this.BuyingRepNumber == input.BuyingRepNumber ||
                    (this.BuyingRepNumber != null &&
                    this.BuyingRepNumber.Equals(input.BuyingRepNumber))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.OrderTerms == input.OrderTerms ||
                    (this.OrderTerms != null &&
                    this.OrderTerms.Equals(input.OrderTerms))
                ) && 
                (
                    this.FreightTerms == input.FreightTerms ||
                    (this.FreightTerms != null &&
                    this.FreightTerms.Equals(input.FreightTerms))
                ) && 
                (
                    this.ShippingMethod == input.ShippingMethod ||
                    (this.ShippingMethod != null &&
                    this.ShippingMethod.Equals(input.ShippingMethod))
                ) && 
                (
                    this.UpdateLatestCost == input.UpdateLatestCost ||
                    (this.UpdateLatestCost != null &&
                    this.UpdateLatestCost.Equals(input.UpdateLatestCost))
                ) && 
                (
                    this.AllowBackOrders == input.AllowBackOrders ||
                    (this.AllowBackOrders != null &&
                    this.AllowBackOrders.Equals(input.AllowBackOrders))
                ) && 
                (
                    this.ExpectedDate == input.ExpectedDate ||
                    (this.ExpectedDate != null &&
                    this.ExpectedDate.Equals(input.ExpectedDate))
                ) && 
                (
                    this.DefaultReceivingLocation == input.DefaultReceivingLocation ||
                    (this.DefaultReceivingLocation != null &&
                    this.DefaultReceivingLocation.Equals(input.DefaultReceivingLocation))
                ) && 
                (
                    this.InvoiceTerms == input.InvoiceTerms ||
                    (this.InvoiceTerms != null &&
                    this.InvoiceTerms.Equals(input.InvoiceTerms))
                ) && 
                (
                    this.Freight == input.Freight ||
                    (this.Freight != null &&
                    this.Freight.Equals(input.Freight))
                ) && 
                (
                    this.BlindShip == input.BlindShip ||
                    (this.BlindShip != null &&
                    this.BlindShip.Equals(input.BlindShip))
                ) && 
                (
                    this.OrderIdentificationNumber == input.OrderIdentificationNumber ||
                    (this.OrderIdentificationNumber != null &&
                    this.OrderIdentificationNumber.Equals(input.OrderIdentificationNumber))
                ) && 
                (
                    this.TrackingNumber == input.TrackingNumber ||
                    (this.TrackingNumber != null &&
                    this.TrackingNumber.Equals(input.TrackingNumber))
                ) && 
                (
                    this.RequestedRepNumber == input.RequestedRepNumber ||
                    (this.RequestedRepNumber != null &&
                    this.RequestedRepNumber.Equals(input.RequestedRepNumber))
                ) && 
                (
                    this.LinkAccountNumber == input.LinkAccountNumber ||
                    (this.LinkAccountNumber != null &&
                    this.LinkAccountNumber.Equals(input.LinkAccountNumber))
                ) && 
                (
                    this.LinkQuoteNumber == input.LinkQuoteNumber ||
                    (this.LinkQuoteNumber != null &&
                    this.LinkQuoteNumber.Equals(input.LinkQuoteNumber))
                ) && 
                (
                    this.LinkServiceOrderNumber == input.LinkServiceOrderNumber ||
                    (this.LinkServiceOrderNumber != null &&
                    this.LinkServiceOrderNumber.Equals(input.LinkServiceOrderNumber))
                ) && 
                (
                    this.PaidInFull == input.PaidInFull ||
                    (this.PaidInFull != null &&
                    this.PaidInFull.Equals(input.PaidInFull))
                ) && 
                (
                    this.InternalComments == input.InternalComments ||
                    (this.InternalComments != null &&
                    this.InternalComments.Equals(input.InternalComments))
                ) && 
                (
                    this.Shipper == input.Shipper ||
                    (this.Shipper != null &&
                    this.Shipper.Equals(input.Shipper))
                ) && 
                (
                    this.ShipToAddressType == input.ShipToAddressType ||
                    (this.ShipToAddressType != null &&
                    this.ShipToAddressType.Equals(input.ShipToAddressType))
                ) && 
                (
                    this.ShipToAddressAccountNumber == input.ShipToAddressAccountNumber ||
                    (this.ShipToAddressAccountNumber != null &&
                    this.ShipToAddressAccountNumber.Equals(input.ShipToAddressAccountNumber))
                ) && 
                (
                    this.AlternateShipToAddressID == input.AlternateShipToAddressID ||
                    (this.AlternateShipToAddressID != null &&
                    this.AlternateShipToAddressID.Equals(input.AlternateShipToAddressID))
                ) && 
                (
                    this.ShipTo == input.ShipTo ||
                    (this.ShipTo != null &&
                    this.ShipTo.Equals(input.ShipTo))
                ) && 
                (
                    this.BillToAddressType == input.BillToAddressType ||
                    (this.BillToAddressType != null &&
                    this.BillToAddressType.Equals(input.BillToAddressType))
                ) && 
                (
                    this.BillToAddressAccountNumber == input.BillToAddressAccountNumber ||
                    (this.BillToAddressAccountNumber != null &&
                    this.BillToAddressAccountNumber.Equals(input.BillToAddressAccountNumber))
                ) && 
                (
                    this.AlternateBillToAddressID == input.AlternateBillToAddressID ||
                    (this.AlternateBillToAddressID != null &&
                    this.AlternateBillToAddressID.Equals(input.AlternateBillToAddressID))
                ) && 
                (
                    this.BillTo == input.BillTo ||
                    (this.BillTo != null &&
                    this.BillTo.Equals(input.BillTo))
                ) && 
                (
                    this.UseVendorCostInPriceBook == input.UseVendorCostInPriceBook ||
                    (this.UseVendorCostInPriceBook != null &&
                    this.UseVendorCostInPriceBook.Equals(input.UseVendorCostInPriceBook))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.VendorItem != null)
                    hashCode = hashCode * 59 + this.VendorItem.GetHashCode();
                if (this.AssemblyCostToUseType != null)
                    hashCode = hashCode * 59 + this.AssemblyCostToUseType.GetHashCode();
                if (this.DefaultReceivingBin != null)
                    hashCode = hashCode * 59 + this.DefaultReceivingBin.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Reference != null)
                    hashCode = hashCode * 59 + this.Reference.GetHashCode();
                if (this.PurchaseOrderDate != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderDate.GetHashCode();
                if (this.ConfirmedBy != null)
                    hashCode = hashCode * 59 + this.ConfirmedBy.GetHashCode();
                if (this.ConfirmedDate != null)
                    hashCode = hashCode * 59 + this.ConfirmedDate.GetHashCode();
                if (this.BuyingRepNumber != null)
                    hashCode = hashCode * 59 + this.BuyingRepNumber.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.OrderTerms != null)
                    hashCode = hashCode * 59 + this.OrderTerms.GetHashCode();
                if (this.FreightTerms != null)
                    hashCode = hashCode * 59 + this.FreightTerms.GetHashCode();
                if (this.ShippingMethod != null)
                    hashCode = hashCode * 59 + this.ShippingMethod.GetHashCode();
                if (this.UpdateLatestCost != null)
                    hashCode = hashCode * 59 + this.UpdateLatestCost.GetHashCode();
                if (this.AllowBackOrders != null)
                    hashCode = hashCode * 59 + this.AllowBackOrders.GetHashCode();
                if (this.ExpectedDate != null)
                    hashCode = hashCode * 59 + this.ExpectedDate.GetHashCode();
                if (this.DefaultReceivingLocation != null)
                    hashCode = hashCode * 59 + this.DefaultReceivingLocation.GetHashCode();
                if (this.InvoiceTerms != null)
                    hashCode = hashCode * 59 + this.InvoiceTerms.GetHashCode();
                if (this.Freight != null)
                    hashCode = hashCode * 59 + this.Freight.GetHashCode();
                if (this.BlindShip != null)
                    hashCode = hashCode * 59 + this.BlindShip.GetHashCode();
                if (this.OrderIdentificationNumber != null)
                    hashCode = hashCode * 59 + this.OrderIdentificationNumber.GetHashCode();
                if (this.TrackingNumber != null)
                    hashCode = hashCode * 59 + this.TrackingNumber.GetHashCode();
                if (this.RequestedRepNumber != null)
                    hashCode = hashCode * 59 + this.RequestedRepNumber.GetHashCode();
                if (this.LinkAccountNumber != null)
                    hashCode = hashCode * 59 + this.LinkAccountNumber.GetHashCode();
                if (this.LinkQuoteNumber != null)
                    hashCode = hashCode * 59 + this.LinkQuoteNumber.GetHashCode();
                if (this.LinkServiceOrderNumber != null)
                    hashCode = hashCode * 59 + this.LinkServiceOrderNumber.GetHashCode();
                if (this.PaidInFull != null)
                    hashCode = hashCode * 59 + this.PaidInFull.GetHashCode();
                if (this.InternalComments != null)
                    hashCode = hashCode * 59 + this.InternalComments.GetHashCode();
                if (this.Shipper != null)
                    hashCode = hashCode * 59 + this.Shipper.GetHashCode();
                if (this.ShipToAddressType != null)
                    hashCode = hashCode * 59 + this.ShipToAddressType.GetHashCode();
                if (this.ShipToAddressAccountNumber != null)
                    hashCode = hashCode * 59 + this.ShipToAddressAccountNumber.GetHashCode();
                if (this.AlternateShipToAddressID != null)
                    hashCode = hashCode * 59 + this.AlternateShipToAddressID.GetHashCode();
                if (this.ShipTo != null)
                    hashCode = hashCode * 59 + this.ShipTo.GetHashCode();
                if (this.BillToAddressType != null)
                    hashCode = hashCode * 59 + this.BillToAddressType.GetHashCode();
                if (this.BillToAddressAccountNumber != null)
                    hashCode = hashCode * 59 + this.BillToAddressAccountNumber.GetHashCode();
                if (this.AlternateBillToAddressID != null)
                    hashCode = hashCode * 59 + this.AlternateBillToAddressID.GetHashCode();
                if (this.BillTo != null)
                    hashCode = hashCode * 59 + this.BillTo.GetHashCode();
                if (this.UseVendorCostInPriceBook != null)
                    hashCode = hashCode * 59 + this.UseVendorCostInPriceBook.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
