/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebCreateServiceOrderModel
    /// </summary>
    [DataContract]
    public partial class TsiWebCreateServiceOrderModel :  IEquatable<TsiWebCreateServiceOrderModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebCreateServiceOrderModel" /> class.
        /// </summary>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="contactNumber">contactNumber.</param>
        /// <param name="technicianAssigned">technicianAssigned.</param>
        /// <param name="estimatedHours">estimatedHours.</param>
        /// <param name="estimatedMinutes">estimatedMinutes.</param>
        /// <param name="callBackCount">callBackCount.</param>
        /// <param name="repToCredit">repToCredit.</param>
        /// <param name="contractNumber">contractNumber.</param>
        /// <param name="takenBy">takenBy.</param>
        /// <param name="dispatchBoardNumber">dispatchBoardNumber.</param>
        /// <param name="payMethodsId">payMethodsId.</param>
        /// <param name="severity">severity.</param>
        /// <param name="alternatePhoneNumber">alternatePhoneNumber.</param>
        /// <param name="alternatePhoneLocation">alternatePhoneLocation.</param>
        /// <param name="alternateContactEmailAddress">alternateContactEmailAddress.</param>
        /// <param name="alternateContactPhoneNumber">alternateContactPhoneNumber.</param>
        /// <param name="alternateContactPhoneLocation">alternateContactPhoneLocation.</param>
        /// <param name="briefDescription">briefDescription.</param>
        /// <param name="reference">reference.</param>
        /// <param name="priority">priority.</param>
        /// <param name="status">status.</param>
        /// <param name="serviceOrderType">serviceOrderType.</param>
        /// <param name="system">system.</param>
        /// <param name="workRequested">workRequested.</param>
        /// <param name="workPerformed">workPerformed.</param>
        /// <param name="paymentMethod">paymentMethod.</param>
        /// <param name="shippingMethod">shippingMethod.</param>
        /// <param name="internalComments">internalComments.</param>
        /// <param name="directionsToLocation">directionsToLocation.</param>
        /// <param name="customerPurchaseOrder">customerPurchaseOrder.</param>
        /// <param name="verifiedBy">verifiedBy.</param>
        /// <param name="serviceZone">serviceZone.</param>
        /// <param name="requestedBy">requestedBy.</param>
        /// <param name="tagNumber">tagNumber.</param>
        /// <param name="loanAgreement">loanAgreement.</param>
        /// <param name="debitCreditMemo">debitCreditMemo.</param>
        /// <param name="invoiceTerms">invoiceTerms.</param>
        /// <param name="freightTerms">freightTerms.</param>
        /// <param name="salesTaxCode">salesTaxCode.</param>
        /// <param name="dateTimeReceived">dateTimeReceived.</param>
        /// <param name="dateTimeRequested">dateTimeRequested.</param>
        /// <param name="dateTimeOpened">dateTimeOpened.</param>
        /// <param name="dateTimeClosed">dateTimeClosed.</param>
        /// <param name="verifiedDate">verifiedDate.</param>
        /// <param name="resolvedOnPhone">resolvedOnPhone.</param>
        /// <param name="bidPrice">bidPrice.</param>
        /// <param name="tradeIn">tradeIn.</param>
        /// <param name="deposit">deposit.</param>
        /// <param name="freight">freight.</param>
        /// <param name="billToAddressType">billToAddressType.</param>
        /// <param name="billToAddressAccountNumber">billToAddressAccountNumber.</param>
        /// <param name="billTo">billTo.</param>
        /// <param name="shipToAddressType">shipToAddressType.</param>
        /// <param name="shipToAddressAccountNumber">shipToAddressAccountNumber.</param>
        /// <param name="shipTo">shipTo.</param>
        /// <param name="useAlternateShipToTaxCode">useAlternateShipToTaxCode.</param>
        /// <param name="canReassignToHourlyUsageContractAlreadyInvoiced">canReassignToHourlyUsageContractAlreadyInvoiced.</param>
        /// <param name="canUpdateContractMeterReadingToServiceOrderReading">canUpdateContractMeterReadingToServiceOrderReading.</param>
        /// <param name="allowInactiveContract">allowInactiveContract.</param>
        /// <param name="allowFutureContract">allowFutureContract.</param>
        /// <param name="allowContractNoRemaining">allowContractNoRemaining.</param>
        /// <param name="useContractDefaultTech">useContractDefaultTech.</param>
        /// <param name="displayOnCustomerPortal">displayOnCustomerPortal.</param>
        public TsiWebCreateServiceOrderModel(
            int? accountNumber = default(int?),
            int? contactNumber = default(int?),
            int? technicianAssigned = default(int?),
            int? estimatedHours = default(int?),
            int? estimatedMinutes = default(int?),
            int? callBackCount = default(int?),
            int? repToCredit = default(int?),
            int? contractNumber = default(int?),
            int? takenBy = default(int?),
            int? dispatchBoardNumber = default(int?),
            int? payMethodsId = default(int?),
            int? severity = default(int?),
            string alternatePhoneNumber = default(string),
            string alternatePhoneLocation = default(string),
            string alternateContactEmailAddress = default(string),
            string alternateContactPhoneNumber = default(string),
            string alternateContactPhoneLocation = default(string),
            string briefDescription = default(string),
            string reference = default(string),
            string priority = default(string),
            string status = default(string),
            string serviceOrderType = default(string),
            string system = default(string),
            string workRequested = default(string),
            string workPerformed = default(string),
            string paymentMethod = default(string),
            string shippingMethod = default(string),
            string internalComments = default(string),
            string directionsToLocation = default(string),
            string customerPurchaseOrder = default(string),
            string verifiedBy = default(string),
            string serviceZone = default(string),
            string requestedBy = default(string),
            string tagNumber = default(string),
            string loanAgreement = default(string),
            string debitCreditMemo = default(string),
            string invoiceTerms = default(string),
            string freightTerms = default(string),
            string salesTaxCode = default(string),
            DateTime? dateTimeReceived = default(DateTime?),
            SystemNullableTsiWebSplitDateTime dateTimeRequested = default(SystemNullableTsiWebSplitDateTime),
            SystemNullableTsiWebOptionalDateTime dateTimeOpened = default(SystemNullableTsiWebOptionalDateTime),
            SystemNullableTsiWebOptionalDateTime dateTimeClosed = default(SystemNullableTsiWebOptionalDateTime),
            SystemNullableTsiWebOptionalDateTime verifiedDate = default(SystemNullableTsiWebOptionalDateTime),
            bool? resolvedOnPhone = default(bool?),
            double? bidPrice = default(double?),
            double? tradeIn = default(double?),
            double? deposit = default(double?),
            double? freight = default(double?),
            string billToAddressType = default(string),
            int? billToAddressAccountNumber = default(int?),
            TsiWebAlternateAddress billTo = default(TsiWebAlternateAddress),
            string shipToAddressType = default(string),
            int? shipToAddressAccountNumber = default(int?),
            TsiWebAlternateAddress shipTo = default(TsiWebAlternateAddress),
            bool? useAlternateShipToTaxCode = default(bool?),
            bool? canReassignToHourlyUsageContractAlreadyInvoiced = default(bool?),
            bool? canUpdateContractMeterReadingToServiceOrderReading = default(bool?),
            bool? allowInactiveContract = default(bool?),
            bool? allowFutureContract = default(bool?),
            bool? allowContractNoRemaining = default(bool?),
            bool? useContractDefaultTech = default(bool?),
            bool? displayOnCustomerPortal = default(bool?)
            )
        {
            this.AccountNumber = accountNumber;
            this.ContactNumber = contactNumber;
            this.TechnicianAssigned = technicianAssigned;
            this.EstimatedHours = estimatedHours;
            this.EstimatedMinutes = estimatedMinutes;
            this.CallBackCount = callBackCount;
            this.RepToCredit = repToCredit;
            this.ContractNumber = contractNumber;
            this.TakenBy = takenBy;
            this.DispatchBoardNumber = dispatchBoardNumber;
            this.PayMethodsId = payMethodsId;
            this.Severity = severity;
            this.AlternatePhoneNumber = alternatePhoneNumber;
            this.AlternatePhoneLocation = alternatePhoneLocation;
            this.AlternateContactEmailAddress = alternateContactEmailAddress;
            this.AlternateContactPhoneNumber = alternateContactPhoneNumber;
            this.AlternateContactPhoneLocation = alternateContactPhoneLocation;
            this.BriefDescription = briefDescription;
            this.Reference = reference;
            this.Priority = priority;
            this.Status = status;
            this.ServiceOrderType = serviceOrderType;
            this.System = system;
            this.WorkRequested = workRequested;
            this.WorkPerformed = workPerformed;
            this.PaymentMethod = paymentMethod;
            this.ShippingMethod = shippingMethod;
            this.InternalComments = internalComments;
            this.DirectionsToLocation = directionsToLocation;
            this.CustomerPurchaseOrder = customerPurchaseOrder;
            this.VerifiedBy = verifiedBy;
            this.ServiceZone = serviceZone;
            this.RequestedBy = requestedBy;
            this.TagNumber = tagNumber;
            this.LoanAgreement = loanAgreement;
            this.DebitCreditMemo = debitCreditMemo;
            this.InvoiceTerms = invoiceTerms;
            this.FreightTerms = freightTerms;
            this.SalesTaxCode = salesTaxCode;
            this.DateTimeReceived = dateTimeReceived;
            this.DateTimeRequested = dateTimeRequested;
            this.DateTimeOpened = dateTimeOpened;
            this.DateTimeClosed = dateTimeClosed;
            this.VerifiedDate = verifiedDate;
            this.ResolvedOnPhone = resolvedOnPhone;
            this.BidPrice = bidPrice;
            this.TradeIn = tradeIn;
            this.Deposit = deposit;
            this.Freight = freight;
            this.BillToAddressType = billToAddressType;
            this.BillToAddressAccountNumber = billToAddressAccountNumber;
            this.BillTo = billTo;
            this.ShipToAddressType = shipToAddressType;
            this.ShipToAddressAccountNumber = shipToAddressAccountNumber;
            this.ShipTo = shipTo;
            this.UseAlternateShipToTaxCode = useAlternateShipToTaxCode;
            this.CanReassignToHourlyUsageContractAlreadyInvoiced = canReassignToHourlyUsageContractAlreadyInvoiced;
            this.CanUpdateContractMeterReadingToServiceOrderReading = canUpdateContractMeterReadingToServiceOrderReading;
            this.AllowInactiveContract = allowInactiveContract;
            this.AllowFutureContract = allowFutureContract;
            this.AllowContractNoRemaining = allowContractNoRemaining;
            this.UseContractDefaultTech = useContractDefaultTech;
            this.DisplayOnCustomerPortal = displayOnCustomerPortal;
        }
        
        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactNumber
        /// </summary>
        [DataMember(Name="ContactNumber", EmitDefaultValue=false)]
        public int? ContactNumber { get; set; }

        /// <summary>
        /// Gets or Sets TechnicianAssigned
        /// </summary>
        [DataMember(Name="TechnicianAssigned", EmitDefaultValue=false)]
        public int? TechnicianAssigned { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedHours
        /// </summary>
        [DataMember(Name="EstimatedHours", EmitDefaultValue=false)]
        public int? EstimatedHours { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedMinutes
        /// </summary>
        [DataMember(Name="EstimatedMinutes", EmitDefaultValue=false)]
        public int? EstimatedMinutes { get; set; }

        /// <summary>
        /// Gets or Sets CallBackCount
        /// </summary>
        [DataMember(Name="CallBackCount", EmitDefaultValue=false)]
        public int? CallBackCount { get; set; }

        /// <summary>
        /// Gets or Sets RepToCredit
        /// </summary>
        [DataMember(Name="RepToCredit", EmitDefaultValue=false)]
        public int? RepToCredit { get; set; }

        /// <summary>
        /// Gets or Sets ContractNumber
        /// </summary>
        [DataMember(Name="ContractNumber", EmitDefaultValue=false)]
        public int? ContractNumber { get; set; }

        /// <summary>
        /// Gets or Sets TakenBy
        /// </summary>
        [DataMember(Name="TakenBy", EmitDefaultValue=false)]
        public int? TakenBy { get; set; }

        /// <summary>
        /// Gets or Sets DispatchBoardNumber
        /// </summary>
        [DataMember(Name="DispatchBoardNumber", EmitDefaultValue=false)]
        public int? DispatchBoardNumber { get; set; }

        /// <summary>
        /// Gets or Sets PayMethodsId
        /// </summary>
        [DataMember(Name="PayMethodsId", EmitDefaultValue=false)]
        public int? PayMethodsId { get; set; }

        /// <summary>
        /// Gets or Sets Severity
        /// </summary>
        [DataMember(Name="Severity", EmitDefaultValue=false)]
        public int? Severity { get; set; }

        /// <summary>
        /// Gets or Sets AlternatePhoneNumber
        /// </summary>
        [DataMember(Name="AlternatePhoneNumber", EmitDefaultValue=false)]
        public string AlternatePhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets AlternatePhoneLocation
        /// </summary>
        [DataMember(Name="AlternatePhoneLocation", EmitDefaultValue=false)]
        public string AlternatePhoneLocation { get; set; }

        /// <summary>
        /// Gets or Sets AlternateContactEmailAddress
        /// </summary>
        [DataMember(Name="AlternateContactEmailAddress", EmitDefaultValue=false)]
        public string AlternateContactEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets AlternateContactPhoneNumber
        /// </summary>
        [DataMember(Name="AlternateContactPhoneNumber", EmitDefaultValue=false)]
        public string AlternateContactPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets AlternateContactPhoneLocation
        /// </summary>
        [DataMember(Name="AlternateContactPhoneLocation", EmitDefaultValue=false)]
        public string AlternateContactPhoneLocation { get; set; }

        /// <summary>
        /// Gets or Sets BriefDescription
        /// </summary>
        [DataMember(Name="BriefDescription", EmitDefaultValue=false)]
        public string BriefDescription { get; set; }

        /// <summary>
        /// Gets or Sets Reference
        /// </summary>
        [DataMember(Name="Reference", EmitDefaultValue=false)]
        public string Reference { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="Priority", EmitDefaultValue=false)]
        public string Priority { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets ServiceOrderType
        /// </summary>
        [DataMember(Name="ServiceOrderType", EmitDefaultValue=false)]
        public string ServiceOrderType { get; set; }

        /// <summary>
        /// Gets or Sets System
        /// </summary>
        [DataMember(Name="System", EmitDefaultValue=false)]
        public string System { get; set; }

        /// <summary>
        /// Gets or Sets WorkRequested
        /// </summary>
        [DataMember(Name="WorkRequested", EmitDefaultValue=false)]
        public string WorkRequested { get; set; }

        /// <summary>
        /// Gets or Sets WorkPerformed
        /// </summary>
        [DataMember(Name="WorkPerformed", EmitDefaultValue=false)]
        public string WorkPerformed { get; set; }

        /// <summary>
        /// Gets or Sets PaymentMethod
        /// </summary>
        [DataMember(Name="PaymentMethod", EmitDefaultValue=false)]
        public string PaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMethod
        /// </summary>
        [DataMember(Name="ShippingMethod", EmitDefaultValue=false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// Gets or Sets InternalComments
        /// </summary>
        [DataMember(Name="InternalComments", EmitDefaultValue=false)]
        public string InternalComments { get; set; }

        /// <summary>
        /// Gets or Sets DirectionsToLocation
        /// </summary>
        [DataMember(Name="DirectionsToLocation", EmitDefaultValue=false)]
        public string DirectionsToLocation { get; set; }

        /// <summary>
        /// Gets or Sets CustomerPurchaseOrder
        /// </summary>
        [DataMember(Name="CustomerPurchaseOrder", EmitDefaultValue=false)]
        public string CustomerPurchaseOrder { get; set; }

        /// <summary>
        /// Gets or Sets VerifiedBy
        /// </summary>
        [DataMember(Name="VerifiedBy", EmitDefaultValue=false)]
        public string VerifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets ServiceZone
        /// </summary>
        [DataMember(Name="ServiceZone", EmitDefaultValue=false)]
        public string ServiceZone { get; set; }

        /// <summary>
        /// Gets or Sets RequestedBy
        /// </summary>
        [DataMember(Name="RequestedBy", EmitDefaultValue=false)]
        public string RequestedBy { get; set; }

        /// <summary>
        /// Gets or Sets TagNumber
        /// </summary>
        [DataMember(Name="TagNumber", EmitDefaultValue=false)]
        public string TagNumber { get; set; }

        /// <summary>
        /// Gets or Sets LoanAgreement
        /// </summary>
        [DataMember(Name="LoanAgreement", EmitDefaultValue=false)]
        public string LoanAgreement { get; set; }

        /// <summary>
        /// Gets or Sets DebitCreditMemo
        /// </summary>
        [DataMember(Name="DebitCreditMemo", EmitDefaultValue=false)]
        public string DebitCreditMemo { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceTerms
        /// </summary>
        [DataMember(Name="InvoiceTerms", EmitDefaultValue=false)]
        public string InvoiceTerms { get; set; }

        /// <summary>
        /// Gets or Sets FreightTerms
        /// </summary>
        [DataMember(Name="FreightTerms", EmitDefaultValue=false)]
        public string FreightTerms { get; set; }

        /// <summary>
        /// Gets or Sets SalesTaxCode
        /// </summary>
        [DataMember(Name="SalesTaxCode", EmitDefaultValue=false)]
        public string SalesTaxCode { get; set; }

        /// <summary>
        /// Gets or Sets DateTimeReceived
        /// </summary>
        [DataMember(Name="DateTimeReceived", EmitDefaultValue=false)]
        public DateTime? DateTimeReceived { get; set; }

        /// <summary>
        /// Gets or Sets DateTimeRequested
        /// </summary>
        [DataMember(Name="DateTimeRequested", EmitDefaultValue=false)]
        public SystemNullableTsiWebSplitDateTime DateTimeRequested { get; set; }

        /// <summary>
        /// Gets or Sets DateTimeOpened
        /// </summary>
        [DataMember(Name="DateTimeOpened", EmitDefaultValue=false)]
        public SystemNullableTsiWebOptionalDateTime DateTimeOpened { get; set; }

        /// <summary>
        /// Gets or Sets DateTimeClosed
        /// </summary>
        [DataMember(Name="DateTimeClosed", EmitDefaultValue=false)]
        public SystemNullableTsiWebOptionalDateTime DateTimeClosed { get; set; }

        /// <summary>
        /// Gets or Sets VerifiedDate
        /// </summary>
        [DataMember(Name="VerifiedDate", EmitDefaultValue=false)]
        public SystemNullableTsiWebOptionalDateTime VerifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets ResolvedOnPhone
        /// </summary>
        [DataMember(Name="ResolvedOnPhone", EmitDefaultValue=false)]
        public bool? ResolvedOnPhone { get; set; }

        /// <summary>
        /// Gets or Sets BidPrice
        /// </summary>
        [DataMember(Name="BidPrice", EmitDefaultValue=false)]
        public double? BidPrice { get; set; }

        /// <summary>
        /// Gets or Sets TradeIn
        /// </summary>
        [DataMember(Name="TradeIn", EmitDefaultValue=false)]
        public double? TradeIn { get; set; }

        /// <summary>
        /// Gets or Sets Deposit
        /// </summary>
        [DataMember(Name="Deposit", EmitDefaultValue=false)]
        public double? Deposit { get; set; }

        /// <summary>
        /// Gets or Sets Freight
        /// </summary>
        [DataMember(Name="Freight", EmitDefaultValue=false)]
        public double? Freight { get; set; }

        /// <summary>
        /// Gets or Sets BillToAddressType
        /// </summary>
        [DataMember(Name="BillToAddressType", EmitDefaultValue=false)]
        public string BillToAddressType { get; set; }

        /// <summary>
        /// Gets or Sets BillToAddressAccountNumber
        /// </summary>
        [DataMember(Name="BillToAddressAccountNumber", EmitDefaultValue=false)]
        public int? BillToAddressAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets BillTo
        /// </summary>
        [DataMember(Name="BillTo", EmitDefaultValue=false)]
        public TsiWebAlternateAddress BillTo { get; set; }

        /// <summary>
        /// Gets or Sets ShipToAddressType
        /// </summary>
        [DataMember(Name="ShipToAddressType", EmitDefaultValue=false)]
        public string ShipToAddressType { get; set; }

        /// <summary>
        /// Gets or Sets ShipToAddressAccountNumber
        /// </summary>
        [DataMember(Name="ShipToAddressAccountNumber", EmitDefaultValue=false)]
        public int? ShipToAddressAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets ShipTo
        /// </summary>
        [DataMember(Name="ShipTo", EmitDefaultValue=false)]
        public TsiWebAlternateAddress ShipTo { get; set; }

        /// <summary>
        /// Gets or Sets UseAlternateShipToTaxCode
        /// </summary>
        [DataMember(Name="UseAlternateShipToTaxCode", EmitDefaultValue=false)]
        public bool? UseAlternateShipToTaxCode { get; set; }

        /// <summary>
        /// Gets or Sets CanReassignToHourlyUsageContractAlreadyInvoiced
        /// </summary>
        [DataMember(Name="CanReassignToHourlyUsageContractAlreadyInvoiced", EmitDefaultValue=false)]
        public bool? CanReassignToHourlyUsageContractAlreadyInvoiced { get; set; }

        /// <summary>
        /// Gets or Sets CanUpdateContractMeterReadingToServiceOrderReading
        /// </summary>
        [DataMember(Name="CanUpdateContractMeterReadingToServiceOrderReading", EmitDefaultValue=false)]
        public bool? CanUpdateContractMeterReadingToServiceOrderReading { get; set; }

        /// <summary>
        /// Gets or Sets AllowInactiveContract
        /// </summary>
        [DataMember(Name="AllowInactiveContract", EmitDefaultValue=false)]
        public bool? AllowInactiveContract { get; set; }

        /// <summary>
        /// Gets or Sets AllowFutureContract
        /// </summary>
        [DataMember(Name="AllowFutureContract", EmitDefaultValue=false)]
        public bool? AllowFutureContract { get; set; }

        /// <summary>
        /// Gets or Sets AllowContractNoRemaining
        /// </summary>
        [DataMember(Name="AllowContractNoRemaining", EmitDefaultValue=false)]
        public bool? AllowContractNoRemaining { get; set; }

        /// <summary>
        /// Gets or Sets UseContractDefaultTech
        /// </summary>
        [DataMember(Name="UseContractDefaultTech", EmitDefaultValue=false)]
        public bool? UseContractDefaultTech { get; set; }

        /// <summary>
        /// Gets or Sets DisplayOnCustomerPortal
        /// </summary>
        [DataMember(Name="DisplayOnCustomerPortal", EmitDefaultValue=false)]
        public bool? DisplayOnCustomerPortal { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebCreateServiceOrderModel {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  ContactNumber: ").Append(ContactNumber).Append("\n");
            sb.Append("  TechnicianAssigned: ").Append(TechnicianAssigned).Append("\n");
            sb.Append("  EstimatedHours: ").Append(EstimatedHours).Append("\n");
            sb.Append("  EstimatedMinutes: ").Append(EstimatedMinutes).Append("\n");
            sb.Append("  CallBackCount: ").Append(CallBackCount).Append("\n");
            sb.Append("  RepToCredit: ").Append(RepToCredit).Append("\n");
            sb.Append("  ContractNumber: ").Append(ContractNumber).Append("\n");
            sb.Append("  TakenBy: ").Append(TakenBy).Append("\n");
            sb.Append("  DispatchBoardNumber: ").Append(DispatchBoardNumber).Append("\n");
            sb.Append("  PayMethodsId: ").Append(PayMethodsId).Append("\n");
            sb.Append("  Severity: ").Append(Severity).Append("\n");
            sb.Append("  AlternatePhoneNumber: ").Append(AlternatePhoneNumber).Append("\n");
            sb.Append("  AlternatePhoneLocation: ").Append(AlternatePhoneLocation).Append("\n");
            sb.Append("  AlternateContactEmailAddress: ").Append(AlternateContactEmailAddress).Append("\n");
            sb.Append("  AlternateContactPhoneNumber: ").Append(AlternateContactPhoneNumber).Append("\n");
            sb.Append("  AlternateContactPhoneLocation: ").Append(AlternateContactPhoneLocation).Append("\n");
            sb.Append("  BriefDescription: ").Append(BriefDescription).Append("\n");
            sb.Append("  Reference: ").Append(Reference).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ServiceOrderType: ").Append(ServiceOrderType).Append("\n");
            sb.Append("  System: ").Append(System).Append("\n");
            sb.Append("  WorkRequested: ").Append(WorkRequested).Append("\n");
            sb.Append("  WorkPerformed: ").Append(WorkPerformed).Append("\n");
            sb.Append("  PaymentMethod: ").Append(PaymentMethod).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  InternalComments: ").Append(InternalComments).Append("\n");
            sb.Append("  DirectionsToLocation: ").Append(DirectionsToLocation).Append("\n");
            sb.Append("  CustomerPurchaseOrder: ").Append(CustomerPurchaseOrder).Append("\n");
            sb.Append("  VerifiedBy: ").Append(VerifiedBy).Append("\n");
            sb.Append("  ServiceZone: ").Append(ServiceZone).Append("\n");
            sb.Append("  RequestedBy: ").Append(RequestedBy).Append("\n");
            sb.Append("  TagNumber: ").Append(TagNumber).Append("\n");
            sb.Append("  LoanAgreement: ").Append(LoanAgreement).Append("\n");
            sb.Append("  DebitCreditMemo: ").Append(DebitCreditMemo).Append("\n");
            sb.Append("  InvoiceTerms: ").Append(InvoiceTerms).Append("\n");
            sb.Append("  FreightTerms: ").Append(FreightTerms).Append("\n");
            sb.Append("  SalesTaxCode: ").Append(SalesTaxCode).Append("\n");
            sb.Append("  DateTimeReceived: ").Append(DateTimeReceived).Append("\n");
            sb.Append("  DateTimeRequested: ").Append(DateTimeRequested).Append("\n");
            sb.Append("  DateTimeOpened: ").Append(DateTimeOpened).Append("\n");
            sb.Append("  DateTimeClosed: ").Append(DateTimeClosed).Append("\n");
            sb.Append("  VerifiedDate: ").Append(VerifiedDate).Append("\n");
            sb.Append("  ResolvedOnPhone: ").Append(ResolvedOnPhone).Append("\n");
            sb.Append("  BidPrice: ").Append(BidPrice).Append("\n");
            sb.Append("  TradeIn: ").Append(TradeIn).Append("\n");
            sb.Append("  Deposit: ").Append(Deposit).Append("\n");
            sb.Append("  Freight: ").Append(Freight).Append("\n");
            sb.Append("  BillToAddressType: ").Append(BillToAddressType).Append("\n");
            sb.Append("  BillToAddressAccountNumber: ").Append(BillToAddressAccountNumber).Append("\n");
            sb.Append("  BillTo: ").Append(BillTo).Append("\n");
            sb.Append("  ShipToAddressType: ").Append(ShipToAddressType).Append("\n");
            sb.Append("  ShipToAddressAccountNumber: ").Append(ShipToAddressAccountNumber).Append("\n");
            sb.Append("  ShipTo: ").Append(ShipTo).Append("\n");
            sb.Append("  UseAlternateShipToTaxCode: ").Append(UseAlternateShipToTaxCode).Append("\n");
            sb.Append("  CanReassignToHourlyUsageContractAlreadyInvoiced: ").Append(CanReassignToHourlyUsageContractAlreadyInvoiced).Append("\n");
            sb.Append("  CanUpdateContractMeterReadingToServiceOrderReading: ").Append(CanUpdateContractMeterReadingToServiceOrderReading).Append("\n");
            sb.Append("  AllowInactiveContract: ").Append(AllowInactiveContract).Append("\n");
            sb.Append("  AllowFutureContract: ").Append(AllowFutureContract).Append("\n");
            sb.Append("  AllowContractNoRemaining: ").Append(AllowContractNoRemaining).Append("\n");
            sb.Append("  UseContractDefaultTech: ").Append(UseContractDefaultTech).Append("\n");
            sb.Append("  DisplayOnCustomerPortal: ").Append(DisplayOnCustomerPortal).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebCreateServiceOrderModel);
        }

        /// <summary>
        /// Returns true if TsiWebCreateServiceOrderModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebCreateServiceOrderModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebCreateServiceOrderModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.ContactNumber == input.ContactNumber ||
                    (this.ContactNumber != null &&
                    this.ContactNumber.Equals(input.ContactNumber))
                ) && 
                (
                    this.TechnicianAssigned == input.TechnicianAssigned ||
                    (this.TechnicianAssigned != null &&
                    this.TechnicianAssigned.Equals(input.TechnicianAssigned))
                ) && 
                (
                    this.EstimatedHours == input.EstimatedHours ||
                    (this.EstimatedHours != null &&
                    this.EstimatedHours.Equals(input.EstimatedHours))
                ) && 
                (
                    this.EstimatedMinutes == input.EstimatedMinutes ||
                    (this.EstimatedMinutes != null &&
                    this.EstimatedMinutes.Equals(input.EstimatedMinutes))
                ) && 
                (
                    this.CallBackCount == input.CallBackCount ||
                    (this.CallBackCount != null &&
                    this.CallBackCount.Equals(input.CallBackCount))
                ) && 
                (
                    this.RepToCredit == input.RepToCredit ||
                    (this.RepToCredit != null &&
                    this.RepToCredit.Equals(input.RepToCredit))
                ) && 
                (
                    this.ContractNumber == input.ContractNumber ||
                    (this.ContractNumber != null &&
                    this.ContractNumber.Equals(input.ContractNumber))
                ) && 
                (
                    this.TakenBy == input.TakenBy ||
                    (this.TakenBy != null &&
                    this.TakenBy.Equals(input.TakenBy))
                ) && 
                (
                    this.DispatchBoardNumber == input.DispatchBoardNumber ||
                    (this.DispatchBoardNumber != null &&
                    this.DispatchBoardNumber.Equals(input.DispatchBoardNumber))
                ) && 
                (
                    this.PayMethodsId == input.PayMethodsId ||
                    (this.PayMethodsId != null &&
                    this.PayMethodsId.Equals(input.PayMethodsId))
                ) && 
                (
                    this.Severity == input.Severity ||
                    (this.Severity != null &&
                    this.Severity.Equals(input.Severity))
                ) && 
                (
                    this.AlternatePhoneNumber == input.AlternatePhoneNumber ||
                    (this.AlternatePhoneNumber != null &&
                    this.AlternatePhoneNumber.Equals(input.AlternatePhoneNumber))
                ) && 
                (
                    this.AlternatePhoneLocation == input.AlternatePhoneLocation ||
                    (this.AlternatePhoneLocation != null &&
                    this.AlternatePhoneLocation.Equals(input.AlternatePhoneLocation))
                ) && 
                (
                    this.AlternateContactEmailAddress == input.AlternateContactEmailAddress ||
                    (this.AlternateContactEmailAddress != null &&
                    this.AlternateContactEmailAddress.Equals(input.AlternateContactEmailAddress))
                ) && 
                (
                    this.AlternateContactPhoneNumber == input.AlternateContactPhoneNumber ||
                    (this.AlternateContactPhoneNumber != null &&
                    this.AlternateContactPhoneNumber.Equals(input.AlternateContactPhoneNumber))
                ) && 
                (
                    this.AlternateContactPhoneLocation == input.AlternateContactPhoneLocation ||
                    (this.AlternateContactPhoneLocation != null &&
                    this.AlternateContactPhoneLocation.Equals(input.AlternateContactPhoneLocation))
                ) && 
                (
                    this.BriefDescription == input.BriefDescription ||
                    (this.BriefDescription != null &&
                    this.BriefDescription.Equals(input.BriefDescription))
                ) && 
                (
                    this.Reference == input.Reference ||
                    (this.Reference != null &&
                    this.Reference.Equals(input.Reference))
                ) && 
                (
                    this.Priority == input.Priority ||
                    (this.Priority != null &&
                    this.Priority.Equals(input.Priority))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.ServiceOrderType == input.ServiceOrderType ||
                    (this.ServiceOrderType != null &&
                    this.ServiceOrderType.Equals(input.ServiceOrderType))
                ) && 
                (
                    this.System == input.System ||
                    (this.System != null &&
                    this.System.Equals(input.System))
                ) && 
                (
                    this.WorkRequested == input.WorkRequested ||
                    (this.WorkRequested != null &&
                    this.WorkRequested.Equals(input.WorkRequested))
                ) && 
                (
                    this.WorkPerformed == input.WorkPerformed ||
                    (this.WorkPerformed != null &&
                    this.WorkPerformed.Equals(input.WorkPerformed))
                ) && 
                (
                    this.PaymentMethod == input.PaymentMethod ||
                    (this.PaymentMethod != null &&
                    this.PaymentMethod.Equals(input.PaymentMethod))
                ) && 
                (
                    this.ShippingMethod == input.ShippingMethod ||
                    (this.ShippingMethod != null &&
                    this.ShippingMethod.Equals(input.ShippingMethod))
                ) && 
                (
                    this.InternalComments == input.InternalComments ||
                    (this.InternalComments != null &&
                    this.InternalComments.Equals(input.InternalComments))
                ) && 
                (
                    this.DirectionsToLocation == input.DirectionsToLocation ||
                    (this.DirectionsToLocation != null &&
                    this.DirectionsToLocation.Equals(input.DirectionsToLocation))
                ) && 
                (
                    this.CustomerPurchaseOrder == input.CustomerPurchaseOrder ||
                    (this.CustomerPurchaseOrder != null &&
                    this.CustomerPurchaseOrder.Equals(input.CustomerPurchaseOrder))
                ) && 
                (
                    this.VerifiedBy == input.VerifiedBy ||
                    (this.VerifiedBy != null &&
                    this.VerifiedBy.Equals(input.VerifiedBy))
                ) && 
                (
                    this.ServiceZone == input.ServiceZone ||
                    (this.ServiceZone != null &&
                    this.ServiceZone.Equals(input.ServiceZone))
                ) && 
                (
                    this.RequestedBy == input.RequestedBy ||
                    (this.RequestedBy != null &&
                    this.RequestedBy.Equals(input.RequestedBy))
                ) && 
                (
                    this.TagNumber == input.TagNumber ||
                    (this.TagNumber != null &&
                    this.TagNumber.Equals(input.TagNumber))
                ) && 
                (
                    this.LoanAgreement == input.LoanAgreement ||
                    (this.LoanAgreement != null &&
                    this.LoanAgreement.Equals(input.LoanAgreement))
                ) && 
                (
                    this.DebitCreditMemo == input.DebitCreditMemo ||
                    (this.DebitCreditMemo != null &&
                    this.DebitCreditMemo.Equals(input.DebitCreditMemo))
                ) && 
                (
                    this.InvoiceTerms == input.InvoiceTerms ||
                    (this.InvoiceTerms != null &&
                    this.InvoiceTerms.Equals(input.InvoiceTerms))
                ) && 
                (
                    this.FreightTerms == input.FreightTerms ||
                    (this.FreightTerms != null &&
                    this.FreightTerms.Equals(input.FreightTerms))
                ) && 
                (
                    this.SalesTaxCode == input.SalesTaxCode ||
                    (this.SalesTaxCode != null &&
                    this.SalesTaxCode.Equals(input.SalesTaxCode))
                ) && 
                (
                    this.DateTimeReceived == input.DateTimeReceived ||
                    (this.DateTimeReceived != null &&
                    this.DateTimeReceived.Equals(input.DateTimeReceived))
                ) && 
                (
                    this.DateTimeRequested == input.DateTimeRequested ||
                    (this.DateTimeRequested != null &&
                    this.DateTimeRequested.Equals(input.DateTimeRequested))
                ) && 
                (
                    this.DateTimeOpened == input.DateTimeOpened ||
                    (this.DateTimeOpened != null &&
                    this.DateTimeOpened.Equals(input.DateTimeOpened))
                ) && 
                (
                    this.DateTimeClosed == input.DateTimeClosed ||
                    (this.DateTimeClosed != null &&
                    this.DateTimeClosed.Equals(input.DateTimeClosed))
                ) && 
                (
                    this.VerifiedDate == input.VerifiedDate ||
                    (this.VerifiedDate != null &&
                    this.VerifiedDate.Equals(input.VerifiedDate))
                ) && 
                (
                    this.ResolvedOnPhone == input.ResolvedOnPhone ||
                    (this.ResolvedOnPhone != null &&
                    this.ResolvedOnPhone.Equals(input.ResolvedOnPhone))
                ) && 
                (
                    this.BidPrice == input.BidPrice ||
                    (this.BidPrice != null &&
                    this.BidPrice.Equals(input.BidPrice))
                ) && 
                (
                    this.TradeIn == input.TradeIn ||
                    (this.TradeIn != null &&
                    this.TradeIn.Equals(input.TradeIn))
                ) && 
                (
                    this.Deposit == input.Deposit ||
                    (this.Deposit != null &&
                    this.Deposit.Equals(input.Deposit))
                ) && 
                (
                    this.Freight == input.Freight ||
                    (this.Freight != null &&
                    this.Freight.Equals(input.Freight))
                ) && 
                (
                    this.BillToAddressType == input.BillToAddressType ||
                    (this.BillToAddressType != null &&
                    this.BillToAddressType.Equals(input.BillToAddressType))
                ) && 
                (
                    this.BillToAddressAccountNumber == input.BillToAddressAccountNumber ||
                    (this.BillToAddressAccountNumber != null &&
                    this.BillToAddressAccountNumber.Equals(input.BillToAddressAccountNumber))
                ) && 
                (
                    this.BillTo == input.BillTo ||
                    (this.BillTo != null &&
                    this.BillTo.Equals(input.BillTo))
                ) && 
                (
                    this.ShipToAddressType == input.ShipToAddressType ||
                    (this.ShipToAddressType != null &&
                    this.ShipToAddressType.Equals(input.ShipToAddressType))
                ) && 
                (
                    this.ShipToAddressAccountNumber == input.ShipToAddressAccountNumber ||
                    (this.ShipToAddressAccountNumber != null &&
                    this.ShipToAddressAccountNumber.Equals(input.ShipToAddressAccountNumber))
                ) && 
                (
                    this.ShipTo == input.ShipTo ||
                    (this.ShipTo != null &&
                    this.ShipTo.Equals(input.ShipTo))
                ) && 
                (
                    this.UseAlternateShipToTaxCode == input.UseAlternateShipToTaxCode ||
                    (this.UseAlternateShipToTaxCode != null &&
                    this.UseAlternateShipToTaxCode.Equals(input.UseAlternateShipToTaxCode))
                ) && 
                (
                    this.CanReassignToHourlyUsageContractAlreadyInvoiced == input.CanReassignToHourlyUsageContractAlreadyInvoiced ||
                    (this.CanReassignToHourlyUsageContractAlreadyInvoiced != null &&
                    this.CanReassignToHourlyUsageContractAlreadyInvoiced.Equals(input.CanReassignToHourlyUsageContractAlreadyInvoiced))
                ) && 
                (
                    this.CanUpdateContractMeterReadingToServiceOrderReading == input.CanUpdateContractMeterReadingToServiceOrderReading ||
                    (this.CanUpdateContractMeterReadingToServiceOrderReading != null &&
                    this.CanUpdateContractMeterReadingToServiceOrderReading.Equals(input.CanUpdateContractMeterReadingToServiceOrderReading))
                ) && 
                (
                    this.AllowInactiveContract == input.AllowInactiveContract ||
                    (this.AllowInactiveContract != null &&
                    this.AllowInactiveContract.Equals(input.AllowInactiveContract))
                ) && 
                (
                    this.AllowFutureContract == input.AllowFutureContract ||
                    (this.AllowFutureContract != null &&
                    this.AllowFutureContract.Equals(input.AllowFutureContract))
                ) && 
                (
                    this.AllowContractNoRemaining == input.AllowContractNoRemaining ||
                    (this.AllowContractNoRemaining != null &&
                    this.AllowContractNoRemaining.Equals(input.AllowContractNoRemaining))
                ) && 
                (
                    this.UseContractDefaultTech == input.UseContractDefaultTech ||
                    (this.UseContractDefaultTech != null &&
                    this.UseContractDefaultTech.Equals(input.UseContractDefaultTech))
                ) && 
                (
                    this.DisplayOnCustomerPortal == input.DisplayOnCustomerPortal ||
                    (this.DisplayOnCustomerPortal != null &&
                    this.DisplayOnCustomerPortal.Equals(input.DisplayOnCustomerPortal))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.ContactNumber != null)
                    hashCode = hashCode * 59 + this.ContactNumber.GetHashCode();
                if (this.TechnicianAssigned != null)
                    hashCode = hashCode * 59 + this.TechnicianAssigned.GetHashCode();
                if (this.EstimatedHours != null)
                    hashCode = hashCode * 59 + this.EstimatedHours.GetHashCode();
                if (this.EstimatedMinutes != null)
                    hashCode = hashCode * 59 + this.EstimatedMinutes.GetHashCode();
                if (this.CallBackCount != null)
                    hashCode = hashCode * 59 + this.CallBackCount.GetHashCode();
                if (this.RepToCredit != null)
                    hashCode = hashCode * 59 + this.RepToCredit.GetHashCode();
                if (this.ContractNumber != null)
                    hashCode = hashCode * 59 + this.ContractNumber.GetHashCode();
                if (this.TakenBy != null)
                    hashCode = hashCode * 59 + this.TakenBy.GetHashCode();
                if (this.DispatchBoardNumber != null)
                    hashCode = hashCode * 59 + this.DispatchBoardNumber.GetHashCode();
                if (this.PayMethodsId != null)
                    hashCode = hashCode * 59 + this.PayMethodsId.GetHashCode();
                if (this.Severity != null)
                    hashCode = hashCode * 59 + this.Severity.GetHashCode();
                if (this.AlternatePhoneNumber != null)
                    hashCode = hashCode * 59 + this.AlternatePhoneNumber.GetHashCode();
                if (this.AlternatePhoneLocation != null)
                    hashCode = hashCode * 59 + this.AlternatePhoneLocation.GetHashCode();
                if (this.AlternateContactEmailAddress != null)
                    hashCode = hashCode * 59 + this.AlternateContactEmailAddress.GetHashCode();
                if (this.AlternateContactPhoneNumber != null)
                    hashCode = hashCode * 59 + this.AlternateContactPhoneNumber.GetHashCode();
                if (this.AlternateContactPhoneLocation != null)
                    hashCode = hashCode * 59 + this.AlternateContactPhoneLocation.GetHashCode();
                if (this.BriefDescription != null)
                    hashCode = hashCode * 59 + this.BriefDescription.GetHashCode();
                if (this.Reference != null)
                    hashCode = hashCode * 59 + this.Reference.GetHashCode();
                if (this.Priority != null)
                    hashCode = hashCode * 59 + this.Priority.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.ServiceOrderType != null)
                    hashCode = hashCode * 59 + this.ServiceOrderType.GetHashCode();
                if (this.System != null)
                    hashCode = hashCode * 59 + this.System.GetHashCode();
                if (this.WorkRequested != null)
                    hashCode = hashCode * 59 + this.WorkRequested.GetHashCode();
                if (this.WorkPerformed != null)
                    hashCode = hashCode * 59 + this.WorkPerformed.GetHashCode();
                if (this.PaymentMethod != null)
                    hashCode = hashCode * 59 + this.PaymentMethod.GetHashCode();
                if (this.ShippingMethod != null)
                    hashCode = hashCode * 59 + this.ShippingMethod.GetHashCode();
                if (this.InternalComments != null)
                    hashCode = hashCode * 59 + this.InternalComments.GetHashCode();
                if (this.DirectionsToLocation != null)
                    hashCode = hashCode * 59 + this.DirectionsToLocation.GetHashCode();
                if (this.CustomerPurchaseOrder != null)
                    hashCode = hashCode * 59 + this.CustomerPurchaseOrder.GetHashCode();
                if (this.VerifiedBy != null)
                    hashCode = hashCode * 59 + this.VerifiedBy.GetHashCode();
                if (this.ServiceZone != null)
                    hashCode = hashCode * 59 + this.ServiceZone.GetHashCode();
                if (this.RequestedBy != null)
                    hashCode = hashCode * 59 + this.RequestedBy.GetHashCode();
                if (this.TagNumber != null)
                    hashCode = hashCode * 59 + this.TagNumber.GetHashCode();
                if (this.LoanAgreement != null)
                    hashCode = hashCode * 59 + this.LoanAgreement.GetHashCode();
                if (this.DebitCreditMemo != null)
                    hashCode = hashCode * 59 + this.DebitCreditMemo.GetHashCode();
                if (this.InvoiceTerms != null)
                    hashCode = hashCode * 59 + this.InvoiceTerms.GetHashCode();
                if (this.FreightTerms != null)
                    hashCode = hashCode * 59 + this.FreightTerms.GetHashCode();
                if (this.SalesTaxCode != null)
                    hashCode = hashCode * 59 + this.SalesTaxCode.GetHashCode();
                if (this.DateTimeReceived != null)
                    hashCode = hashCode * 59 + this.DateTimeReceived.GetHashCode();
                if (this.DateTimeRequested != null)
                    hashCode = hashCode * 59 + this.DateTimeRequested.GetHashCode();
                if (this.DateTimeOpened != null)
                    hashCode = hashCode * 59 + this.DateTimeOpened.GetHashCode();
                if (this.DateTimeClosed != null)
                    hashCode = hashCode * 59 + this.DateTimeClosed.GetHashCode();
                if (this.VerifiedDate != null)
                    hashCode = hashCode * 59 + this.VerifiedDate.GetHashCode();
                if (this.ResolvedOnPhone != null)
                    hashCode = hashCode * 59 + this.ResolvedOnPhone.GetHashCode();
                if (this.BidPrice != null)
                    hashCode = hashCode * 59 + this.BidPrice.GetHashCode();
                if (this.TradeIn != null)
                    hashCode = hashCode * 59 + this.TradeIn.GetHashCode();
                if (this.Deposit != null)
                    hashCode = hashCode * 59 + this.Deposit.GetHashCode();
                if (this.Freight != null)
                    hashCode = hashCode * 59 + this.Freight.GetHashCode();
                if (this.BillToAddressType != null)
                    hashCode = hashCode * 59 + this.BillToAddressType.GetHashCode();
                if (this.BillToAddressAccountNumber != null)
                    hashCode = hashCode * 59 + this.BillToAddressAccountNumber.GetHashCode();
                if (this.BillTo != null)
                    hashCode = hashCode * 59 + this.BillTo.GetHashCode();
                if (this.ShipToAddressType != null)
                    hashCode = hashCode * 59 + this.ShipToAddressType.GetHashCode();
                if (this.ShipToAddressAccountNumber != null)
                    hashCode = hashCode * 59 + this.ShipToAddressAccountNumber.GetHashCode();
                if (this.ShipTo != null)
                    hashCode = hashCode * 59 + this.ShipTo.GetHashCode();
                if (this.UseAlternateShipToTaxCode != null)
                    hashCode = hashCode * 59 + this.UseAlternateShipToTaxCode.GetHashCode();
                if (this.CanReassignToHourlyUsageContractAlreadyInvoiced != null)
                    hashCode = hashCode * 59 + this.CanReassignToHourlyUsageContractAlreadyInvoiced.GetHashCode();
                if (this.CanUpdateContractMeterReadingToServiceOrderReading != null)
                    hashCode = hashCode * 59 + this.CanUpdateContractMeterReadingToServiceOrderReading.GetHashCode();
                if (this.AllowInactiveContract != null)
                    hashCode = hashCode * 59 + this.AllowInactiveContract.GetHashCode();
                if (this.AllowFutureContract != null)
                    hashCode = hashCode * 59 + this.AllowFutureContract.GetHashCode();
                if (this.AllowContractNoRemaining != null)
                    hashCode = hashCode * 59 + this.AllowContractNoRemaining.GetHashCode();
                if (this.UseContractDefaultTech != null)
                    hashCode = hashCode * 59 + this.UseContractDefaultTech.GetHashCode();
                if (this.DisplayOnCustomerPortal != null)
                    hashCode = hashCode * 59 + this.DisplayOnCustomerPortal.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
