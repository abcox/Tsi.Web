/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebDateTimeSearchModel
    /// </summary>
    [DataContract]
    public partial class TsiWebDateTimeSearchModel :  IEquatable<TsiWebDateTimeSearchModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebDateTimeSearchModel" /> class.
        /// </summary>
        /// <param name="criteria">criteria.</param>
        /// <param name="matchType">matchType.</param>
        public TsiWebDateTimeSearchModel(string criteria = default(string), string matchType = default(string))
        {
            this.Criteria = criteria;
            this.MatchType = matchType;
        }
        
        /// <summary>
        /// Gets or Sets Criteria
        /// </summary>
        [DataMember(Name="Criteria", EmitDefaultValue=false)]
        public string Criteria { get; set; }

        /// <summary>
        /// Gets or Sets MatchType
        /// </summary>
        [DataMember(Name="MatchType", EmitDefaultValue=false)]
        public string MatchType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebDateTimeSearchModel {\n");
            sb.Append("  Criteria: ").Append(Criteria).Append("\n");
            sb.Append("  MatchType: ").Append(MatchType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebDateTimeSearchModel);
        }

        /// <summary>
        /// Returns true if TsiWebDateTimeSearchModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebDateTimeSearchModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebDateTimeSearchModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Criteria == input.Criteria ||
                    (this.Criteria != null &&
                    this.Criteria.Equals(input.Criteria))
                ) && 
                (
                    this.MatchType == input.MatchType ||
                    (this.MatchType != null &&
                    this.MatchType.Equals(input.MatchType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Criteria != null)
                    hashCode = hashCode * 59 + this.Criteria.GetHashCode();
                if (this.MatchType != null)
                    hashCode = hashCode * 59 + this.MatchType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
