/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebDeleteServiceOrderPartsUsedModel
    /// </summary>
    [DataContract]
    public partial class TsiWebDeleteServiceOrderPartsUsedModel :  IEquatable<TsiWebDeleteServiceOrderPartsUsedModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebDeleteServiceOrderPartsUsedModel" /> class.
        /// </summary>
        /// <param name="deleteOrderedPart">deleteOrderedPart.</param>
        /// <param name="deleteLaborWithTimeLogs">deleteLaborWithTimeLogs.</param>
        /// <param name="deleteItemOnExchange">deleteItemOnExchange.</param>
        public TsiWebDeleteServiceOrderPartsUsedModel(bool? deleteOrderedPart = default(bool?), bool? deleteLaborWithTimeLogs = default(bool?), bool? deleteItemOnExchange = default(bool?))
        {
            this.DeleteOrderedPart = deleteOrderedPart;
            this.DeleteLaborWithTimeLogs = deleteLaborWithTimeLogs;
            this.DeleteItemOnExchange = deleteItemOnExchange;
        }
        
        /// <summary>
        /// Gets or Sets DeleteOrderedPart
        /// </summary>
        [DataMember(Name="DeleteOrderedPart", EmitDefaultValue=false)]
        public bool? DeleteOrderedPart { get; set; }

        /// <summary>
        /// Gets or Sets DeleteLaborWithTimeLogs
        /// </summary>
        [DataMember(Name="DeleteLaborWithTimeLogs", EmitDefaultValue=false)]
        public bool? DeleteLaborWithTimeLogs { get; set; }

        /// <summary>
        /// Gets or Sets DeleteItemOnExchange
        /// </summary>
        [DataMember(Name="DeleteItemOnExchange", EmitDefaultValue=false)]
        public bool? DeleteItemOnExchange { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebDeleteServiceOrderPartsUsedModel {\n");
            sb.Append("  DeleteOrderedPart: ").Append(DeleteOrderedPart).Append("\n");
            sb.Append("  DeleteLaborWithTimeLogs: ").Append(DeleteLaborWithTimeLogs).Append("\n");
            sb.Append("  DeleteItemOnExchange: ").Append(DeleteItemOnExchange).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebDeleteServiceOrderPartsUsedModel);
        }

        /// <summary>
        /// Returns true if TsiWebDeleteServiceOrderPartsUsedModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebDeleteServiceOrderPartsUsedModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebDeleteServiceOrderPartsUsedModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DeleteOrderedPart == input.DeleteOrderedPart ||
                    (this.DeleteOrderedPart != null &&
                    this.DeleteOrderedPart.Equals(input.DeleteOrderedPart))
                ) && 
                (
                    this.DeleteLaborWithTimeLogs == input.DeleteLaborWithTimeLogs ||
                    (this.DeleteLaborWithTimeLogs != null &&
                    this.DeleteLaborWithTimeLogs.Equals(input.DeleteLaborWithTimeLogs))
                ) && 
                (
                    this.DeleteItemOnExchange == input.DeleteItemOnExchange ||
                    (this.DeleteItemOnExchange != null &&
                    this.DeleteItemOnExchange.Equals(input.DeleteItemOnExchange))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DeleteOrderedPart != null)
                    hashCode = hashCode * 59 + this.DeleteOrderedPart.GetHashCode();
                if (this.DeleteLaborWithTimeLogs != null)
                    hashCode = hashCode * 59 + this.DeleteLaborWithTimeLogs.GetHashCode();
                if (this.DeleteItemOnExchange != null)
                    hashCode = hashCode * 59 + this.DeleteItemOnExchange.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
