/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebExpenseTypeModel
    /// </summary>
    [DataContract]
    public partial class TsiWebExpenseTypeModel :  IEquatable<TsiWebExpenseTypeModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebExpenseTypeModel" /> class.
        /// </summary>
        /// <param name="expenseTypeDescription">expenseTypeDescription.</param>
        /// <param name="isMileageExpense">isMileageExpense.</param>
        public TsiWebExpenseTypeModel(string expenseTypeDescription = default(string), bool? isMileageExpense = default(bool?))
        {
            this.ExpenseTypeDescription = expenseTypeDescription;
            this.IsMileageExpense = isMileageExpense;
        }
        
        /// <summary>
        /// Gets or Sets ExpenseTypeDescription
        /// </summary>
        [DataMember(Name="ExpenseTypeDescription", EmitDefaultValue=false)]
        public string ExpenseTypeDescription { get; set; }

        /// <summary>
        /// Gets or Sets IsMileageExpense
        /// </summary>
        [DataMember(Name="IsMileageExpense", EmitDefaultValue=false)]
        public bool? IsMileageExpense { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebExpenseTypeModel {\n");
            sb.Append("  ExpenseTypeDescription: ").Append(ExpenseTypeDescription).Append("\n");
            sb.Append("  IsMileageExpense: ").Append(IsMileageExpense).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebExpenseTypeModel);
        }

        /// <summary>
        /// Returns true if TsiWebExpenseTypeModel instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebExpenseTypeModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebExpenseTypeModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ExpenseTypeDescription == input.ExpenseTypeDescription ||
                    (this.ExpenseTypeDescription != null &&
                    this.ExpenseTypeDescription.Equals(input.ExpenseTypeDescription))
                ) && 
                (
                    this.IsMileageExpense == input.IsMileageExpense ||
                    (this.IsMileageExpense != null &&
                    this.IsMileageExpense.Equals(input.IsMileageExpense))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExpenseTypeDescription != null)
                    hashCode = hashCode * 59 + this.ExpenseTypeDescription.GetHashCode();
                if (this.IsMileageExpense != null)
                    hashCode = hashCode * 59 + this.IsMileageExpense.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
