/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebExternalProduct
    /// </summary>
    [DataContract]
    public partial class TsiWebExternalProduct :  IEquatable<TsiWebExternalProduct>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebExternalProduct" /> class.
        /// </summary>
        /// <param name="externalProductId">externalProductId.</param>
        /// <param name="product">product.</param>
        /// <param name="productType">productType.</param>
        /// <param name="systemEntry">systemEntry.</param>
        /// <param name="active">active.</param>
        public TsiWebExternalProduct(int? externalProductId = default(int?), string product = default(string), int? productType = default(int?), bool? systemEntry = default(bool?), bool? active = default(bool?))
        {
            this.ExternalProductId = externalProductId;
            this.Product = product;
            this.ProductType = productType;
            this.SystemEntry = systemEntry;
            this.Active = active;
        }
        
        /// <summary>
        /// Gets or Sets ExternalProductId
        /// </summary>
        [DataMember(Name="ExternalProductId", EmitDefaultValue=false)]
        public int? ExternalProductId { get; set; }

        /// <summary>
        /// Gets or Sets Product
        /// </summary>
        [DataMember(Name="Product", EmitDefaultValue=false)]
        public string Product { get; set; }

        /// <summary>
        /// Gets or Sets ProductType
        /// </summary>
        [DataMember(Name="ProductType", EmitDefaultValue=false)]
        public int? ProductType { get; set; }

        /// <summary>
        /// Gets or Sets SystemEntry
        /// </summary>
        [DataMember(Name="SystemEntry", EmitDefaultValue=false)]
        public bool? SystemEntry { get; set; }

        /// <summary>
        /// Gets or Sets Active
        /// </summary>
        [DataMember(Name="Active", EmitDefaultValue=false)]
        public bool? Active { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebExternalProduct {\n");
            sb.Append("  ExternalProductId: ").Append(ExternalProductId).Append("\n");
            sb.Append("  Product: ").Append(Product).Append("\n");
            sb.Append("  ProductType: ").Append(ProductType).Append("\n");
            sb.Append("  SystemEntry: ").Append(SystemEntry).Append("\n");
            sb.Append("  Active: ").Append(Active).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebExternalProduct);
        }

        /// <summary>
        /// Returns true if TsiWebExternalProduct instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebExternalProduct to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebExternalProduct input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ExternalProductId == input.ExternalProductId ||
                    (this.ExternalProductId != null &&
                    this.ExternalProductId.Equals(input.ExternalProductId))
                ) && 
                (
                    this.Product == input.Product ||
                    (this.Product != null &&
                    this.Product.Equals(input.Product))
                ) && 
                (
                    this.ProductType == input.ProductType ||
                    (this.ProductType != null &&
                    this.ProductType.Equals(input.ProductType))
                ) && 
                (
                    this.SystemEntry == input.SystemEntry ||
                    (this.SystemEntry != null &&
                    this.SystemEntry.Equals(input.SystemEntry))
                ) && 
                (
                    this.Active == input.Active ||
                    (this.Active != null &&
                    this.Active.Equals(input.Active))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExternalProductId != null)
                    hashCode = hashCode * 59 + this.ExternalProductId.GetHashCode();
                if (this.Product != null)
                    hashCode = hashCode * 59 + this.Product.GetHashCode();
                if (this.ProductType != null)
                    hashCode = hashCode * 59 + this.ProductType.GetHashCode();
                if (this.SystemEntry != null)
                    hashCode = hashCode * 59 + this.SystemEntry.GetHashCode();
                if (this.Active != null)
                    hashCode = hashCode * 59 + this.Active.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
