/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebJournalEntrySummary
    /// </summary>
    [DataContract]
    public partial class TsiWebJournalEntrySummary :  IEquatable<TsiWebJournalEntrySummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebJournalEntrySummary" /> class.
        /// </summary>
        /// <param name="journalEntry">journalEntry.</param>
        /// <param name="accountName">accountName.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="contact">contact.</param>
        /// <param name="rep">rep.</param>
        public TsiWebJournalEntrySummary(TsiWebJournalEntry journalEntry = default(TsiWebJournalEntry), string accountName = default(string), string phoneNumber = default(string), string faxNumber = default(string), TsiWebPerson contact = default(TsiWebPerson), TsiWebPerson rep = default(TsiWebPerson))
        {
            this.JournalEntry = journalEntry;
            this.AccountName = accountName;
            this.PhoneNumber = phoneNumber;
            this.FaxNumber = faxNumber;
            this.Contact = contact;
            this.Rep = rep;
        }
        
        /// <summary>
        /// Gets or Sets JournalEntry
        /// </summary>
        [DataMember(Name="JournalEntry", EmitDefaultValue=false)]
        public TsiWebJournalEntry JournalEntry { get; set; }

        /// <summary>
        /// Gets or Sets AccountName
        /// </summary>
        [DataMember(Name="AccountName", EmitDefaultValue=false)]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="PhoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="FaxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name="Contact", EmitDefaultValue=false)]
        public TsiWebPerson Contact { get; set; }

        /// <summary>
        /// Gets or Sets Rep
        /// </summary>
        [DataMember(Name="Rep", EmitDefaultValue=false)]
        public TsiWebPerson Rep { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebJournalEntrySummary {\n");
            sb.Append("  JournalEntry: ").Append(JournalEntry).Append("\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  Rep: ").Append(Rep).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebJournalEntrySummary);
        }

        /// <summary>
        /// Returns true if TsiWebJournalEntrySummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebJournalEntrySummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebJournalEntrySummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.JournalEntry == input.JournalEntry ||
                    (this.JournalEntry != null &&
                    this.JournalEntry.Equals(input.JournalEntry))
                ) && 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.Contact == input.Contact ||
                    (this.Contact != null &&
                    this.Contact.Equals(input.Contact))
                ) && 
                (
                    this.Rep == input.Rep ||
                    (this.Rep != null &&
                    this.Rep.Equals(input.Rep))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.JournalEntry != null)
                    hashCode = hashCode * 59 + this.JournalEntry.GetHashCode();
                if (this.AccountName != null)
                    hashCode = hashCode * 59 + this.AccountName.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.Contact != null)
                    hashCode = hashCode * 59 + this.Contact.GetHashCode();
                if (this.Rep != null)
                    hashCode = hashCode * 59 + this.Rep.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
