/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebOpportunityDetail
    /// </summary>
    [DataContract]
    public partial class TsiWebOpportunityDetail :  IEquatable<TsiWebOpportunityDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebOpportunityDetail" /> class.
        /// </summary>
        /// <param name="opportunityNumber">opportunityNumber.</param>
        /// <param name="opportunity">opportunity.</param>
        /// <param name="stage">stage.</param>
        /// <param name="stageLogs">stageLogs.</param>
        /// <param name="account">account.</param>
        /// <param name="contact">contact.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="ownerName">ownerName.</param>
        /// <param name="ownerEmailAddress">ownerEmailAddress.</param>
        /// <param name="ownerPhoneNumber">ownerPhoneNumber.</param>
        /// <param name="customFields">customFields.</param>
        /// <param name="journalEntries">journalEntries.</param>
        /// <param name="pastDueTasks">pastDueTasks.</param>
        /// <param name="openQuotes">openQuotes.</param>
        public TsiWebOpportunityDetail(int? opportunityNumber = default(int?), TsiWebOpportunity opportunity = default(TsiWebOpportunity), TsiWebOpportunityStageSummary stage = default(TsiWebOpportunityStageSummary), List<TsiWebOpportunityStageLog> stageLogs = default(List<TsiWebOpportunityStageLog>), TsiWebAccount account = default(TsiWebAccount), TsiWebPerson contact = default(TsiWebPerson), string phoneNumber = default(string), string faxNumber = default(string), string ownerName = default(string), string ownerEmailAddress = default(string), string ownerPhoneNumber = default(string), List<TsiWebCustomField> customFields = default(List<TsiWebCustomField>), int? journalEntries = default(int?), int? pastDueTasks = default(int?), int? openQuotes = default(int?))
        {
            this.OpportunityNumber = opportunityNumber;
            this.Opportunity = opportunity;
            this.Stage = stage;
            this.StageLogs = stageLogs;
            this.Account = account;
            this.Contact = contact;
            this.PhoneNumber = phoneNumber;
            this.FaxNumber = faxNumber;
            this.OwnerName = ownerName;
            this.OwnerEmailAddress = ownerEmailAddress;
            this.OwnerPhoneNumber = ownerPhoneNumber;
            this.CustomFields = customFields;
            this.JournalEntries = journalEntries;
            this.PastDueTasks = pastDueTasks;
            this.OpenQuotes = openQuotes;
        }
        
        /// <summary>
        /// Gets or Sets OpportunityNumber
        /// </summary>
        [DataMember(Name="OpportunityNumber", EmitDefaultValue=false)]
        public int? OpportunityNumber { get; set; }

        /// <summary>
        /// Gets or Sets Opportunity
        /// </summary>
        [DataMember(Name="Opportunity", EmitDefaultValue=false)]
        public TsiWebOpportunity Opportunity { get; set; }

        /// <summary>
        /// Gets or Sets Stage
        /// </summary>
        [DataMember(Name="Stage", EmitDefaultValue=false)]
        public TsiWebOpportunityStageSummary Stage { get; set; }

        /// <summary>
        /// Gets or Sets StageLogs
        /// </summary>
        [DataMember(Name="StageLogs", EmitDefaultValue=false)]
        public List<TsiWebOpportunityStageLog> StageLogs { get; set; }

        /// <summary>
        /// Gets or Sets Account
        /// </summary>
        [DataMember(Name="Account", EmitDefaultValue=false)]
        public TsiWebAccount Account { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name="Contact", EmitDefaultValue=false)]
        public TsiWebPerson Contact { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="PhoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="FaxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets OwnerName
        /// </summary>
        [DataMember(Name="OwnerName", EmitDefaultValue=false)]
        public string OwnerName { get; set; }

        /// <summary>
        /// Gets or Sets OwnerEmailAddress
        /// </summary>
        [DataMember(Name="OwnerEmailAddress", EmitDefaultValue=false)]
        public string OwnerEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets OwnerPhoneNumber
        /// </summary>
        [DataMember(Name="OwnerPhoneNumber", EmitDefaultValue=false)]
        public string OwnerPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="CustomFields", EmitDefaultValue=false)]
        public List<TsiWebCustomField> CustomFields { get; set; }

        /// <summary>
        /// Gets or Sets JournalEntries
        /// </summary>
        [DataMember(Name="JournalEntries", EmitDefaultValue=false)]
        public int? JournalEntries { get; set; }

        /// <summary>
        /// Gets or Sets PastDueTasks
        /// </summary>
        [DataMember(Name="PastDueTasks", EmitDefaultValue=false)]
        public int? PastDueTasks { get; set; }

        /// <summary>
        /// Gets or Sets OpenQuotes
        /// </summary>
        [DataMember(Name="OpenQuotes", EmitDefaultValue=false)]
        public int? OpenQuotes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebOpportunityDetail {\n");
            sb.Append("  OpportunityNumber: ").Append(OpportunityNumber).Append("\n");
            sb.Append("  Opportunity: ").Append(Opportunity).Append("\n");
            sb.Append("  Stage: ").Append(Stage).Append("\n");
            sb.Append("  StageLogs: ").Append(StageLogs).Append("\n");
            sb.Append("  Account: ").Append(Account).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  OwnerName: ").Append(OwnerName).Append("\n");
            sb.Append("  OwnerEmailAddress: ").Append(OwnerEmailAddress).Append("\n");
            sb.Append("  OwnerPhoneNumber: ").Append(OwnerPhoneNumber).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("  JournalEntries: ").Append(JournalEntries).Append("\n");
            sb.Append("  PastDueTasks: ").Append(PastDueTasks).Append("\n");
            sb.Append("  OpenQuotes: ").Append(OpenQuotes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebOpportunityDetail);
        }

        /// <summary>
        /// Returns true if TsiWebOpportunityDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebOpportunityDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebOpportunityDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OpportunityNumber == input.OpportunityNumber ||
                    (this.OpportunityNumber != null &&
                    this.OpportunityNumber.Equals(input.OpportunityNumber))
                ) && 
                (
                    this.Opportunity == input.Opportunity ||
                    (this.Opportunity != null &&
                    this.Opportunity.Equals(input.Opportunity))
                ) && 
                (
                    this.Stage == input.Stage ||
                    (this.Stage != null &&
                    this.Stage.Equals(input.Stage))
                ) && 
                (
                    this.StageLogs == input.StageLogs ||
                    this.StageLogs != null &&
                    this.StageLogs.SequenceEqual(input.StageLogs)
                ) && 
                (
                    this.Account == input.Account ||
                    (this.Account != null &&
                    this.Account.Equals(input.Account))
                ) && 
                (
                    this.Contact == input.Contact ||
                    (this.Contact != null &&
                    this.Contact.Equals(input.Contact))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.OwnerName == input.OwnerName ||
                    (this.OwnerName != null &&
                    this.OwnerName.Equals(input.OwnerName))
                ) && 
                (
                    this.OwnerEmailAddress == input.OwnerEmailAddress ||
                    (this.OwnerEmailAddress != null &&
                    this.OwnerEmailAddress.Equals(input.OwnerEmailAddress))
                ) && 
                (
                    this.OwnerPhoneNumber == input.OwnerPhoneNumber ||
                    (this.OwnerPhoneNumber != null &&
                    this.OwnerPhoneNumber.Equals(input.OwnerPhoneNumber))
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                ) && 
                (
                    this.JournalEntries == input.JournalEntries ||
                    (this.JournalEntries != null &&
                    this.JournalEntries.Equals(input.JournalEntries))
                ) && 
                (
                    this.PastDueTasks == input.PastDueTasks ||
                    (this.PastDueTasks != null &&
                    this.PastDueTasks.Equals(input.PastDueTasks))
                ) && 
                (
                    this.OpenQuotes == input.OpenQuotes ||
                    (this.OpenQuotes != null &&
                    this.OpenQuotes.Equals(input.OpenQuotes))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OpportunityNumber != null)
                    hashCode = hashCode * 59 + this.OpportunityNumber.GetHashCode();
                if (this.Opportunity != null)
                    hashCode = hashCode * 59 + this.Opportunity.GetHashCode();
                if (this.Stage != null)
                    hashCode = hashCode * 59 + this.Stage.GetHashCode();
                if (this.StageLogs != null)
                    hashCode = hashCode * 59 + this.StageLogs.GetHashCode();
                if (this.Account != null)
                    hashCode = hashCode * 59 + this.Account.GetHashCode();
                if (this.Contact != null)
                    hashCode = hashCode * 59 + this.Contact.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.OwnerName != null)
                    hashCode = hashCode * 59 + this.OwnerName.GetHashCode();
                if (this.OwnerEmailAddress != null)
                    hashCode = hashCode * 59 + this.OwnerEmailAddress.GetHashCode();
                if (this.OwnerPhoneNumber != null)
                    hashCode = hashCode * 59 + this.OwnerPhoneNumber.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                if (this.JournalEntries != null)
                    hashCode = hashCode * 59 + this.JournalEntries.GetHashCode();
                if (this.PastDueTasks != null)
                    hashCode = hashCode * 59 + this.PastDueTasks.GetHashCode();
                if (this.OpenQuotes != null)
                    hashCode = hashCode * 59 + this.OpenQuotes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
