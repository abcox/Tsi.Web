/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebOpportunitySummary
    /// </summary>
    [DataContract]
    public partial class TsiWebOpportunitySummary :  IEquatable<TsiWebOpportunitySummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebOpportunitySummary" /> class.
        /// </summary>
        /// <param name="opportunityNumber">opportunityNumber.</param>
        /// <param name="opportunity">opportunity.</param>
        /// <param name="accountName">accountName.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="ownerName">ownerName.</param>
        /// <param name="ownerEmailAddress">ownerEmailAddress.</param>
        /// <param name="ownerPhoneNumber">ownerPhoneNumber.</param>
        /// <param name="contactName">contactName.</param>
        /// <param name="contactEmailAddress">contactEmailAddress.</param>
        /// <param name="contactPhoneNumber">contactPhoneNumber.</param>
        /// <param name="stageDescription">stageDescription.</param>
        /// <param name="stageProbabilityOfSale">stageProbabilityOfSale.</param>
        /// <param name="journalEntries">journalEntries.</param>
        /// <param name="pastDueTasks">pastDueTasks.</param>
        /// <param name="openQuotes">openQuotes.</param>
        public TsiWebOpportunitySummary(int? opportunityNumber = default(int?), TsiWebOpportunity opportunity = default(TsiWebOpportunity), string accountName = default(string), string phoneNumber = default(string), string faxNumber = default(string), string ownerName = default(string), string ownerEmailAddress = default(string), string ownerPhoneNumber = default(string), string contactName = default(string), string contactEmailAddress = default(string), string contactPhoneNumber = default(string), string stageDescription = default(string), double? stageProbabilityOfSale = default(double?), int? journalEntries = default(int?), int? pastDueTasks = default(int?), int? openQuotes = default(int?))
        {
            this.OpportunityNumber = opportunityNumber;
            this.Opportunity = opportunity;
            this.AccountName = accountName;
            this.PhoneNumber = phoneNumber;
            this.FaxNumber = faxNumber;
            this.OwnerName = ownerName;
            this.OwnerEmailAddress = ownerEmailAddress;
            this.OwnerPhoneNumber = ownerPhoneNumber;
            this.ContactName = contactName;
            this.ContactEmailAddress = contactEmailAddress;
            this.ContactPhoneNumber = contactPhoneNumber;
            this.StageDescription = stageDescription;
            this.StageProbabilityOfSale = stageProbabilityOfSale;
            this.JournalEntries = journalEntries;
            this.PastDueTasks = pastDueTasks;
            this.OpenQuotes = openQuotes;
        }
        
        /// <summary>
        /// Gets or Sets OpportunityNumber
        /// </summary>
        [DataMember(Name="OpportunityNumber", EmitDefaultValue=false)]
        public int? OpportunityNumber { get; set; }

        /// <summary>
        /// Gets or Sets Opportunity
        /// </summary>
        [DataMember(Name="Opportunity", EmitDefaultValue=false)]
        public TsiWebOpportunity Opportunity { get; set; }

        /// <summary>
        /// Gets or Sets AccountName
        /// </summary>
        [DataMember(Name="AccountName", EmitDefaultValue=false)]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="PhoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="FaxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets OwnerName
        /// </summary>
        [DataMember(Name="OwnerName", EmitDefaultValue=false)]
        public string OwnerName { get; set; }

        /// <summary>
        /// Gets or Sets OwnerEmailAddress
        /// </summary>
        [DataMember(Name="OwnerEmailAddress", EmitDefaultValue=false)]
        public string OwnerEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets OwnerPhoneNumber
        /// </summary>
        [DataMember(Name="OwnerPhoneNumber", EmitDefaultValue=false)]
        public string OwnerPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name="ContactName", EmitDefaultValue=false)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets ContactEmailAddress
        /// </summary>
        [DataMember(Name="ContactEmailAddress", EmitDefaultValue=false)]
        public string ContactEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets ContactPhoneNumber
        /// </summary>
        [DataMember(Name="ContactPhoneNumber", EmitDefaultValue=false)]
        public string ContactPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets StageDescription
        /// </summary>
        [DataMember(Name="StageDescription", EmitDefaultValue=false)]
        public string StageDescription { get; set; }

        /// <summary>
        /// Gets or Sets StageProbabilityOfSale
        /// </summary>
        [DataMember(Name="StageProbabilityOfSale", EmitDefaultValue=false)]
        public double? StageProbabilityOfSale { get; set; }

        /// <summary>
        /// Gets or Sets JournalEntries
        /// </summary>
        [DataMember(Name="JournalEntries", EmitDefaultValue=false)]
        public int? JournalEntries { get; set; }

        /// <summary>
        /// Gets or Sets PastDueTasks
        /// </summary>
        [DataMember(Name="PastDueTasks", EmitDefaultValue=false)]
        public int? PastDueTasks { get; set; }

        /// <summary>
        /// Gets or Sets OpenQuotes
        /// </summary>
        [DataMember(Name="OpenQuotes", EmitDefaultValue=false)]
        public int? OpenQuotes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebOpportunitySummary {\n");
            sb.Append("  OpportunityNumber: ").Append(OpportunityNumber).Append("\n");
            sb.Append("  Opportunity: ").Append(Opportunity).Append("\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  OwnerName: ").Append(OwnerName).Append("\n");
            sb.Append("  OwnerEmailAddress: ").Append(OwnerEmailAddress).Append("\n");
            sb.Append("  OwnerPhoneNumber: ").Append(OwnerPhoneNumber).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  ContactEmailAddress: ").Append(ContactEmailAddress).Append("\n");
            sb.Append("  ContactPhoneNumber: ").Append(ContactPhoneNumber).Append("\n");
            sb.Append("  StageDescription: ").Append(StageDescription).Append("\n");
            sb.Append("  StageProbabilityOfSale: ").Append(StageProbabilityOfSale).Append("\n");
            sb.Append("  JournalEntries: ").Append(JournalEntries).Append("\n");
            sb.Append("  PastDueTasks: ").Append(PastDueTasks).Append("\n");
            sb.Append("  OpenQuotes: ").Append(OpenQuotes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebOpportunitySummary);
        }

        /// <summary>
        /// Returns true if TsiWebOpportunitySummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebOpportunitySummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebOpportunitySummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OpportunityNumber == input.OpportunityNumber ||
                    (this.OpportunityNumber != null &&
                    this.OpportunityNumber.Equals(input.OpportunityNumber))
                ) && 
                (
                    this.Opportunity == input.Opportunity ||
                    (this.Opportunity != null &&
                    this.Opportunity.Equals(input.Opportunity))
                ) && 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.OwnerName == input.OwnerName ||
                    (this.OwnerName != null &&
                    this.OwnerName.Equals(input.OwnerName))
                ) && 
                (
                    this.OwnerEmailAddress == input.OwnerEmailAddress ||
                    (this.OwnerEmailAddress != null &&
                    this.OwnerEmailAddress.Equals(input.OwnerEmailAddress))
                ) && 
                (
                    this.OwnerPhoneNumber == input.OwnerPhoneNumber ||
                    (this.OwnerPhoneNumber != null &&
                    this.OwnerPhoneNumber.Equals(input.OwnerPhoneNumber))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.ContactEmailAddress == input.ContactEmailAddress ||
                    (this.ContactEmailAddress != null &&
                    this.ContactEmailAddress.Equals(input.ContactEmailAddress))
                ) && 
                (
                    this.ContactPhoneNumber == input.ContactPhoneNumber ||
                    (this.ContactPhoneNumber != null &&
                    this.ContactPhoneNumber.Equals(input.ContactPhoneNumber))
                ) && 
                (
                    this.StageDescription == input.StageDescription ||
                    (this.StageDescription != null &&
                    this.StageDescription.Equals(input.StageDescription))
                ) && 
                (
                    this.StageProbabilityOfSale == input.StageProbabilityOfSale ||
                    (this.StageProbabilityOfSale != null &&
                    this.StageProbabilityOfSale.Equals(input.StageProbabilityOfSale))
                ) && 
                (
                    this.JournalEntries == input.JournalEntries ||
                    (this.JournalEntries != null &&
                    this.JournalEntries.Equals(input.JournalEntries))
                ) && 
                (
                    this.PastDueTasks == input.PastDueTasks ||
                    (this.PastDueTasks != null &&
                    this.PastDueTasks.Equals(input.PastDueTasks))
                ) && 
                (
                    this.OpenQuotes == input.OpenQuotes ||
                    (this.OpenQuotes != null &&
                    this.OpenQuotes.Equals(input.OpenQuotes))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OpportunityNumber != null)
                    hashCode = hashCode * 59 + this.OpportunityNumber.GetHashCode();
                if (this.Opportunity != null)
                    hashCode = hashCode * 59 + this.Opportunity.GetHashCode();
                if (this.AccountName != null)
                    hashCode = hashCode * 59 + this.AccountName.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.OwnerName != null)
                    hashCode = hashCode * 59 + this.OwnerName.GetHashCode();
                if (this.OwnerEmailAddress != null)
                    hashCode = hashCode * 59 + this.OwnerEmailAddress.GetHashCode();
                if (this.OwnerPhoneNumber != null)
                    hashCode = hashCode * 59 + this.OwnerPhoneNumber.GetHashCode();
                if (this.ContactName != null)
                    hashCode = hashCode * 59 + this.ContactName.GetHashCode();
                if (this.ContactEmailAddress != null)
                    hashCode = hashCode * 59 + this.ContactEmailAddress.GetHashCode();
                if (this.ContactPhoneNumber != null)
                    hashCode = hashCode * 59 + this.ContactPhoneNumber.GetHashCode();
                if (this.StageDescription != null)
                    hashCode = hashCode * 59 + this.StageDescription.GetHashCode();
                if (this.StageProbabilityOfSale != null)
                    hashCode = hashCode * 59 + this.StageProbabilityOfSale.GetHashCode();
                if (this.JournalEntries != null)
                    hashCode = hashCode * 59 + this.JournalEntries.GetHashCode();
                if (this.PastDueTasks != null)
                    hashCode = hashCode * 59 + this.PastDueTasks.GetHashCode();
                if (this.OpenQuotes != null)
                    hashCode = hashCode * 59 + this.OpenQuotes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
