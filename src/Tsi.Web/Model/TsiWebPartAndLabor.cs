/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebPartAndLabor
    /// </summary>
    [DataContract]
    public partial class TsiWebPartAndLabor :  IEquatable<TsiWebPartAndLabor>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPartAndLabor" /> class.
        /// </summary>
        /// <param name="accountNumber">Gets or sets the AccountNumber.</param>
        /// <param name="sOPartsUsedNumber">Gets or sets the SOPartsUsedKeyID.</param>
        /// <param name="serviceOrderNumber">Gets or sets the SONumber.</param>
        /// <param name="itemID">Gets or sets the ItemID.</param>
        /// <param name="partsDescription">Gets or sets the Description.</param>
        /// <param name="quantity">Gets or sets the Quantity.</param>
        /// <param name="sellingPrice">Gets or sets the SellingPrice.</param>
        /// <param name="totalSellingPrice">Gets or sets the TotalSellingPrice.</param>
        /// <param name="quantityOrdered">Gets or sets the QuantityOrdered.</param>
        /// <param name="quantityReceived">Gets or sets the QuantityReceived.</param>
        /// <param name="quantityFilled">Gets or sets the QuantityFilled.</param>
        /// <param name="quantityInvoiced">Gets or sets the QuantityInvoiced.</param>
        /// <param name="quantityPosted">Gets or sets the QuantityPosted.</param>
        /// <param name="quantityShipped">Gets or sets the QuantityShipped.</param>
        /// <param name="exchange">Gets or sets the Exchange.</param>
        /// <param name="underContract">Gets or sets the UnderContract.</param>
        /// <param name="taxed">Gets or sets the Taxed.</param>
        /// <param name="providerTaxed">Gets or sets the ProviderTaxed.</param>
        /// <param name="costGLCode">Gets or sets the CostGLCode.</param>
        /// <param name="incomeGLCode">Gets or sets the IncomeGLCode.</param>
        /// <param name="notes">Gets or sets the Notes.</param>
        /// <param name="itemType">Gets or sets the Item Type.</param>
        /// <param name="assemblyType">Gets or sets the Item Assembly type, if the Item is of type assembly.</param>
        /// <param name="cost">Gets or sets the Cost.</param>
        /// <param name="printOnInvoice">Gets or sets the PrintOnInvoice.</param>
        /// <param name="partNumber">Gets or sets the PartNumber.</param>
        /// <param name="orderByDate">Gets or sets the Order By Date.</param>
        /// <param name="isRepairLevel">Gets or sets the Is RepairLevel.</param>
        /// <param name="itemServiced">Gets or sets the Item Serviced.</param>
        /// <param name="projectPhase">Gets or sets the Project Phase.</param>
        /// <param name="installLocation">Gets or sets the Install Location.</param>
        /// <param name="priceLevel">Gets or sets the PriceLevel.</param>
        public TsiWebPartAndLabor(int? accountNumber = default(int?), int? sOPartsUsedNumber = default(int?), int? serviceOrderNumber = default(int?), string itemID = default(string), string partsDescription = default(string), double? quantity = default(double?), double? sellingPrice = default(double?), double? totalSellingPrice = default(double?), double? quantityOrdered = default(double?), double? quantityReceived = default(double?), double? quantityFilled = default(double?), double? quantityInvoiced = default(double?), double? quantityPosted = default(double?), double? quantityShipped = default(double?), bool? exchange = default(bool?), bool? underContract = default(bool?), bool? taxed = default(bool?), bool? providerTaxed = default(bool?), string costGLCode = default(string), string incomeGLCode = default(string), string notes = default(string), string itemType = default(string), string assemblyType = default(string), double? cost = default(double?), bool? printOnInvoice = default(bool?), string partNumber = default(string), DateTime? orderByDate = default(DateTime?), bool? isRepairLevel = default(bool?), string itemServiced = default(string), string projectPhase = default(string), string installLocation = default(string), int? priceLevel = default(int?))
        {
            this.AccountNumber = accountNumber;
            this.SOPartsUsedNumber = sOPartsUsedNumber;
            this.ServiceOrderNumber = serviceOrderNumber;
            this.ItemID = itemID;
            this.PartsDescription = partsDescription;
            this.Quantity = quantity;
            this.SellingPrice = sellingPrice;
            this.TotalSellingPrice = totalSellingPrice;
            this.QuantityOrdered = quantityOrdered;
            this.QuantityReceived = quantityReceived;
            this.QuantityFilled = quantityFilled;
            this.QuantityInvoiced = quantityInvoiced;
            this.QuantityPosted = quantityPosted;
            this.QuantityShipped = quantityShipped;
            this.Exchange = exchange;
            this.UnderContract = underContract;
            this.Taxed = taxed;
            this.ProviderTaxed = providerTaxed;
            this.CostGLCode = costGLCode;
            this.IncomeGLCode = incomeGLCode;
            this.Notes = notes;
            this.ItemType = itemType;
            this.AssemblyType = assemblyType;
            this.Cost = cost;
            this.PrintOnInvoice = printOnInvoice;
            this.PartNumber = partNumber;
            this.OrderByDate = orderByDate;
            this.IsRepairLevel = isRepairLevel;
            this.ItemServiced = itemServiced;
            this.ProjectPhase = projectPhase;
            this.InstallLocation = installLocation;
            this.PriceLevel = priceLevel;
        }
        
        /// <summary>
        /// Gets or sets the AccountNumber
        /// </summary>
        /// <value>Gets or sets the AccountNumber</value>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or sets the SOPartsUsedKeyID
        /// </summary>
        /// <value>Gets or sets the SOPartsUsedKeyID</value>
        [DataMember(Name="SOPartsUsedNumber", EmitDefaultValue=false)]
        public int? SOPartsUsedNumber { get; set; }

        /// <summary>
        /// Gets or sets the SONumber
        /// </summary>
        /// <value>Gets or sets the SONumber</value>
        [DataMember(Name="ServiceOrderNumber", EmitDefaultValue=false)]
        public int? ServiceOrderNumber { get; set; }

        /// <summary>
        /// Gets or sets the ItemID
        /// </summary>
        /// <value>Gets or sets the ItemID</value>
        [DataMember(Name="ItemID", EmitDefaultValue=false)]
        public string ItemID { get; set; }

        /// <summary>
        /// Gets or sets the Description
        /// </summary>
        /// <value>Gets or sets the Description</value>
        [DataMember(Name="PartsDescription", EmitDefaultValue=false)]
        public string PartsDescription { get; set; }

        /// <summary>
        /// Gets or sets the Quantity
        /// </summary>
        /// <value>Gets or sets the Quantity</value>
        [DataMember(Name="Quantity", EmitDefaultValue=false)]
        public double? Quantity { get; set; }

        /// <summary>
        /// Gets or sets the SellingPrice
        /// </summary>
        /// <value>Gets or sets the SellingPrice</value>
        [DataMember(Name="SellingPrice", EmitDefaultValue=false)]
        public double? SellingPrice { get; set; }

        /// <summary>
        /// Gets or sets the TotalSellingPrice
        /// </summary>
        /// <value>Gets or sets the TotalSellingPrice</value>
        [DataMember(Name="TotalSellingPrice", EmitDefaultValue=false)]
        public double? TotalSellingPrice { get; set; }

        /// <summary>
        /// Gets or sets the QuantityOrdered
        /// </summary>
        /// <value>Gets or sets the QuantityOrdered</value>
        [DataMember(Name="QuantityOrdered", EmitDefaultValue=false)]
        public double? QuantityOrdered { get; set; }

        /// <summary>
        /// Gets or sets the QuantityReceived
        /// </summary>
        /// <value>Gets or sets the QuantityReceived</value>
        [DataMember(Name="QuantityReceived", EmitDefaultValue=false)]
        public double? QuantityReceived { get; set; }

        /// <summary>
        /// Gets or sets the QuantityFilled
        /// </summary>
        /// <value>Gets or sets the QuantityFilled</value>
        [DataMember(Name="QuantityFilled", EmitDefaultValue=false)]
        public double? QuantityFilled { get; set; }

        /// <summary>
        /// Gets or sets the QuantityInvoiced
        /// </summary>
        /// <value>Gets or sets the QuantityInvoiced</value>
        [DataMember(Name="QuantityInvoiced", EmitDefaultValue=false)]
        public double? QuantityInvoiced { get; set; }

        /// <summary>
        /// Gets or sets the QuantityPosted
        /// </summary>
        /// <value>Gets or sets the QuantityPosted</value>
        [DataMember(Name="QuantityPosted", EmitDefaultValue=false)]
        public double? QuantityPosted { get; set; }

        /// <summary>
        /// Gets or sets the QuantityShipped
        /// </summary>
        /// <value>Gets or sets the QuantityShipped</value>
        [DataMember(Name="QuantityShipped", EmitDefaultValue=false)]
        public double? QuantityShipped { get; set; }

        /// <summary>
        /// Gets or sets the Exchange
        /// </summary>
        /// <value>Gets or sets the Exchange</value>
        [DataMember(Name="Exchange", EmitDefaultValue=false)]
        public bool? Exchange { get; set; }

        /// <summary>
        /// Gets or sets the UnderContract
        /// </summary>
        /// <value>Gets or sets the UnderContract</value>
        [DataMember(Name="UnderContract", EmitDefaultValue=false)]
        public bool? UnderContract { get; set; }

        /// <summary>
        /// Gets or sets the Taxed
        /// </summary>
        /// <value>Gets or sets the Taxed</value>
        [DataMember(Name="Taxed", EmitDefaultValue=false)]
        public bool? Taxed { get; set; }

        /// <summary>
        /// Gets or sets the ProviderTaxed
        /// </summary>
        /// <value>Gets or sets the ProviderTaxed</value>
        [DataMember(Name="ProviderTaxed", EmitDefaultValue=false)]
        public bool? ProviderTaxed { get; set; }

        /// <summary>
        /// Gets or sets the CostGLCode
        /// </summary>
        /// <value>Gets or sets the CostGLCode</value>
        [DataMember(Name="CostGLCode", EmitDefaultValue=false)]
        public string CostGLCode { get; set; }

        /// <summary>
        /// Gets or sets the IncomeGLCode
        /// </summary>
        /// <value>Gets or sets the IncomeGLCode</value>
        [DataMember(Name="IncomeGLCode", EmitDefaultValue=false)]
        public string IncomeGLCode { get; set; }

        /// <summary>
        /// Gets or sets the Notes
        /// </summary>
        /// <value>Gets or sets the Notes</value>
        [DataMember(Name="Notes", EmitDefaultValue=false)]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or sets the Item Type
        /// </summary>
        /// <value>Gets or sets the Item Type</value>
        [DataMember(Name="ItemType", EmitDefaultValue=false)]
        public string ItemType { get; set; }

        /// <summary>
        /// Gets or sets the Item Assembly type, if the Item is of type assembly
        /// </summary>
        /// <value>Gets or sets the Item Assembly type, if the Item is of type assembly</value>
        [DataMember(Name="AssemblyType", EmitDefaultValue=false)]
        public string AssemblyType { get; set; }

        /// <summary>
        /// Gets or sets the Cost
        /// </summary>
        /// <value>Gets or sets the Cost</value>
        [DataMember(Name="Cost", EmitDefaultValue=false)]
        public double? Cost { get; set; }

        /// <summary>
        /// Gets or sets the PrintOnInvoice
        /// </summary>
        /// <value>Gets or sets the PrintOnInvoice</value>
        [DataMember(Name="PrintOnInvoice", EmitDefaultValue=false)]
        public bool? PrintOnInvoice { get; set; }

        /// <summary>
        /// Gets or sets the PartNumber
        /// </summary>
        /// <value>Gets or sets the PartNumber</value>
        [DataMember(Name="PartNumber", EmitDefaultValue=false)]
        public string PartNumber { get; set; }

        /// <summary>
        /// Gets or sets the Order By Date
        /// </summary>
        /// <value>Gets or sets the Order By Date</value>
        [DataMember(Name="OrderByDate", EmitDefaultValue=false)]
        public DateTime? OrderByDate { get; set; }

        /// <summary>
        /// Gets or sets the Is RepairLevel
        /// </summary>
        /// <value>Gets or sets the Is RepairLevel</value>
        [DataMember(Name="IsRepairLevel", EmitDefaultValue=false)]
        public bool? IsRepairLevel { get; set; }

        /// <summary>
        /// Gets or sets the Item Serviced
        /// </summary>
        /// <value>Gets or sets the Item Serviced</value>
        [DataMember(Name="ItemServiced", EmitDefaultValue=false)]
        public string ItemServiced { get; set; }

        /// <summary>
        /// Gets or sets the Project Phase
        /// </summary>
        /// <value>Gets or sets the Project Phase</value>
        [DataMember(Name="ProjectPhase", EmitDefaultValue=false)]
        public string ProjectPhase { get; set; }

        /// <summary>
        /// Gets or sets the Install Location
        /// </summary>
        /// <value>Gets or sets the Install Location</value>
        [DataMember(Name="InstallLocation", EmitDefaultValue=false)]
        public string InstallLocation { get; set; }

        /// <summary>
        /// Gets or sets the PriceLevel
        /// </summary>
        /// <value>Gets or sets the PriceLevel</value>
        [DataMember(Name="PriceLevel", EmitDefaultValue=false)]
        public int? PriceLevel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebPartAndLabor {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  SOPartsUsedNumber: ").Append(SOPartsUsedNumber).Append("\n");
            sb.Append("  ServiceOrderNumber: ").Append(ServiceOrderNumber).Append("\n");
            sb.Append("  ItemID: ").Append(ItemID).Append("\n");
            sb.Append("  PartsDescription: ").Append(PartsDescription).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  SellingPrice: ").Append(SellingPrice).Append("\n");
            sb.Append("  TotalSellingPrice: ").Append(TotalSellingPrice).Append("\n");
            sb.Append("  QuantityOrdered: ").Append(QuantityOrdered).Append("\n");
            sb.Append("  QuantityReceived: ").Append(QuantityReceived).Append("\n");
            sb.Append("  QuantityFilled: ").Append(QuantityFilled).Append("\n");
            sb.Append("  QuantityInvoiced: ").Append(QuantityInvoiced).Append("\n");
            sb.Append("  QuantityPosted: ").Append(QuantityPosted).Append("\n");
            sb.Append("  QuantityShipped: ").Append(QuantityShipped).Append("\n");
            sb.Append("  Exchange: ").Append(Exchange).Append("\n");
            sb.Append("  UnderContract: ").Append(UnderContract).Append("\n");
            sb.Append("  Taxed: ").Append(Taxed).Append("\n");
            sb.Append("  ProviderTaxed: ").Append(ProviderTaxed).Append("\n");
            sb.Append("  CostGLCode: ").Append(CostGLCode).Append("\n");
            sb.Append("  IncomeGLCode: ").Append(IncomeGLCode).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  ItemType: ").Append(ItemType).Append("\n");
            sb.Append("  AssemblyType: ").Append(AssemblyType).Append("\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  PrintOnInvoice: ").Append(PrintOnInvoice).Append("\n");
            sb.Append("  PartNumber: ").Append(PartNumber).Append("\n");
            sb.Append("  OrderByDate: ").Append(OrderByDate).Append("\n");
            sb.Append("  IsRepairLevel: ").Append(IsRepairLevel).Append("\n");
            sb.Append("  ItemServiced: ").Append(ItemServiced).Append("\n");
            sb.Append("  ProjectPhase: ").Append(ProjectPhase).Append("\n");
            sb.Append("  InstallLocation: ").Append(InstallLocation).Append("\n");
            sb.Append("  PriceLevel: ").Append(PriceLevel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebPartAndLabor);
        }

        /// <summary>
        /// Returns true if TsiWebPartAndLabor instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebPartAndLabor to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebPartAndLabor input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.SOPartsUsedNumber == input.SOPartsUsedNumber ||
                    (this.SOPartsUsedNumber != null &&
                    this.SOPartsUsedNumber.Equals(input.SOPartsUsedNumber))
                ) && 
                (
                    this.ServiceOrderNumber == input.ServiceOrderNumber ||
                    (this.ServiceOrderNumber != null &&
                    this.ServiceOrderNumber.Equals(input.ServiceOrderNumber))
                ) && 
                (
                    this.ItemID == input.ItemID ||
                    (this.ItemID != null &&
                    this.ItemID.Equals(input.ItemID))
                ) && 
                (
                    this.PartsDescription == input.PartsDescription ||
                    (this.PartsDescription != null &&
                    this.PartsDescription.Equals(input.PartsDescription))
                ) && 
                (
                    this.Quantity == input.Quantity ||
                    (this.Quantity != null &&
                    this.Quantity.Equals(input.Quantity))
                ) && 
                (
                    this.SellingPrice == input.SellingPrice ||
                    (this.SellingPrice != null &&
                    this.SellingPrice.Equals(input.SellingPrice))
                ) && 
                (
                    this.TotalSellingPrice == input.TotalSellingPrice ||
                    (this.TotalSellingPrice != null &&
                    this.TotalSellingPrice.Equals(input.TotalSellingPrice))
                ) && 
                (
                    this.QuantityOrdered == input.QuantityOrdered ||
                    (this.QuantityOrdered != null &&
                    this.QuantityOrdered.Equals(input.QuantityOrdered))
                ) && 
                (
                    this.QuantityReceived == input.QuantityReceived ||
                    (this.QuantityReceived != null &&
                    this.QuantityReceived.Equals(input.QuantityReceived))
                ) && 
                (
                    this.QuantityFilled == input.QuantityFilled ||
                    (this.QuantityFilled != null &&
                    this.QuantityFilled.Equals(input.QuantityFilled))
                ) && 
                (
                    this.QuantityInvoiced == input.QuantityInvoiced ||
                    (this.QuantityInvoiced != null &&
                    this.QuantityInvoiced.Equals(input.QuantityInvoiced))
                ) && 
                (
                    this.QuantityPosted == input.QuantityPosted ||
                    (this.QuantityPosted != null &&
                    this.QuantityPosted.Equals(input.QuantityPosted))
                ) && 
                (
                    this.QuantityShipped == input.QuantityShipped ||
                    (this.QuantityShipped != null &&
                    this.QuantityShipped.Equals(input.QuantityShipped))
                ) && 
                (
                    this.Exchange == input.Exchange ||
                    (this.Exchange != null &&
                    this.Exchange.Equals(input.Exchange))
                ) && 
                (
                    this.UnderContract == input.UnderContract ||
                    (this.UnderContract != null &&
                    this.UnderContract.Equals(input.UnderContract))
                ) && 
                (
                    this.Taxed == input.Taxed ||
                    (this.Taxed != null &&
                    this.Taxed.Equals(input.Taxed))
                ) && 
                (
                    this.ProviderTaxed == input.ProviderTaxed ||
                    (this.ProviderTaxed != null &&
                    this.ProviderTaxed.Equals(input.ProviderTaxed))
                ) && 
                (
                    this.CostGLCode == input.CostGLCode ||
                    (this.CostGLCode != null &&
                    this.CostGLCode.Equals(input.CostGLCode))
                ) && 
                (
                    this.IncomeGLCode == input.IncomeGLCode ||
                    (this.IncomeGLCode != null &&
                    this.IncomeGLCode.Equals(input.IncomeGLCode))
                ) && 
                (
                    this.Notes == input.Notes ||
                    (this.Notes != null &&
                    this.Notes.Equals(input.Notes))
                ) && 
                (
                    this.ItemType == input.ItemType ||
                    (this.ItemType != null &&
                    this.ItemType.Equals(input.ItemType))
                ) && 
                (
                    this.AssemblyType == input.AssemblyType ||
                    (this.AssemblyType != null &&
                    this.AssemblyType.Equals(input.AssemblyType))
                ) && 
                (
                    this.Cost == input.Cost ||
                    (this.Cost != null &&
                    this.Cost.Equals(input.Cost))
                ) && 
                (
                    this.PrintOnInvoice == input.PrintOnInvoice ||
                    (this.PrintOnInvoice != null &&
                    this.PrintOnInvoice.Equals(input.PrintOnInvoice))
                ) && 
                (
                    this.PartNumber == input.PartNumber ||
                    (this.PartNumber != null &&
                    this.PartNumber.Equals(input.PartNumber))
                ) && 
                (
                    this.OrderByDate == input.OrderByDate ||
                    (this.OrderByDate != null &&
                    this.OrderByDate.Equals(input.OrderByDate))
                ) && 
                (
                    this.IsRepairLevel == input.IsRepairLevel ||
                    (this.IsRepairLevel != null &&
                    this.IsRepairLevel.Equals(input.IsRepairLevel))
                ) && 
                (
                    this.ItemServiced == input.ItemServiced ||
                    (this.ItemServiced != null &&
                    this.ItemServiced.Equals(input.ItemServiced))
                ) && 
                (
                    this.ProjectPhase == input.ProjectPhase ||
                    (this.ProjectPhase != null &&
                    this.ProjectPhase.Equals(input.ProjectPhase))
                ) && 
                (
                    this.InstallLocation == input.InstallLocation ||
                    (this.InstallLocation != null &&
                    this.InstallLocation.Equals(input.InstallLocation))
                ) && 
                (
                    this.PriceLevel == input.PriceLevel ||
                    (this.PriceLevel != null &&
                    this.PriceLevel.Equals(input.PriceLevel))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.SOPartsUsedNumber != null)
                    hashCode = hashCode * 59 + this.SOPartsUsedNumber.GetHashCode();
                if (this.ServiceOrderNumber != null)
                    hashCode = hashCode * 59 + this.ServiceOrderNumber.GetHashCode();
                if (this.ItemID != null)
                    hashCode = hashCode * 59 + this.ItemID.GetHashCode();
                if (this.PartsDescription != null)
                    hashCode = hashCode * 59 + this.PartsDescription.GetHashCode();
                if (this.Quantity != null)
                    hashCode = hashCode * 59 + this.Quantity.GetHashCode();
                if (this.SellingPrice != null)
                    hashCode = hashCode * 59 + this.SellingPrice.GetHashCode();
                if (this.TotalSellingPrice != null)
                    hashCode = hashCode * 59 + this.TotalSellingPrice.GetHashCode();
                if (this.QuantityOrdered != null)
                    hashCode = hashCode * 59 + this.QuantityOrdered.GetHashCode();
                if (this.QuantityReceived != null)
                    hashCode = hashCode * 59 + this.QuantityReceived.GetHashCode();
                if (this.QuantityFilled != null)
                    hashCode = hashCode * 59 + this.QuantityFilled.GetHashCode();
                if (this.QuantityInvoiced != null)
                    hashCode = hashCode * 59 + this.QuantityInvoiced.GetHashCode();
                if (this.QuantityPosted != null)
                    hashCode = hashCode * 59 + this.QuantityPosted.GetHashCode();
                if (this.QuantityShipped != null)
                    hashCode = hashCode * 59 + this.QuantityShipped.GetHashCode();
                if (this.Exchange != null)
                    hashCode = hashCode * 59 + this.Exchange.GetHashCode();
                if (this.UnderContract != null)
                    hashCode = hashCode * 59 + this.UnderContract.GetHashCode();
                if (this.Taxed != null)
                    hashCode = hashCode * 59 + this.Taxed.GetHashCode();
                if (this.ProviderTaxed != null)
                    hashCode = hashCode * 59 + this.ProviderTaxed.GetHashCode();
                if (this.CostGLCode != null)
                    hashCode = hashCode * 59 + this.CostGLCode.GetHashCode();
                if (this.IncomeGLCode != null)
                    hashCode = hashCode * 59 + this.IncomeGLCode.GetHashCode();
                if (this.Notes != null)
                    hashCode = hashCode * 59 + this.Notes.GetHashCode();
                if (this.ItemType != null)
                    hashCode = hashCode * 59 + this.ItemType.GetHashCode();
                if (this.AssemblyType != null)
                    hashCode = hashCode * 59 + this.AssemblyType.GetHashCode();
                if (this.Cost != null)
                    hashCode = hashCode * 59 + this.Cost.GetHashCode();
                if (this.PrintOnInvoice != null)
                    hashCode = hashCode * 59 + this.PrintOnInvoice.GetHashCode();
                if (this.PartNumber != null)
                    hashCode = hashCode * 59 + this.PartNumber.GetHashCode();
                if (this.OrderByDate != null)
                    hashCode = hashCode * 59 + this.OrderByDate.GetHashCode();
                if (this.IsRepairLevel != null)
                    hashCode = hashCode * 59 + this.IsRepairLevel.GetHashCode();
                if (this.ItemServiced != null)
                    hashCode = hashCode * 59 + this.ItemServiced.GetHashCode();
                if (this.ProjectPhase != null)
                    hashCode = hashCode * 59 + this.ProjectPhase.GetHashCode();
                if (this.InstallLocation != null)
                    hashCode = hashCode * 59 + this.InstallLocation.GetHashCode();
                if (this.PriceLevel != null)
                    hashCode = hashCode * 59 + this.PriceLevel.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
