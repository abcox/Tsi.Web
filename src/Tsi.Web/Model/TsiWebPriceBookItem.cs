/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebPriceBookItem
    /// </summary>
    [DataContract]
    public partial class TsiWebPriceBookItem :  IEquatable<TsiWebPriceBookItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPriceBookItem" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TsiWebPriceBookItem() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPriceBookItem" /> class.
        /// </summary>
        /// <param name="partNumber">Gets or sets PartNumber of the item in the pricebook..</param>
        /// <param name="itemDescription">Gets or sets the item description in the pricebook. (required).</param>
        /// <param name="type">Gets or sets the Type..</param>
        /// <param name="status">Gets or sets the item status. (required).</param>
        /// <param name="dateCreated">Gets or sets Created Date of the item in the pricebook..</param>
        /// <param name="lastEditDate">Gets or sets LastEditDate of the item in the pricebook..</param>
        /// <param name="lastSoldDate">Gets or sets LastSoldDate of the item in the pricebook..</param>
        /// <param name="manufacturerListPrice">Gets or sets ManufacturerListPrice of the item in the pricebook..</param>
        /// <param name="description2">Gets or sets the description in the pricebook..</param>
        /// <param name="description3">Gets or sets the description in the pricebook..</param>
        /// <param name="itemCategory">Gets or sets the ItemCategory..</param>
        /// <param name="itemSubCategory">Gets or sets the ItemSubCategory..</param>
        /// <param name="comments">Gets or sets the item Comments. (required).</param>
        /// <param name="itemCanBeDiscounted">itemCanBeDiscounted.</param>
        /// <param name="features">features.</param>
        /// <param name="manufacturerName">manufacturerName.</param>
        /// <param name="manufacturerPartNumber">manufacturerPartNumber.</param>
        /// <param name="unitOfMeasure">unitOfMeasure.</param>
        /// <param name="weight">weight.</param>
        /// <param name="uPC">uPC.</param>
        /// <param name="warrantyDays">warrantyDays.</param>
        /// <param name="iVRPartNumber">iVRPartNumber.</param>
        /// <param name="laborHoursRequired">laborHoursRequired.</param>
        /// <param name="bin">bin.</param>
        /// <param name="itemURL">itemURL.</param>
        /// <param name="pictureFile">pictureFile.</param>
        /// <param name="serialized">serialized.</param>
        /// <param name="inactive">inactive.</param>
        /// <param name="hotItem">hotItem.</param>
        /// <param name="taxable">taxable.</param>
        /// <param name="subjectToSingleItemTax">subjectToSingleItemTax.</param>
        /// <param name="subjectToProviderTax">subjectToProviderTax.</param>
        /// <param name="gSTExempt">gSTExempt.</param>
        /// <param name="useAssemblyGLCodes">useAssemblyGLCodes.</param>
        /// <param name="printOnInvoice">printOnInvoice.</param>
        /// <param name="printOnQuote">printOnQuote.</param>
        /// <param name="addToCustomerInventory">addToCustomerInventory.</param>
        /// <param name="addOnlyAssemblyDetailtoCustomerInventory">addOnlyAssemblyDetailtoCustomerInventory.</param>
        /// <param name="receivingGLCode">receivingGLCode.</param>
        /// <param name="maintenancePrice">maintenancePrice.</param>
        /// <param name="maintenancePercentage">maintenancePercentage.</param>
        /// <param name="baseCost">baseCost.</param>
        /// <param name="repairCost">repairCost.</param>
        /// <param name="averageCost">averageCost.</param>
        /// <param name="exchangeValue">exchangeValue.</param>
        /// <param name="accountingLinkSalesCode">accountingLinkSalesCode.</param>
        /// <param name="discountTier">discountTier.</param>
        /// <param name="applyQuantityDiscountsToAssemblyDetail">applyQuantityDiscountsToAssemblyDetail.</param>
        /// <param name="assemblyType">assemblyType.</param>
        /// <param name="primaryVendorAccountNumber">primaryVendorAccountNumber.</param>
        /// <param name="providerTaxTypeNumber">providerTaxTypeNumber.</param>
        /// <param name="defaultProjectPhaseNumber">defaultProjectPhaseNumber.</param>
        public TsiWebPriceBookItem(string partNumber = default(string), string itemDescription = default(string), string type = default(string), string status = default(string), DateTime? dateCreated = default(DateTime?), DateTime? lastEditDate = default(DateTime?), DateTime? lastSoldDate = default(DateTime?), double? manufacturerListPrice = default(double?), string description2 = default(string), string description3 = default(string), string itemCategory = default(string), string itemSubCategory = default(string), string comments = default(string), bool? itemCanBeDiscounted = default(bool?), string features = default(string), string manufacturerName = default(string), string manufacturerPartNumber = default(string), string unitOfMeasure = default(string), string weight = default(string), string uPC = default(string), string warrantyDays = default(string), int? iVRPartNumber = default(int?), double? laborHoursRequired = default(double?), string bin = default(string), string itemURL = default(string), string pictureFile = default(string), bool? serialized = default(bool?), bool? inactive = default(bool?), bool? hotItem = default(bool?), bool? taxable = default(bool?), bool? subjectToSingleItemTax = default(bool?), bool? subjectToProviderTax = default(bool?), bool? gSTExempt = default(bool?), bool? useAssemblyGLCodes = default(bool?), bool? printOnInvoice = default(bool?), bool? printOnQuote = default(bool?), bool? addToCustomerInventory = default(bool?), bool? addOnlyAssemblyDetailtoCustomerInventory = default(bool?), string receivingGLCode = default(string), double? maintenancePrice = default(double?), double? maintenancePercentage = default(double?), double? baseCost = default(double?), double? repairCost = default(double?), double? averageCost = default(double?), double? exchangeValue = default(double?), string accountingLinkSalesCode = default(string), int? discountTier = default(int?), bool? applyQuantityDiscountsToAssemblyDetail = default(bool?), string assemblyType = default(string), int? primaryVendorAccountNumber = default(int?), int? providerTaxTypeNumber = default(int?), int? defaultProjectPhaseNumber = default(int?))
        {
            // to ensure "itemDescription" is required (not null)
            if (itemDescription == null)
            {
                throw new InvalidDataException("itemDescription is a required property for TsiWebPriceBookItem and cannot be null");
            }
            else
            {
                this.ItemDescription = itemDescription;
            }
            // to ensure "status" is required (not null)
            if (status == null)
            {
                throw new InvalidDataException("status is a required property for TsiWebPriceBookItem and cannot be null");
            }
            else
            {
                this.Status = status;
            }
            // to ensure "comments" is required (not null)
            if (comments == null)
            {
                throw new InvalidDataException("comments is a required property for TsiWebPriceBookItem and cannot be null");
            }
            else
            {
                this.Comments = comments;
            }
            this.PartNumber = partNumber;
            this.Type = type;
            this.DateCreated = dateCreated;
            this.LastEditDate = lastEditDate;
            this.LastSoldDate = lastSoldDate;
            this.ManufacturerListPrice = manufacturerListPrice;
            this.Description2 = description2;
            this.Description3 = description3;
            this.ItemCategory = itemCategory;
            this.ItemSubCategory = itemSubCategory;
            this.ItemCanBeDiscounted = itemCanBeDiscounted;
            this.Features = features;
            this.ManufacturerName = manufacturerName;
            this.ManufacturerPartNumber = manufacturerPartNumber;
            this.UnitOfMeasure = unitOfMeasure;
            this.Weight = weight;
            this.UPC = uPC;
            this.WarrantyDays = warrantyDays;
            this.IVRPartNumber = iVRPartNumber;
            this.LaborHoursRequired = laborHoursRequired;
            this.Bin = bin;
            this.ItemURL = itemURL;
            this.PictureFile = pictureFile;
            this.Serialized = serialized;
            this.Inactive = inactive;
            this.HotItem = hotItem;
            this.Taxable = taxable;
            this.SubjectToSingleItemTax = subjectToSingleItemTax;
            this.SubjectToProviderTax = subjectToProviderTax;
            this.GSTExempt = gSTExempt;
            this.UseAssemblyGLCodes = useAssemblyGLCodes;
            this.PrintOnInvoice = printOnInvoice;
            this.PrintOnQuote = printOnQuote;
            this.AddToCustomerInventory = addToCustomerInventory;
            this.AddOnlyAssemblyDetailtoCustomerInventory = addOnlyAssemblyDetailtoCustomerInventory;
            this.ReceivingGLCode = receivingGLCode;
            this.MaintenancePrice = maintenancePrice;
            this.MaintenancePercentage = maintenancePercentage;
            this.BaseCost = baseCost;
            this.RepairCost = repairCost;
            this.AverageCost = averageCost;
            this.ExchangeValue = exchangeValue;
            this.AccountingLinkSalesCode = accountingLinkSalesCode;
            this.DiscountTier = discountTier;
            this.ApplyQuantityDiscountsToAssemblyDetail = applyQuantityDiscountsToAssemblyDetail;
            this.AssemblyType = assemblyType;
            this.PrimaryVendorAccountNumber = primaryVendorAccountNumber;
            this.ProviderTaxTypeNumber = providerTaxTypeNumber;
            this.DefaultProjectPhaseNumber = defaultProjectPhaseNumber;
        }
        
        /// <summary>
        /// Gets or sets PartNumber of the item in the pricebook.
        /// </summary>
        /// <value>Gets or sets PartNumber of the item in the pricebook.</value>
        [DataMember(Name="PartNumber", EmitDefaultValue=false)]
        public string PartNumber { get; set; }

        /// <summary>
        /// Gets or sets the item description in the pricebook.
        /// </summary>
        /// <value>Gets or sets the item description in the pricebook.</value>
        [DataMember(Name="ItemDescription", EmitDefaultValue=false)]
        public string ItemDescription { get; set; }

        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        /// <value>Gets or sets the Type.</value>
        [DataMember(Name="Type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the item status.
        /// </summary>
        /// <value>Gets or sets the item status.</value>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets Created Date of the item in the pricebook.
        /// </summary>
        /// <value>Gets or sets Created Date of the item in the pricebook.</value>
        [DataMember(Name="DateCreated", EmitDefaultValue=false)]
        public DateTime? DateCreated { get; set; }

        /// <summary>
        /// Gets or sets LastEditDate of the item in the pricebook.
        /// </summary>
        /// <value>Gets or sets LastEditDate of the item in the pricebook.</value>
        [DataMember(Name="LastEditDate", EmitDefaultValue=false)]
        public DateTime? LastEditDate { get; set; }

        /// <summary>
        /// Gets or sets LastSoldDate of the item in the pricebook.
        /// </summary>
        /// <value>Gets or sets LastSoldDate of the item in the pricebook.</value>
        [DataMember(Name="LastSoldDate", EmitDefaultValue=false)]
        public DateTime? LastSoldDate { get; set; }

        /// <summary>
        /// Gets or sets ManufacturerListPrice of the item in the pricebook.
        /// </summary>
        /// <value>Gets or sets ManufacturerListPrice of the item in the pricebook.</value>
        [DataMember(Name="ManufacturerListPrice", EmitDefaultValue=false)]
        public double? ManufacturerListPrice { get; set; }

        /// <summary>
        /// Gets or sets the description in the pricebook.
        /// </summary>
        /// <value>Gets or sets the description in the pricebook.</value>
        [DataMember(Name="Description2", EmitDefaultValue=false)]
        public string Description2 { get; set; }

        /// <summary>
        /// Gets or sets the description in the pricebook.
        /// </summary>
        /// <value>Gets or sets the description in the pricebook.</value>
        [DataMember(Name="Description3", EmitDefaultValue=false)]
        public string Description3 { get; set; }

        /// <summary>
        /// Gets or sets the ItemCategory.
        /// </summary>
        /// <value>Gets or sets the ItemCategory.</value>
        [DataMember(Name="ItemCategory", EmitDefaultValue=false)]
        public string ItemCategory { get; set; }

        /// <summary>
        /// Gets or sets the ItemSubCategory.
        /// </summary>
        /// <value>Gets or sets the ItemSubCategory.</value>
        [DataMember(Name="ItemSubCategory", EmitDefaultValue=false)]
        public string ItemSubCategory { get; set; }

        /// <summary>
        /// Gets or sets the item Comments.
        /// </summary>
        /// <value>Gets or sets the item Comments.</value>
        [DataMember(Name="Comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets ItemCanBeDiscounted
        /// </summary>
        [DataMember(Name="ItemCanBeDiscounted", EmitDefaultValue=false)]
        public bool? ItemCanBeDiscounted { get; set; }

        /// <summary>
        /// Gets or Sets Features
        /// </summary>
        [DataMember(Name="Features", EmitDefaultValue=false)]
        public string Features { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturerName
        /// </summary>
        [DataMember(Name="ManufacturerName", EmitDefaultValue=false)]
        public string ManufacturerName { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturerPartNumber
        /// </summary>
        [DataMember(Name="ManufacturerPartNumber", EmitDefaultValue=false)]
        public string ManufacturerPartNumber { get; set; }

        /// <summary>
        /// Gets or Sets UnitOfMeasure
        /// </summary>
        [DataMember(Name="UnitOfMeasure", EmitDefaultValue=false)]
        public string UnitOfMeasure { get; set; }

        /// <summary>
        /// Gets or Sets Weight
        /// </summary>
        [DataMember(Name="Weight", EmitDefaultValue=false)]
        public string Weight { get; set; }

        /// <summary>
        /// Gets or Sets UPC
        /// </summary>
        [DataMember(Name="UPC", EmitDefaultValue=false)]
        public string UPC { get; set; }

        /// <summary>
        /// Gets or Sets WarrantyDays
        /// </summary>
        [DataMember(Name="WarrantyDays", EmitDefaultValue=false)]
        public string WarrantyDays { get; set; }

        /// <summary>
        /// Gets or Sets IVRPartNumber
        /// </summary>
        [DataMember(Name="IVRPartNumber", EmitDefaultValue=false)]
        public int? IVRPartNumber { get; set; }

        /// <summary>
        /// Gets or Sets LaborHoursRequired
        /// </summary>
        [DataMember(Name="LaborHoursRequired", EmitDefaultValue=false)]
        public double? LaborHoursRequired { get; set; }

        /// <summary>
        /// Gets or Sets Bin
        /// </summary>
        [DataMember(Name="Bin", EmitDefaultValue=false)]
        public string Bin { get; set; }

        /// <summary>
        /// Gets or Sets ItemURL
        /// </summary>
        [DataMember(Name="ItemURL", EmitDefaultValue=false)]
        public string ItemURL { get; set; }

        /// <summary>
        /// Gets or Sets PictureFile
        /// </summary>
        [DataMember(Name="PictureFile", EmitDefaultValue=false)]
        public string PictureFile { get; set; }

        /// <summary>
        /// Gets or Sets Serialized
        /// </summary>
        [DataMember(Name="Serialized", EmitDefaultValue=false)]
        public bool? Serialized { get; set; }

        /// <summary>
        /// Gets or Sets Inactive
        /// </summary>
        [DataMember(Name="Inactive", EmitDefaultValue=false)]
        public bool? Inactive { get; set; }

        /// <summary>
        /// Gets or Sets HotItem
        /// </summary>
        [DataMember(Name="HotItem", EmitDefaultValue=false)]
        public bool? HotItem { get; set; }

        /// <summary>
        /// Gets or Sets Taxable
        /// </summary>
        [DataMember(Name="Taxable", EmitDefaultValue=false)]
        public bool? Taxable { get; set; }

        /// <summary>
        /// Gets or Sets SubjectToSingleItemTax
        /// </summary>
        [DataMember(Name="SubjectToSingleItemTax", EmitDefaultValue=false)]
        public bool? SubjectToSingleItemTax { get; set; }

        /// <summary>
        /// Gets or Sets SubjectToProviderTax
        /// </summary>
        [DataMember(Name="SubjectToProviderTax", EmitDefaultValue=false)]
        public bool? SubjectToProviderTax { get; set; }

        /// <summary>
        /// Gets or Sets GSTExempt
        /// </summary>
        [DataMember(Name="GSTExempt", EmitDefaultValue=false)]
        public bool? GSTExempt { get; set; }

        /// <summary>
        /// Gets or Sets UseAssemblyGLCodes
        /// </summary>
        [DataMember(Name="UseAssemblyGLCodes", EmitDefaultValue=false)]
        public bool? UseAssemblyGLCodes { get; set; }

        /// <summary>
        /// Gets or Sets PrintOnInvoice
        /// </summary>
        [DataMember(Name="PrintOnInvoice", EmitDefaultValue=false)]
        public bool? PrintOnInvoice { get; set; }

        /// <summary>
        /// Gets or Sets PrintOnQuote
        /// </summary>
        [DataMember(Name="PrintOnQuote", EmitDefaultValue=false)]
        public bool? PrintOnQuote { get; set; }

        /// <summary>
        /// Gets or Sets AddToCustomerInventory
        /// </summary>
        [DataMember(Name="AddToCustomerInventory", EmitDefaultValue=false)]
        public bool? AddToCustomerInventory { get; set; }

        /// <summary>
        /// Gets or Sets AddOnlyAssemblyDetailtoCustomerInventory
        /// </summary>
        [DataMember(Name="AddOnlyAssemblyDetailtoCustomerInventory", EmitDefaultValue=false)]
        public bool? AddOnlyAssemblyDetailtoCustomerInventory { get; set; }

        /// <summary>
        /// Gets or Sets ReceivingGLCode
        /// </summary>
        [DataMember(Name="ReceivingGLCode", EmitDefaultValue=false)]
        public string ReceivingGLCode { get; set; }

        /// <summary>
        /// Gets or Sets MaintenancePrice
        /// </summary>
        [DataMember(Name="MaintenancePrice", EmitDefaultValue=false)]
        public double? MaintenancePrice { get; set; }

        /// <summary>
        /// Gets or Sets MaintenancePercentage
        /// </summary>
        [DataMember(Name="MaintenancePercentage", EmitDefaultValue=false)]
        public double? MaintenancePercentage { get; set; }

        /// <summary>
        /// Gets or Sets BaseCost
        /// </summary>
        [DataMember(Name="BaseCost", EmitDefaultValue=false)]
        public double? BaseCost { get; set; }

        /// <summary>
        /// Gets or Sets RepairCost
        /// </summary>
        [DataMember(Name="RepairCost", EmitDefaultValue=false)]
        public double? RepairCost { get; set; }

        /// <summary>
        /// Gets or Sets AverageCost
        /// </summary>
        [DataMember(Name="AverageCost", EmitDefaultValue=false)]
        public double? AverageCost { get; set; }

        /// <summary>
        /// Gets or Sets ExchangeValue
        /// </summary>
        [DataMember(Name="ExchangeValue", EmitDefaultValue=false)]
        public double? ExchangeValue { get; set; }

        /// <summary>
        /// Gets or Sets AccountingLinkSalesCode
        /// </summary>
        [DataMember(Name="AccountingLinkSalesCode", EmitDefaultValue=false)]
        public string AccountingLinkSalesCode { get; set; }

        /// <summary>
        /// Gets or Sets DiscountTier
        /// </summary>
        [DataMember(Name="DiscountTier", EmitDefaultValue=false)]
        public int? DiscountTier { get; set; }

        /// <summary>
        /// Gets or Sets ApplyQuantityDiscountsToAssemblyDetail
        /// </summary>
        [DataMember(Name="ApplyQuantityDiscountsToAssemblyDetail", EmitDefaultValue=false)]
        public bool? ApplyQuantityDiscountsToAssemblyDetail { get; set; }

        /// <summary>
        /// Gets or Sets AssemblyType
        /// </summary>
        [DataMember(Name="AssemblyType", EmitDefaultValue=false)]
        public string AssemblyType { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryVendorAccountNumber
        /// </summary>
        [DataMember(Name="PrimaryVendorAccountNumber", EmitDefaultValue=false)]
        public int? PrimaryVendorAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProviderTaxTypeNumber
        /// </summary>
        [DataMember(Name="ProviderTaxTypeNumber", EmitDefaultValue=false)]
        public int? ProviderTaxTypeNumber { get; set; }

        /// <summary>
        /// Gets or Sets DefaultProjectPhaseNumber
        /// </summary>
        [DataMember(Name="DefaultProjectPhaseNumber", EmitDefaultValue=false)]
        public int? DefaultProjectPhaseNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebPriceBookItem {\n");
            sb.Append("  PartNumber: ").Append(PartNumber).Append("\n");
            sb.Append("  ItemDescription: ").Append(ItemDescription).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  DateCreated: ").Append(DateCreated).Append("\n");
            sb.Append("  LastEditDate: ").Append(LastEditDate).Append("\n");
            sb.Append("  LastSoldDate: ").Append(LastSoldDate).Append("\n");
            sb.Append("  ManufacturerListPrice: ").Append(ManufacturerListPrice).Append("\n");
            sb.Append("  Description2: ").Append(Description2).Append("\n");
            sb.Append("  Description3: ").Append(Description3).Append("\n");
            sb.Append("  ItemCategory: ").Append(ItemCategory).Append("\n");
            sb.Append("  ItemSubCategory: ").Append(ItemSubCategory).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  ItemCanBeDiscounted: ").Append(ItemCanBeDiscounted).Append("\n");
            sb.Append("  Features: ").Append(Features).Append("\n");
            sb.Append("  ManufacturerName: ").Append(ManufacturerName).Append("\n");
            sb.Append("  ManufacturerPartNumber: ").Append(ManufacturerPartNumber).Append("\n");
            sb.Append("  UnitOfMeasure: ").Append(UnitOfMeasure).Append("\n");
            sb.Append("  Weight: ").Append(Weight).Append("\n");
            sb.Append("  UPC: ").Append(UPC).Append("\n");
            sb.Append("  WarrantyDays: ").Append(WarrantyDays).Append("\n");
            sb.Append("  IVRPartNumber: ").Append(IVRPartNumber).Append("\n");
            sb.Append("  LaborHoursRequired: ").Append(LaborHoursRequired).Append("\n");
            sb.Append("  Bin: ").Append(Bin).Append("\n");
            sb.Append("  ItemURL: ").Append(ItemURL).Append("\n");
            sb.Append("  PictureFile: ").Append(PictureFile).Append("\n");
            sb.Append("  Serialized: ").Append(Serialized).Append("\n");
            sb.Append("  Inactive: ").Append(Inactive).Append("\n");
            sb.Append("  HotItem: ").Append(HotItem).Append("\n");
            sb.Append("  Taxable: ").Append(Taxable).Append("\n");
            sb.Append("  SubjectToSingleItemTax: ").Append(SubjectToSingleItemTax).Append("\n");
            sb.Append("  SubjectToProviderTax: ").Append(SubjectToProviderTax).Append("\n");
            sb.Append("  GSTExempt: ").Append(GSTExempt).Append("\n");
            sb.Append("  UseAssemblyGLCodes: ").Append(UseAssemblyGLCodes).Append("\n");
            sb.Append("  PrintOnInvoice: ").Append(PrintOnInvoice).Append("\n");
            sb.Append("  PrintOnQuote: ").Append(PrintOnQuote).Append("\n");
            sb.Append("  AddToCustomerInventory: ").Append(AddToCustomerInventory).Append("\n");
            sb.Append("  AddOnlyAssemblyDetailtoCustomerInventory: ").Append(AddOnlyAssemblyDetailtoCustomerInventory).Append("\n");
            sb.Append("  ReceivingGLCode: ").Append(ReceivingGLCode).Append("\n");
            sb.Append("  MaintenancePrice: ").Append(MaintenancePrice).Append("\n");
            sb.Append("  MaintenancePercentage: ").Append(MaintenancePercentage).Append("\n");
            sb.Append("  BaseCost: ").Append(BaseCost).Append("\n");
            sb.Append("  RepairCost: ").Append(RepairCost).Append("\n");
            sb.Append("  AverageCost: ").Append(AverageCost).Append("\n");
            sb.Append("  ExchangeValue: ").Append(ExchangeValue).Append("\n");
            sb.Append("  AccountingLinkSalesCode: ").Append(AccountingLinkSalesCode).Append("\n");
            sb.Append("  DiscountTier: ").Append(DiscountTier).Append("\n");
            sb.Append("  ApplyQuantityDiscountsToAssemblyDetail: ").Append(ApplyQuantityDiscountsToAssemblyDetail).Append("\n");
            sb.Append("  AssemblyType: ").Append(AssemblyType).Append("\n");
            sb.Append("  PrimaryVendorAccountNumber: ").Append(PrimaryVendorAccountNumber).Append("\n");
            sb.Append("  ProviderTaxTypeNumber: ").Append(ProviderTaxTypeNumber).Append("\n");
            sb.Append("  DefaultProjectPhaseNumber: ").Append(DefaultProjectPhaseNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebPriceBookItem);
        }

        /// <summary>
        /// Returns true if TsiWebPriceBookItem instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebPriceBookItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebPriceBookItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PartNumber == input.PartNumber ||
                    (this.PartNumber != null &&
                    this.PartNumber.Equals(input.PartNumber))
                ) && 
                (
                    this.ItemDescription == input.ItemDescription ||
                    (this.ItemDescription != null &&
                    this.ItemDescription.Equals(input.ItemDescription))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.DateCreated == input.DateCreated ||
                    (this.DateCreated != null &&
                    this.DateCreated.Equals(input.DateCreated))
                ) && 
                (
                    this.LastEditDate == input.LastEditDate ||
                    (this.LastEditDate != null &&
                    this.LastEditDate.Equals(input.LastEditDate))
                ) && 
                (
                    this.LastSoldDate == input.LastSoldDate ||
                    (this.LastSoldDate != null &&
                    this.LastSoldDate.Equals(input.LastSoldDate))
                ) && 
                (
                    this.ManufacturerListPrice == input.ManufacturerListPrice ||
                    (this.ManufacturerListPrice != null &&
                    this.ManufacturerListPrice.Equals(input.ManufacturerListPrice))
                ) && 
                (
                    this.Description2 == input.Description2 ||
                    (this.Description2 != null &&
                    this.Description2.Equals(input.Description2))
                ) && 
                (
                    this.Description3 == input.Description3 ||
                    (this.Description3 != null &&
                    this.Description3.Equals(input.Description3))
                ) && 
                (
                    this.ItemCategory == input.ItemCategory ||
                    (this.ItemCategory != null &&
                    this.ItemCategory.Equals(input.ItemCategory))
                ) && 
                (
                    this.ItemSubCategory == input.ItemSubCategory ||
                    (this.ItemSubCategory != null &&
                    this.ItemSubCategory.Equals(input.ItemSubCategory))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.ItemCanBeDiscounted == input.ItemCanBeDiscounted ||
                    (this.ItemCanBeDiscounted != null &&
                    this.ItemCanBeDiscounted.Equals(input.ItemCanBeDiscounted))
                ) && 
                (
                    this.Features == input.Features ||
                    (this.Features != null &&
                    this.Features.Equals(input.Features))
                ) && 
                (
                    this.ManufacturerName == input.ManufacturerName ||
                    (this.ManufacturerName != null &&
                    this.ManufacturerName.Equals(input.ManufacturerName))
                ) && 
                (
                    this.ManufacturerPartNumber == input.ManufacturerPartNumber ||
                    (this.ManufacturerPartNumber != null &&
                    this.ManufacturerPartNumber.Equals(input.ManufacturerPartNumber))
                ) && 
                (
                    this.UnitOfMeasure == input.UnitOfMeasure ||
                    (this.UnitOfMeasure != null &&
                    this.UnitOfMeasure.Equals(input.UnitOfMeasure))
                ) && 
                (
                    this.Weight == input.Weight ||
                    (this.Weight != null &&
                    this.Weight.Equals(input.Weight))
                ) && 
                (
                    this.UPC == input.UPC ||
                    (this.UPC != null &&
                    this.UPC.Equals(input.UPC))
                ) && 
                (
                    this.WarrantyDays == input.WarrantyDays ||
                    (this.WarrantyDays != null &&
                    this.WarrantyDays.Equals(input.WarrantyDays))
                ) && 
                (
                    this.IVRPartNumber == input.IVRPartNumber ||
                    (this.IVRPartNumber != null &&
                    this.IVRPartNumber.Equals(input.IVRPartNumber))
                ) && 
                (
                    this.LaborHoursRequired == input.LaborHoursRequired ||
                    (this.LaborHoursRequired != null &&
                    this.LaborHoursRequired.Equals(input.LaborHoursRequired))
                ) && 
                (
                    this.Bin == input.Bin ||
                    (this.Bin != null &&
                    this.Bin.Equals(input.Bin))
                ) && 
                (
                    this.ItemURL == input.ItemURL ||
                    (this.ItemURL != null &&
                    this.ItemURL.Equals(input.ItemURL))
                ) && 
                (
                    this.PictureFile == input.PictureFile ||
                    (this.PictureFile != null &&
                    this.PictureFile.Equals(input.PictureFile))
                ) && 
                (
                    this.Serialized == input.Serialized ||
                    (this.Serialized != null &&
                    this.Serialized.Equals(input.Serialized))
                ) && 
                (
                    this.Inactive == input.Inactive ||
                    (this.Inactive != null &&
                    this.Inactive.Equals(input.Inactive))
                ) && 
                (
                    this.HotItem == input.HotItem ||
                    (this.HotItem != null &&
                    this.HotItem.Equals(input.HotItem))
                ) && 
                (
                    this.Taxable == input.Taxable ||
                    (this.Taxable != null &&
                    this.Taxable.Equals(input.Taxable))
                ) && 
                (
                    this.SubjectToSingleItemTax == input.SubjectToSingleItemTax ||
                    (this.SubjectToSingleItemTax != null &&
                    this.SubjectToSingleItemTax.Equals(input.SubjectToSingleItemTax))
                ) && 
                (
                    this.SubjectToProviderTax == input.SubjectToProviderTax ||
                    (this.SubjectToProviderTax != null &&
                    this.SubjectToProviderTax.Equals(input.SubjectToProviderTax))
                ) && 
                (
                    this.GSTExempt == input.GSTExempt ||
                    (this.GSTExempt != null &&
                    this.GSTExempt.Equals(input.GSTExempt))
                ) && 
                (
                    this.UseAssemblyGLCodes == input.UseAssemblyGLCodes ||
                    (this.UseAssemblyGLCodes != null &&
                    this.UseAssemblyGLCodes.Equals(input.UseAssemblyGLCodes))
                ) && 
                (
                    this.PrintOnInvoice == input.PrintOnInvoice ||
                    (this.PrintOnInvoice != null &&
                    this.PrintOnInvoice.Equals(input.PrintOnInvoice))
                ) && 
                (
                    this.PrintOnQuote == input.PrintOnQuote ||
                    (this.PrintOnQuote != null &&
                    this.PrintOnQuote.Equals(input.PrintOnQuote))
                ) && 
                (
                    this.AddToCustomerInventory == input.AddToCustomerInventory ||
                    (this.AddToCustomerInventory != null &&
                    this.AddToCustomerInventory.Equals(input.AddToCustomerInventory))
                ) && 
                (
                    this.AddOnlyAssemblyDetailtoCustomerInventory == input.AddOnlyAssemblyDetailtoCustomerInventory ||
                    (this.AddOnlyAssemblyDetailtoCustomerInventory != null &&
                    this.AddOnlyAssemblyDetailtoCustomerInventory.Equals(input.AddOnlyAssemblyDetailtoCustomerInventory))
                ) && 
                (
                    this.ReceivingGLCode == input.ReceivingGLCode ||
                    (this.ReceivingGLCode != null &&
                    this.ReceivingGLCode.Equals(input.ReceivingGLCode))
                ) && 
                (
                    this.MaintenancePrice == input.MaintenancePrice ||
                    (this.MaintenancePrice != null &&
                    this.MaintenancePrice.Equals(input.MaintenancePrice))
                ) && 
                (
                    this.MaintenancePercentage == input.MaintenancePercentage ||
                    (this.MaintenancePercentage != null &&
                    this.MaintenancePercentage.Equals(input.MaintenancePercentage))
                ) && 
                (
                    this.BaseCost == input.BaseCost ||
                    (this.BaseCost != null &&
                    this.BaseCost.Equals(input.BaseCost))
                ) && 
                (
                    this.RepairCost == input.RepairCost ||
                    (this.RepairCost != null &&
                    this.RepairCost.Equals(input.RepairCost))
                ) && 
                (
                    this.AverageCost == input.AverageCost ||
                    (this.AverageCost != null &&
                    this.AverageCost.Equals(input.AverageCost))
                ) && 
                (
                    this.ExchangeValue == input.ExchangeValue ||
                    (this.ExchangeValue != null &&
                    this.ExchangeValue.Equals(input.ExchangeValue))
                ) && 
                (
                    this.AccountingLinkSalesCode == input.AccountingLinkSalesCode ||
                    (this.AccountingLinkSalesCode != null &&
                    this.AccountingLinkSalesCode.Equals(input.AccountingLinkSalesCode))
                ) && 
                (
                    this.DiscountTier == input.DiscountTier ||
                    (this.DiscountTier != null &&
                    this.DiscountTier.Equals(input.DiscountTier))
                ) && 
                (
                    this.ApplyQuantityDiscountsToAssemblyDetail == input.ApplyQuantityDiscountsToAssemblyDetail ||
                    (this.ApplyQuantityDiscountsToAssemblyDetail != null &&
                    this.ApplyQuantityDiscountsToAssemblyDetail.Equals(input.ApplyQuantityDiscountsToAssemblyDetail))
                ) && 
                (
                    this.AssemblyType == input.AssemblyType ||
                    (this.AssemblyType != null &&
                    this.AssemblyType.Equals(input.AssemblyType))
                ) && 
                (
                    this.PrimaryVendorAccountNumber == input.PrimaryVendorAccountNumber ||
                    (this.PrimaryVendorAccountNumber != null &&
                    this.PrimaryVendorAccountNumber.Equals(input.PrimaryVendorAccountNumber))
                ) && 
                (
                    this.ProviderTaxTypeNumber == input.ProviderTaxTypeNumber ||
                    (this.ProviderTaxTypeNumber != null &&
                    this.ProviderTaxTypeNumber.Equals(input.ProviderTaxTypeNumber))
                ) && 
                (
                    this.DefaultProjectPhaseNumber == input.DefaultProjectPhaseNumber ||
                    (this.DefaultProjectPhaseNumber != null &&
                    this.DefaultProjectPhaseNumber.Equals(input.DefaultProjectPhaseNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PartNumber != null)
                    hashCode = hashCode * 59 + this.PartNumber.GetHashCode();
                if (this.ItemDescription != null)
                    hashCode = hashCode * 59 + this.ItemDescription.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.DateCreated != null)
                    hashCode = hashCode * 59 + this.DateCreated.GetHashCode();
                if (this.LastEditDate != null)
                    hashCode = hashCode * 59 + this.LastEditDate.GetHashCode();
                if (this.LastSoldDate != null)
                    hashCode = hashCode * 59 + this.LastSoldDate.GetHashCode();
                if (this.ManufacturerListPrice != null)
                    hashCode = hashCode * 59 + this.ManufacturerListPrice.GetHashCode();
                if (this.Description2 != null)
                    hashCode = hashCode * 59 + this.Description2.GetHashCode();
                if (this.Description3 != null)
                    hashCode = hashCode * 59 + this.Description3.GetHashCode();
                if (this.ItemCategory != null)
                    hashCode = hashCode * 59 + this.ItemCategory.GetHashCode();
                if (this.ItemSubCategory != null)
                    hashCode = hashCode * 59 + this.ItemSubCategory.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.ItemCanBeDiscounted != null)
                    hashCode = hashCode * 59 + this.ItemCanBeDiscounted.GetHashCode();
                if (this.Features != null)
                    hashCode = hashCode * 59 + this.Features.GetHashCode();
                if (this.ManufacturerName != null)
                    hashCode = hashCode * 59 + this.ManufacturerName.GetHashCode();
                if (this.ManufacturerPartNumber != null)
                    hashCode = hashCode * 59 + this.ManufacturerPartNumber.GetHashCode();
                if (this.UnitOfMeasure != null)
                    hashCode = hashCode * 59 + this.UnitOfMeasure.GetHashCode();
                if (this.Weight != null)
                    hashCode = hashCode * 59 + this.Weight.GetHashCode();
                if (this.UPC != null)
                    hashCode = hashCode * 59 + this.UPC.GetHashCode();
                if (this.WarrantyDays != null)
                    hashCode = hashCode * 59 + this.WarrantyDays.GetHashCode();
                if (this.IVRPartNumber != null)
                    hashCode = hashCode * 59 + this.IVRPartNumber.GetHashCode();
                if (this.LaborHoursRequired != null)
                    hashCode = hashCode * 59 + this.LaborHoursRequired.GetHashCode();
                if (this.Bin != null)
                    hashCode = hashCode * 59 + this.Bin.GetHashCode();
                if (this.ItemURL != null)
                    hashCode = hashCode * 59 + this.ItemURL.GetHashCode();
                if (this.PictureFile != null)
                    hashCode = hashCode * 59 + this.PictureFile.GetHashCode();
                if (this.Serialized != null)
                    hashCode = hashCode * 59 + this.Serialized.GetHashCode();
                if (this.Inactive != null)
                    hashCode = hashCode * 59 + this.Inactive.GetHashCode();
                if (this.HotItem != null)
                    hashCode = hashCode * 59 + this.HotItem.GetHashCode();
                if (this.Taxable != null)
                    hashCode = hashCode * 59 + this.Taxable.GetHashCode();
                if (this.SubjectToSingleItemTax != null)
                    hashCode = hashCode * 59 + this.SubjectToSingleItemTax.GetHashCode();
                if (this.SubjectToProviderTax != null)
                    hashCode = hashCode * 59 + this.SubjectToProviderTax.GetHashCode();
                if (this.GSTExempt != null)
                    hashCode = hashCode * 59 + this.GSTExempt.GetHashCode();
                if (this.UseAssemblyGLCodes != null)
                    hashCode = hashCode * 59 + this.UseAssemblyGLCodes.GetHashCode();
                if (this.PrintOnInvoice != null)
                    hashCode = hashCode * 59 + this.PrintOnInvoice.GetHashCode();
                if (this.PrintOnQuote != null)
                    hashCode = hashCode * 59 + this.PrintOnQuote.GetHashCode();
                if (this.AddToCustomerInventory != null)
                    hashCode = hashCode * 59 + this.AddToCustomerInventory.GetHashCode();
                if (this.AddOnlyAssemblyDetailtoCustomerInventory != null)
                    hashCode = hashCode * 59 + this.AddOnlyAssemblyDetailtoCustomerInventory.GetHashCode();
                if (this.ReceivingGLCode != null)
                    hashCode = hashCode * 59 + this.ReceivingGLCode.GetHashCode();
                if (this.MaintenancePrice != null)
                    hashCode = hashCode * 59 + this.MaintenancePrice.GetHashCode();
                if (this.MaintenancePercentage != null)
                    hashCode = hashCode * 59 + this.MaintenancePercentage.GetHashCode();
                if (this.BaseCost != null)
                    hashCode = hashCode * 59 + this.BaseCost.GetHashCode();
                if (this.RepairCost != null)
                    hashCode = hashCode * 59 + this.RepairCost.GetHashCode();
                if (this.AverageCost != null)
                    hashCode = hashCode * 59 + this.AverageCost.GetHashCode();
                if (this.ExchangeValue != null)
                    hashCode = hashCode * 59 + this.ExchangeValue.GetHashCode();
                if (this.AccountingLinkSalesCode != null)
                    hashCode = hashCode * 59 + this.AccountingLinkSalesCode.GetHashCode();
                if (this.DiscountTier != null)
                    hashCode = hashCode * 59 + this.DiscountTier.GetHashCode();
                if (this.ApplyQuantityDiscountsToAssemblyDetail != null)
                    hashCode = hashCode * 59 + this.ApplyQuantityDiscountsToAssemblyDetail.GetHashCode();
                if (this.AssemblyType != null)
                    hashCode = hashCode * 59 + this.AssemblyType.GetHashCode();
                if (this.PrimaryVendorAccountNumber != null)
                    hashCode = hashCode * 59 + this.PrimaryVendorAccountNumber.GetHashCode();
                if (this.ProviderTaxTypeNumber != null)
                    hashCode = hashCode * 59 + this.ProviderTaxTypeNumber.GetHashCode();
                if (this.DefaultProjectPhaseNumber != null)
                    hashCode = hashCode * 59 + this.DefaultProjectPhaseNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
