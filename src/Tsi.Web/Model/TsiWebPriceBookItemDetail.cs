/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebPriceBookItemDetail
    /// </summary>
    [DataContract]
    public partial class TsiWebPriceBookItemDetail :  IEquatable<TsiWebPriceBookItemDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPriceBookItemDetail" /> class.
        /// </summary>
        /// <param name="itemId">itemId.</param>
        /// <param name="priceBookItemNumber">priceBookItemNumber.</param>
        /// <param name="item">item.</param>
        /// <param name="defaultProjectPhase">defaultProjectPhase.</param>
        /// <param name="pricing">pricing.</param>
        /// <param name="vendors">vendors.</param>
        /// <param name="purchasing">purchasing.</param>
        /// <param name="inventory">inventory.</param>
        /// <param name="assembly">assembly.</param>
        /// <param name="discounts">discounts.</param>
        /// <param name="customFields">customFields.</param>
        public TsiWebPriceBookItemDetail(string itemId = default(string), int? priceBookItemNumber = default(int?), TsiWebPriceBookItem item = default(TsiWebPriceBookItem), string defaultProjectPhase = default(string), List<TsiWebPricingDetail> pricing = default(List<TsiWebPricingDetail>), List<TsiWebVendorSummary> vendors = default(List<TsiWebVendorSummary>), TsiWebPurchasing purchasing = default(TsiWebPurchasing), TsiWebInventoryCount inventory = default(TsiWebInventoryCount), List<TsiWebAssemblyDetail> assembly = default(List<TsiWebAssemblyDetail>), List<TsiWebDiscount> discounts = default(List<TsiWebDiscount>), List<TsiWebCustomField> customFields = default(List<TsiWebCustomField>))
        {
            this.ItemId = itemId;
            this.PriceBookItemNumber = priceBookItemNumber;
            this.Item = item;
            this.DefaultProjectPhase = defaultProjectPhase;
            this.Pricing = pricing;
            this.Vendors = vendors;
            this.Purchasing = purchasing;
            this.Inventory = inventory;
            this.Assembly = assembly;
            this.Discounts = discounts;
            this.CustomFields = customFields;
        }
        
        /// <summary>
        /// Gets or Sets ItemId
        /// </summary>
        [DataMember(Name="ItemId", EmitDefaultValue=false)]
        public string ItemId { get; set; }

        /// <summary>
        /// Gets or Sets PriceBookItemNumber
        /// </summary>
        [DataMember(Name="PriceBookItemNumber", EmitDefaultValue=false)]
        public int? PriceBookItemNumber { get; set; }

        /// <summary>
        /// Gets or Sets Item
        /// </summary>
        [DataMember(Name="Item", EmitDefaultValue=false)]
        public TsiWebPriceBookItem Item { get; set; }

        /// <summary>
        /// Gets or Sets DefaultProjectPhase
        /// </summary>
        [DataMember(Name="DefaultProjectPhase", EmitDefaultValue=false)]
        public string DefaultProjectPhase { get; set; }

        /// <summary>
        /// Gets or Sets Pricing
        /// </summary>
        [DataMember(Name="Pricing", EmitDefaultValue=false)]
        public List<TsiWebPricingDetail> Pricing { get; set; }

        /// <summary>
        /// Gets or Sets Vendors
        /// </summary>
        [DataMember(Name="Vendors", EmitDefaultValue=false)]
        public List<TsiWebVendorSummary> Vendors { get; set; }

        /// <summary>
        /// Gets or Sets Purchasing
        /// </summary>
        [DataMember(Name="Purchasing", EmitDefaultValue=false)]
        public TsiWebPurchasing Purchasing { get; set; }

        /// <summary>
        /// Gets or Sets Inventory
        /// </summary>
        [DataMember(Name="Inventory", EmitDefaultValue=false)]
        public TsiWebInventoryCount Inventory { get; set; }

        /// <summary>
        /// Gets or Sets Assembly
        /// </summary>
        [DataMember(Name="Assembly", EmitDefaultValue=false)]
        public List<TsiWebAssemblyDetail> Assembly { get; set; }

        /// <summary>
        /// Gets or Sets Discounts
        /// </summary>
        [DataMember(Name="Discounts", EmitDefaultValue=false)]
        public List<TsiWebDiscount> Discounts { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="CustomFields", EmitDefaultValue=false)]
        public List<TsiWebCustomField> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebPriceBookItemDetail {\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  PriceBookItemNumber: ").Append(PriceBookItemNumber).Append("\n");
            sb.Append("  Item: ").Append(Item).Append("\n");
            sb.Append("  DefaultProjectPhase: ").Append(DefaultProjectPhase).Append("\n");
            sb.Append("  Pricing: ").Append(Pricing).Append("\n");
            sb.Append("  Vendors: ").Append(Vendors).Append("\n");
            sb.Append("  Purchasing: ").Append(Purchasing).Append("\n");
            sb.Append("  Inventory: ").Append(Inventory).Append("\n");
            sb.Append("  Assembly: ").Append(Assembly).Append("\n");
            sb.Append("  Discounts: ").Append(Discounts).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebPriceBookItemDetail);
        }

        /// <summary>
        /// Returns true if TsiWebPriceBookItemDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebPriceBookItemDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebPriceBookItemDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.PriceBookItemNumber == input.PriceBookItemNumber ||
                    (this.PriceBookItemNumber != null &&
                    this.PriceBookItemNumber.Equals(input.PriceBookItemNumber))
                ) && 
                (
                    this.Item == input.Item ||
                    (this.Item != null &&
                    this.Item.Equals(input.Item))
                ) && 
                (
                    this.DefaultProjectPhase == input.DefaultProjectPhase ||
                    (this.DefaultProjectPhase != null &&
                    this.DefaultProjectPhase.Equals(input.DefaultProjectPhase))
                ) && 
                (
                    this.Pricing == input.Pricing ||
                    this.Pricing != null &&
                    this.Pricing.SequenceEqual(input.Pricing)
                ) && 
                (
                    this.Vendors == input.Vendors ||
                    this.Vendors != null &&
                    this.Vendors.SequenceEqual(input.Vendors)
                ) && 
                (
                    this.Purchasing == input.Purchasing ||
                    (this.Purchasing != null &&
                    this.Purchasing.Equals(input.Purchasing))
                ) && 
                (
                    this.Inventory == input.Inventory ||
                    (this.Inventory != null &&
                    this.Inventory.Equals(input.Inventory))
                ) && 
                (
                    this.Assembly == input.Assembly ||
                    this.Assembly != null &&
                    this.Assembly.SequenceEqual(input.Assembly)
                ) && 
                (
                    this.Discounts == input.Discounts ||
                    this.Discounts != null &&
                    this.Discounts.SequenceEqual(input.Discounts)
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.PriceBookItemNumber != null)
                    hashCode = hashCode * 59 + this.PriceBookItemNumber.GetHashCode();
                if (this.Item != null)
                    hashCode = hashCode * 59 + this.Item.GetHashCode();
                if (this.DefaultProjectPhase != null)
                    hashCode = hashCode * 59 + this.DefaultProjectPhase.GetHashCode();
                if (this.Pricing != null)
                    hashCode = hashCode * 59 + this.Pricing.GetHashCode();
                if (this.Vendors != null)
                    hashCode = hashCode * 59 + this.Vendors.GetHashCode();
                if (this.Purchasing != null)
                    hashCode = hashCode * 59 + this.Purchasing.GetHashCode();
                if (this.Inventory != null)
                    hashCode = hashCode * 59 + this.Inventory.GetHashCode();
                if (this.Assembly != null)
                    hashCode = hashCode * 59 + this.Assembly.GetHashCode();
                if (this.Discounts != null)
                    hashCode = hashCode * 59 + this.Discounts.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
