/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebPurchaseOrderDetail
    /// </summary>
    [DataContract]
    public partial class TsiWebPurchaseOrderDetail :  IEquatable<TsiWebPurchaseOrderDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPurchaseOrderDetail" /> class.
        /// </summary>
        /// <param name="purchaseOrderNumber">purchaseOrderNumber.</param>
        /// <param name="purchaseOrder">purchaseOrder.</param>
        /// <param name="purchaseOrderVendorSummary">purchaseOrderVendorSummary.</param>
        /// <param name="purchaseOrderLineItems">purchaseOrderLineItems.</param>
        /// <param name="purchaseOrderRelatedDocuments">purchaseOrderRelatedDocuments.</param>
        public TsiWebPurchaseOrderDetail(int? purchaseOrderNumber = default(int?), TsiWebPurchaseOrder purchaseOrder = default(TsiWebPurchaseOrder), TsiWebVendor purchaseOrderVendorSummary = default(TsiWebVendor), List<TsiWebPurchaseOrderLineItem> purchaseOrderLineItems = default(List<TsiWebPurchaseOrderLineItem>), List<TsiWebPurchaseOrderRelatedDocument> purchaseOrderRelatedDocuments = default(List<TsiWebPurchaseOrderRelatedDocument>))
        {
            this.PurchaseOrderNumber = purchaseOrderNumber;
            this.PurchaseOrder = purchaseOrder;
            this.PurchaseOrderVendorSummary = purchaseOrderVendorSummary;
            this.PurchaseOrderLineItems = purchaseOrderLineItems;
            this.PurchaseOrderRelatedDocuments = purchaseOrderRelatedDocuments;
        }
        
        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="PurchaseOrderNumber", EmitDefaultValue=false)]
        public int? PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrder
        /// </summary>
        [DataMember(Name="PurchaseOrder", EmitDefaultValue=false)]
        public TsiWebPurchaseOrder PurchaseOrder { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderVendorSummary
        /// </summary>
        [DataMember(Name="PurchaseOrderVendorSummary", EmitDefaultValue=false)]
        public TsiWebVendor PurchaseOrderVendorSummary { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderLineItems
        /// </summary>
        [DataMember(Name="PurchaseOrderLineItems", EmitDefaultValue=false)]
        public List<TsiWebPurchaseOrderLineItem> PurchaseOrderLineItems { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderRelatedDocuments
        /// </summary>
        [DataMember(Name="PurchaseOrderRelatedDocuments", EmitDefaultValue=false)]
        public List<TsiWebPurchaseOrderRelatedDocument> PurchaseOrderRelatedDocuments { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebPurchaseOrderDetail {\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  PurchaseOrder: ").Append(PurchaseOrder).Append("\n");
            sb.Append("  PurchaseOrderVendorSummary: ").Append(PurchaseOrderVendorSummary).Append("\n");
            sb.Append("  PurchaseOrderLineItems: ").Append(PurchaseOrderLineItems).Append("\n");
            sb.Append("  PurchaseOrderRelatedDocuments: ").Append(PurchaseOrderRelatedDocuments).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebPurchaseOrderDetail);
        }

        /// <summary>
        /// Returns true if TsiWebPurchaseOrderDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebPurchaseOrderDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebPurchaseOrderDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PurchaseOrderNumber == input.PurchaseOrderNumber ||
                    (this.PurchaseOrderNumber != null &&
                    this.PurchaseOrderNumber.Equals(input.PurchaseOrderNumber))
                ) && 
                (
                    this.PurchaseOrder == input.PurchaseOrder ||
                    (this.PurchaseOrder != null &&
                    this.PurchaseOrder.Equals(input.PurchaseOrder))
                ) && 
                (
                    this.PurchaseOrderVendorSummary == input.PurchaseOrderVendorSummary ||
                    (this.PurchaseOrderVendorSummary != null &&
                    this.PurchaseOrderVendorSummary.Equals(input.PurchaseOrderVendorSummary))
                ) && 
                (
                    this.PurchaseOrderLineItems == input.PurchaseOrderLineItems ||
                    this.PurchaseOrderLineItems != null &&
                    this.PurchaseOrderLineItems.SequenceEqual(input.PurchaseOrderLineItems)
                ) && 
                (
                    this.PurchaseOrderRelatedDocuments == input.PurchaseOrderRelatedDocuments ||
                    this.PurchaseOrderRelatedDocuments != null &&
                    this.PurchaseOrderRelatedDocuments.SequenceEqual(input.PurchaseOrderRelatedDocuments)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderNumber.GetHashCode();
                if (this.PurchaseOrder != null)
                    hashCode = hashCode * 59 + this.PurchaseOrder.GetHashCode();
                if (this.PurchaseOrderVendorSummary != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderVendorSummary.GetHashCode();
                if (this.PurchaseOrderLineItems != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderLineItems.GetHashCode();
                if (this.PurchaseOrderRelatedDocuments != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderRelatedDocuments.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
