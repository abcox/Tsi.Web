/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebPurchaseOrderLineItemReceipt
    /// </summary>
    [DataContract]
    public partial class TsiWebPurchaseOrderLineItemReceipt :  IEquatable<TsiWebPurchaseOrderLineItemReceipt>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPurchaseOrderLineItemReceipt" /> class.
        /// </summary>
        /// <param name="purchaseOrderRecieptNumber">purchaseOrderRecieptNumber.</param>
        /// <param name="quantityReceived">quantityReceived.</param>
        /// <param name="receivedDate">receivedDate.</param>
        /// <param name="receivedByRepNumber">receivedByRepNumber.</param>
        /// <param name="receivedByRepName">receivedByRepName.</param>
        /// <param name="shipper">shipper.</param>
        /// <param name="shipperTrackingNumber">shipperTrackingNumber.</param>
        /// <param name="posted">posted.</param>
        /// <param name="location">location.</param>
        /// <param name="itemId">itemId.</param>
        /// <param name="postedDate">postedDate.</param>
        /// <param name="bin">bin.</param>
        public TsiWebPurchaseOrderLineItemReceipt(int? purchaseOrderRecieptNumber = default(int?), double? quantityReceived = default(double?), DateTime? receivedDate = default(DateTime?), int? receivedByRepNumber = default(int?), string receivedByRepName = default(string), string shipper = default(string), string shipperTrackingNumber = default(string), bool? posted = default(bool?), string location = default(string), string itemId = default(string), DateTime? postedDate = default(DateTime?), string bin = default(string))
        {
            this.PurchaseOrderRecieptNumber = purchaseOrderRecieptNumber;
            this.QuantityReceived = quantityReceived;
            this.ReceivedDate = receivedDate;
            this.ReceivedByRepNumber = receivedByRepNumber;
            this.ReceivedByRepName = receivedByRepName;
            this.Shipper = shipper;
            this.ShipperTrackingNumber = shipperTrackingNumber;
            this.Posted = posted;
            this.Location = location;
            this.ItemId = itemId;
            this.PostedDate = postedDate;
            this.Bin = bin;
        }
        
        /// <summary>
        /// Gets or Sets PurchaseOrderRecieptNumber
        /// </summary>
        [DataMember(Name="PurchaseOrderRecieptNumber", EmitDefaultValue=false)]
        public int? PurchaseOrderRecieptNumber { get; set; }

        /// <summary>
        /// Gets or Sets QuantityReceived
        /// </summary>
        [DataMember(Name="QuantityReceived", EmitDefaultValue=false)]
        public double? QuantityReceived { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedDate
        /// </summary>
        [DataMember(Name="ReceivedDate", EmitDefaultValue=false)]
        public DateTime? ReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedByRepNumber
        /// </summary>
        [DataMember(Name="ReceivedByRepNumber", EmitDefaultValue=false)]
        public int? ReceivedByRepNumber { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedByRepName
        /// </summary>
        [DataMember(Name="ReceivedByRepName", EmitDefaultValue=false)]
        public string ReceivedByRepName { get; set; }

        /// <summary>
        /// Gets or Sets Shipper
        /// </summary>
        [DataMember(Name="Shipper", EmitDefaultValue=false)]
        public string Shipper { get; set; }

        /// <summary>
        /// Gets or Sets ShipperTrackingNumber
        /// </summary>
        [DataMember(Name="ShipperTrackingNumber", EmitDefaultValue=false)]
        public string ShipperTrackingNumber { get; set; }

        /// <summary>
        /// Gets or Sets Posted
        /// </summary>
        [DataMember(Name="Posted", EmitDefaultValue=false)]
        public bool? Posted { get; set; }

        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name="Location", EmitDefaultValue=false)]
        public string Location { get; set; }

        /// <summary>
        /// Gets or Sets ItemId
        /// </summary>
        [DataMember(Name="ItemId", EmitDefaultValue=false)]
        public string ItemId { get; set; }

        /// <summary>
        /// Gets or Sets PostedDate
        /// </summary>
        [DataMember(Name="PostedDate", EmitDefaultValue=false)]
        public DateTime? PostedDate { get; set; }

        /// <summary>
        /// Gets or Sets Bin
        /// </summary>
        [DataMember(Name="Bin", EmitDefaultValue=false)]
        public string Bin { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebPurchaseOrderLineItemReceipt {\n");
            sb.Append("  PurchaseOrderRecieptNumber: ").Append(PurchaseOrderRecieptNumber).Append("\n");
            sb.Append("  QuantityReceived: ").Append(QuantityReceived).Append("\n");
            sb.Append("  ReceivedDate: ").Append(ReceivedDate).Append("\n");
            sb.Append("  ReceivedByRepNumber: ").Append(ReceivedByRepNumber).Append("\n");
            sb.Append("  ReceivedByRepName: ").Append(ReceivedByRepName).Append("\n");
            sb.Append("  Shipper: ").Append(Shipper).Append("\n");
            sb.Append("  ShipperTrackingNumber: ").Append(ShipperTrackingNumber).Append("\n");
            sb.Append("  Posted: ").Append(Posted).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  PostedDate: ").Append(PostedDate).Append("\n");
            sb.Append("  Bin: ").Append(Bin).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebPurchaseOrderLineItemReceipt);
        }

        /// <summary>
        /// Returns true if TsiWebPurchaseOrderLineItemReceipt instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebPurchaseOrderLineItemReceipt to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebPurchaseOrderLineItemReceipt input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PurchaseOrderRecieptNumber == input.PurchaseOrderRecieptNumber ||
                    (this.PurchaseOrderRecieptNumber != null &&
                    this.PurchaseOrderRecieptNumber.Equals(input.PurchaseOrderRecieptNumber))
                ) && 
                (
                    this.QuantityReceived == input.QuantityReceived ||
                    (this.QuantityReceived != null &&
                    this.QuantityReceived.Equals(input.QuantityReceived))
                ) && 
                (
                    this.ReceivedDate == input.ReceivedDate ||
                    (this.ReceivedDate != null &&
                    this.ReceivedDate.Equals(input.ReceivedDate))
                ) && 
                (
                    this.ReceivedByRepNumber == input.ReceivedByRepNumber ||
                    (this.ReceivedByRepNumber != null &&
                    this.ReceivedByRepNumber.Equals(input.ReceivedByRepNumber))
                ) && 
                (
                    this.ReceivedByRepName == input.ReceivedByRepName ||
                    (this.ReceivedByRepName != null &&
                    this.ReceivedByRepName.Equals(input.ReceivedByRepName))
                ) && 
                (
                    this.Shipper == input.Shipper ||
                    (this.Shipper != null &&
                    this.Shipper.Equals(input.Shipper))
                ) && 
                (
                    this.ShipperTrackingNumber == input.ShipperTrackingNumber ||
                    (this.ShipperTrackingNumber != null &&
                    this.ShipperTrackingNumber.Equals(input.ShipperTrackingNumber))
                ) && 
                (
                    this.Posted == input.Posted ||
                    (this.Posted != null &&
                    this.Posted.Equals(input.Posted))
                ) && 
                (
                    this.Location == input.Location ||
                    (this.Location != null &&
                    this.Location.Equals(input.Location))
                ) && 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.PostedDate == input.PostedDate ||
                    (this.PostedDate != null &&
                    this.PostedDate.Equals(input.PostedDate))
                ) && 
                (
                    this.Bin == input.Bin ||
                    (this.Bin != null &&
                    this.Bin.Equals(input.Bin))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PurchaseOrderRecieptNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderRecieptNumber.GetHashCode();
                if (this.QuantityReceived != null)
                    hashCode = hashCode * 59 + this.QuantityReceived.GetHashCode();
                if (this.ReceivedDate != null)
                    hashCode = hashCode * 59 + this.ReceivedDate.GetHashCode();
                if (this.ReceivedByRepNumber != null)
                    hashCode = hashCode * 59 + this.ReceivedByRepNumber.GetHashCode();
                if (this.ReceivedByRepName != null)
                    hashCode = hashCode * 59 + this.ReceivedByRepName.GetHashCode();
                if (this.Shipper != null)
                    hashCode = hashCode * 59 + this.Shipper.GetHashCode();
                if (this.ShipperTrackingNumber != null)
                    hashCode = hashCode * 59 + this.ShipperTrackingNumber.GetHashCode();
                if (this.Posted != null)
                    hashCode = hashCode * 59 + this.Posted.GetHashCode();
                if (this.Location != null)
                    hashCode = hashCode * 59 + this.Location.GetHashCode();
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.PostedDate != null)
                    hashCode = hashCode * 59 + this.PostedDate.GetHashCode();
                if (this.Bin != null)
                    hashCode = hashCode * 59 + this.Bin.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
