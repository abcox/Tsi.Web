/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// This class is for the serial numbers on a purchase order line item, these are the only fields saved until posting the line item.
    /// </summary>
    [DataContract]
    public partial class TsiWebPurchaseOrderLineItemSerialNumber :  IEquatable<TsiWebPurchaseOrderLineItemSerialNumber>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPurchaseOrderLineItemSerialNumber" /> class.
        /// </summary>
        /// <param name="serialNumber">serialNumber.</param>
        /// <param name="comments">comments.</param>
        /// <param name="itemId">itemId.</param>
        /// <param name="purchaseOrderAssemblyDetailNumber">purchaseOrderAssemblyDetailNumber.</param>
        /// <param name="posted">posted.</param>
        public TsiWebPurchaseOrderLineItemSerialNumber(string serialNumber = default(string), string comments = default(string), string itemId = default(string), int? purchaseOrderAssemblyDetailNumber = default(int?), bool? posted = default(bool?))
        {
            this.SerialNumber = serialNumber;
            this.Comments = comments;
            this.ItemId = itemId;
            this.PurchaseOrderAssemblyDetailNumber = purchaseOrderAssemblyDetailNumber;
            this.Posted = posted;
        }
        
        /// <summary>
        /// Gets or Sets SerialNumber
        /// </summary>
        [DataMember(Name="SerialNumber", EmitDefaultValue=false)]
        public string SerialNumber { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="Comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets ItemId
        /// </summary>
        [DataMember(Name="ItemId", EmitDefaultValue=false)]
        public string ItemId { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderAssemblyDetailNumber
        /// </summary>
        [DataMember(Name="PurchaseOrderAssemblyDetailNumber", EmitDefaultValue=false)]
        public int? PurchaseOrderAssemblyDetailNumber { get; set; }

        /// <summary>
        /// Gets or Sets Posted
        /// </summary>
        [DataMember(Name="Posted", EmitDefaultValue=false)]
        public bool? Posted { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebPurchaseOrderLineItemSerialNumber {\n");
            sb.Append("  SerialNumber: ").Append(SerialNumber).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  PurchaseOrderAssemblyDetailNumber: ").Append(PurchaseOrderAssemblyDetailNumber).Append("\n");
            sb.Append("  Posted: ").Append(Posted).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebPurchaseOrderLineItemSerialNumber);
        }

        /// <summary>
        /// Returns true if TsiWebPurchaseOrderLineItemSerialNumber instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebPurchaseOrderLineItemSerialNumber to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebPurchaseOrderLineItemSerialNumber input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SerialNumber == input.SerialNumber ||
                    (this.SerialNumber != null &&
                    this.SerialNumber.Equals(input.SerialNumber))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.PurchaseOrderAssemblyDetailNumber == input.PurchaseOrderAssemblyDetailNumber ||
                    (this.PurchaseOrderAssemblyDetailNumber != null &&
                    this.PurchaseOrderAssemblyDetailNumber.Equals(input.PurchaseOrderAssemblyDetailNumber))
                ) && 
                (
                    this.Posted == input.Posted ||
                    (this.Posted != null &&
                    this.Posted.Equals(input.Posted))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SerialNumber != null)
                    hashCode = hashCode * 59 + this.SerialNumber.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.PurchaseOrderAssemblyDetailNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderAssemblyDetailNumber.GetHashCode();
                if (this.Posted != null)
                    hashCode = hashCode * 59 + this.Posted.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
