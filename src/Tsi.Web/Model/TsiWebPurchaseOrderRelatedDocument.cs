/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebPurchaseOrderRelatedDocument
    /// </summary>
    [DataContract]
    public partial class TsiWebPurchaseOrderRelatedDocument :  IEquatable<TsiWebPurchaseOrderRelatedDocument>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPurchaseOrderRelatedDocument" /> class.
        /// </summary>
        /// <param name="documentNumber">documentNumber.</param>
        /// <param name="purchaseOrderRelatedOrderType">purchaseOrderRelatedOrderType.</param>
        /// <param name="purchaseOrderLineItemNumber">purchaseOrderLineItemNumber.</param>
        /// <param name="documentItemNumber">documentItemNumber.</param>
        /// <param name="description">description.</param>
        /// <param name="status">status.</param>
        /// <param name="itemId">itemId.</param>
        /// <param name="quantityOrdered">quantityOrdered.</param>
        /// <param name="quantityRecieved">quantityRecieved.</param>
        /// <param name="quantityCancelled">quantityCancelled.</param>
        /// <param name="projectNumber">projectNumber.</param>
        /// <param name="projectDescription">projectDescription.</param>
        /// <param name="projectStatus">projectStatus.</param>
        public TsiWebPurchaseOrderRelatedDocument(int? documentNumber = default(int?), string purchaseOrderRelatedOrderType = default(string), int? purchaseOrderLineItemNumber = default(int?), int? documentItemNumber = default(int?), string description = default(string), string status = default(string), string itemId = default(string), double? quantityOrdered = default(double?), double? quantityRecieved = default(double?), double? quantityCancelled = default(double?), int? projectNumber = default(int?), string projectDescription = default(string), string projectStatus = default(string))
        {
            this.DocumentNumber = documentNumber;
            this.PurchaseOrderRelatedOrderType = purchaseOrderRelatedOrderType;
            this.PurchaseOrderLineItemNumber = purchaseOrderLineItemNumber;
            this.DocumentItemNumber = documentItemNumber;
            this.Description = description;
            this.Status = status;
            this.ItemId = itemId;
            this.QuantityOrdered = quantityOrdered;
            this.QuantityRecieved = quantityRecieved;
            this.QuantityCancelled = quantityCancelled;
            this.ProjectNumber = projectNumber;
            this.ProjectDescription = projectDescription;
            this.ProjectStatus = projectStatus;
        }
        
        /// <summary>
        /// Gets or Sets DocumentNumber
        /// </summary>
        [DataMember(Name="DocumentNumber", EmitDefaultValue=false)]
        public int? DocumentNumber { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderRelatedOrderType
        /// </summary>
        [DataMember(Name="PurchaseOrderRelatedOrderType", EmitDefaultValue=false)]
        public string PurchaseOrderRelatedOrderType { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderLineItemNumber
        /// </summary>
        [DataMember(Name="PurchaseOrderLineItemNumber", EmitDefaultValue=false)]
        public int? PurchaseOrderLineItemNumber { get; set; }

        /// <summary>
        /// Gets or Sets DocumentItemNumber
        /// </summary>
        [DataMember(Name="DocumentItemNumber", EmitDefaultValue=false)]
        public int? DocumentItemNumber { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets ItemId
        /// </summary>
        [DataMember(Name="ItemId", EmitDefaultValue=false)]
        public string ItemId { get; set; }

        /// <summary>
        /// Gets or Sets QuantityOrdered
        /// </summary>
        [DataMember(Name="QuantityOrdered", EmitDefaultValue=false)]
        public double? QuantityOrdered { get; set; }

        /// <summary>
        /// Gets or Sets QuantityRecieved
        /// </summary>
        [DataMember(Name="QuantityRecieved", EmitDefaultValue=false)]
        public double? QuantityRecieved { get; set; }

        /// <summary>
        /// Gets or Sets QuantityCancelled
        /// </summary>
        [DataMember(Name="QuantityCancelled", EmitDefaultValue=false)]
        public double? QuantityCancelled { get; set; }

        /// <summary>
        /// Gets or Sets ProjectNumber
        /// </summary>
        [DataMember(Name="ProjectNumber", EmitDefaultValue=false)]
        public int? ProjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectDescription
        /// </summary>
        [DataMember(Name="ProjectDescription", EmitDefaultValue=false)]
        public string ProjectDescription { get; set; }

        /// <summary>
        /// Gets or Sets ProjectStatus
        /// </summary>
        [DataMember(Name="ProjectStatus", EmitDefaultValue=false)]
        public string ProjectStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebPurchaseOrderRelatedDocument {\n");
            sb.Append("  DocumentNumber: ").Append(DocumentNumber).Append("\n");
            sb.Append("  PurchaseOrderRelatedOrderType: ").Append(PurchaseOrderRelatedOrderType).Append("\n");
            sb.Append("  PurchaseOrderLineItemNumber: ").Append(PurchaseOrderLineItemNumber).Append("\n");
            sb.Append("  DocumentItemNumber: ").Append(DocumentItemNumber).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ItemId: ").Append(ItemId).Append("\n");
            sb.Append("  QuantityOrdered: ").Append(QuantityOrdered).Append("\n");
            sb.Append("  QuantityRecieved: ").Append(QuantityRecieved).Append("\n");
            sb.Append("  QuantityCancelled: ").Append(QuantityCancelled).Append("\n");
            sb.Append("  ProjectNumber: ").Append(ProjectNumber).Append("\n");
            sb.Append("  ProjectDescription: ").Append(ProjectDescription).Append("\n");
            sb.Append("  ProjectStatus: ").Append(ProjectStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebPurchaseOrderRelatedDocument);
        }

        /// <summary>
        /// Returns true if TsiWebPurchaseOrderRelatedDocument instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebPurchaseOrderRelatedDocument to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebPurchaseOrderRelatedDocument input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DocumentNumber == input.DocumentNumber ||
                    (this.DocumentNumber != null &&
                    this.DocumentNumber.Equals(input.DocumentNumber))
                ) && 
                (
                    this.PurchaseOrderRelatedOrderType == input.PurchaseOrderRelatedOrderType ||
                    (this.PurchaseOrderRelatedOrderType != null &&
                    this.PurchaseOrderRelatedOrderType.Equals(input.PurchaseOrderRelatedOrderType))
                ) && 
                (
                    this.PurchaseOrderLineItemNumber == input.PurchaseOrderLineItemNumber ||
                    (this.PurchaseOrderLineItemNumber != null &&
                    this.PurchaseOrderLineItemNumber.Equals(input.PurchaseOrderLineItemNumber))
                ) && 
                (
                    this.DocumentItemNumber == input.DocumentItemNumber ||
                    (this.DocumentItemNumber != null &&
                    this.DocumentItemNumber.Equals(input.DocumentItemNumber))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.ItemId == input.ItemId ||
                    (this.ItemId != null &&
                    this.ItemId.Equals(input.ItemId))
                ) && 
                (
                    this.QuantityOrdered == input.QuantityOrdered ||
                    (this.QuantityOrdered != null &&
                    this.QuantityOrdered.Equals(input.QuantityOrdered))
                ) && 
                (
                    this.QuantityRecieved == input.QuantityRecieved ||
                    (this.QuantityRecieved != null &&
                    this.QuantityRecieved.Equals(input.QuantityRecieved))
                ) && 
                (
                    this.QuantityCancelled == input.QuantityCancelled ||
                    (this.QuantityCancelled != null &&
                    this.QuantityCancelled.Equals(input.QuantityCancelled))
                ) && 
                (
                    this.ProjectNumber == input.ProjectNumber ||
                    (this.ProjectNumber != null &&
                    this.ProjectNumber.Equals(input.ProjectNumber))
                ) && 
                (
                    this.ProjectDescription == input.ProjectDescription ||
                    (this.ProjectDescription != null &&
                    this.ProjectDescription.Equals(input.ProjectDescription))
                ) && 
                (
                    this.ProjectStatus == input.ProjectStatus ||
                    (this.ProjectStatus != null &&
                    this.ProjectStatus.Equals(input.ProjectStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DocumentNumber != null)
                    hashCode = hashCode * 59 + this.DocumentNumber.GetHashCode();
                if (this.PurchaseOrderRelatedOrderType != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderRelatedOrderType.GetHashCode();
                if (this.PurchaseOrderLineItemNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderLineItemNumber.GetHashCode();
                if (this.DocumentItemNumber != null)
                    hashCode = hashCode * 59 + this.DocumentItemNumber.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.ItemId != null)
                    hashCode = hashCode * 59 + this.ItemId.GetHashCode();
                if (this.QuantityOrdered != null)
                    hashCode = hashCode * 59 + this.QuantityOrdered.GetHashCode();
                if (this.QuantityRecieved != null)
                    hashCode = hashCode * 59 + this.QuantityRecieved.GetHashCode();
                if (this.QuantityCancelled != null)
                    hashCode = hashCode * 59 + this.QuantityCancelled.GetHashCode();
                if (this.ProjectNumber != null)
                    hashCode = hashCode * 59 + this.ProjectNumber.GetHashCode();
                if (this.ProjectDescription != null)
                    hashCode = hashCode * 59 + this.ProjectDescription.GetHashCode();
                if (this.ProjectStatus != null)
                    hashCode = hashCode * 59 + this.ProjectStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
