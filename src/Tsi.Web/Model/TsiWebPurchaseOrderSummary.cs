/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebPurchaseOrderSummary
    /// </summary>
    [DataContract]
    public partial class TsiWebPurchaseOrderSummary :  IEquatable<TsiWebPurchaseOrderSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebPurchaseOrderSummary" /> class.
        /// </summary>
        /// <param name="purchaseOrderNumber">purchaseOrderNumber.</param>
        /// <param name="purchaseOrder">purchaseOrder.</param>
        /// <param name="vendorAccountNumber">vendorAccountNumber.</param>
        /// <param name="vendorAccountName">vendorAccountName.</param>
        /// <param name="purchaseOrderLineItems">purchaseOrderLineItems.</param>
        /// <param name="purchaseOrderRelatedDocuments">purchaseOrderRelatedDocuments.</param>
        /// <param name="hasReceipts">hasReceipts.</param>
        public TsiWebPurchaseOrderSummary(int? purchaseOrderNumber = default(int?), TsiWebPurchaseOrder purchaseOrder = default(TsiWebPurchaseOrder), int? vendorAccountNumber = default(int?), string vendorAccountName = default(string), int? purchaseOrderLineItems = default(int?), int? purchaseOrderRelatedDocuments = default(int?), bool? hasReceipts = default(bool?))
        {
            this.PurchaseOrderNumber = purchaseOrderNumber;
            this.PurchaseOrder = purchaseOrder;
            this.VendorAccountNumber = vendorAccountNumber;
            this.VendorAccountName = vendorAccountName;
            this.PurchaseOrderLineItems = purchaseOrderLineItems;
            this.PurchaseOrderRelatedDocuments = purchaseOrderRelatedDocuments;
            this.HasReceipts = hasReceipts;
        }
        
        /// <summary>
        /// Gets or Sets PurchaseOrderNumber
        /// </summary>
        [DataMember(Name="PurchaseOrderNumber", EmitDefaultValue=false)]
        public int? PurchaseOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrder
        /// </summary>
        [DataMember(Name="PurchaseOrder", EmitDefaultValue=false)]
        public TsiWebPurchaseOrder PurchaseOrder { get; set; }

        /// <summary>
        /// Gets or Sets VendorAccountNumber
        /// </summary>
        [DataMember(Name="VendorAccountNumber", EmitDefaultValue=false)]
        public int? VendorAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets VendorAccountName
        /// </summary>
        [DataMember(Name="VendorAccountName", EmitDefaultValue=false)]
        public string VendorAccountName { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderLineItems
        /// </summary>
        [DataMember(Name="PurchaseOrderLineItems", EmitDefaultValue=false)]
        public int? PurchaseOrderLineItems { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrderRelatedDocuments
        /// </summary>
        [DataMember(Name="PurchaseOrderRelatedDocuments", EmitDefaultValue=false)]
        public int? PurchaseOrderRelatedDocuments { get; set; }

        /// <summary>
        /// Gets or Sets HasReceipts
        /// </summary>
        [DataMember(Name="HasReceipts", EmitDefaultValue=false)]
        public bool? HasReceipts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebPurchaseOrderSummary {\n");
            sb.Append("  PurchaseOrderNumber: ").Append(PurchaseOrderNumber).Append("\n");
            sb.Append("  PurchaseOrder: ").Append(PurchaseOrder).Append("\n");
            sb.Append("  VendorAccountNumber: ").Append(VendorAccountNumber).Append("\n");
            sb.Append("  VendorAccountName: ").Append(VendorAccountName).Append("\n");
            sb.Append("  PurchaseOrderLineItems: ").Append(PurchaseOrderLineItems).Append("\n");
            sb.Append("  PurchaseOrderRelatedDocuments: ").Append(PurchaseOrderRelatedDocuments).Append("\n");
            sb.Append("  HasReceipts: ").Append(HasReceipts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebPurchaseOrderSummary);
        }

        /// <summary>
        /// Returns true if TsiWebPurchaseOrderSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebPurchaseOrderSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebPurchaseOrderSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PurchaseOrderNumber == input.PurchaseOrderNumber ||
                    (this.PurchaseOrderNumber != null &&
                    this.PurchaseOrderNumber.Equals(input.PurchaseOrderNumber))
                ) && 
                (
                    this.PurchaseOrder == input.PurchaseOrder ||
                    (this.PurchaseOrder != null &&
                    this.PurchaseOrder.Equals(input.PurchaseOrder))
                ) && 
                (
                    this.VendorAccountNumber == input.VendorAccountNumber ||
                    (this.VendorAccountNumber != null &&
                    this.VendorAccountNumber.Equals(input.VendorAccountNumber))
                ) && 
                (
                    this.VendorAccountName == input.VendorAccountName ||
                    (this.VendorAccountName != null &&
                    this.VendorAccountName.Equals(input.VendorAccountName))
                ) && 
                (
                    this.PurchaseOrderLineItems == input.PurchaseOrderLineItems ||
                    (this.PurchaseOrderLineItems != null &&
                    this.PurchaseOrderLineItems.Equals(input.PurchaseOrderLineItems))
                ) && 
                (
                    this.PurchaseOrderRelatedDocuments == input.PurchaseOrderRelatedDocuments ||
                    (this.PurchaseOrderRelatedDocuments != null &&
                    this.PurchaseOrderRelatedDocuments.Equals(input.PurchaseOrderRelatedDocuments))
                ) && 
                (
                    this.HasReceipts == input.HasReceipts ||
                    (this.HasReceipts != null &&
                    this.HasReceipts.Equals(input.HasReceipts))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PurchaseOrderNumber != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderNumber.GetHashCode();
                if (this.PurchaseOrder != null)
                    hashCode = hashCode * 59 + this.PurchaseOrder.GetHashCode();
                if (this.VendorAccountNumber != null)
                    hashCode = hashCode * 59 + this.VendorAccountNumber.GetHashCode();
                if (this.VendorAccountName != null)
                    hashCode = hashCode * 59 + this.VendorAccountName.GetHashCode();
                if (this.PurchaseOrderLineItems != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderLineItems.GetHashCode();
                if (this.PurchaseOrderRelatedDocuments != null)
                    hashCode = hashCode * 59 + this.PurchaseOrderRelatedDocuments.GetHashCode();
                if (this.HasReceipts != null)
                    hashCode = hashCode * 59 + this.HasReceipts.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
