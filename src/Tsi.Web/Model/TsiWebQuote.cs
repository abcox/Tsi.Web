/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebQuote
    /// </summary>
    [DataContract]
    public partial class TsiWebQuote :  IEquatable<TsiWebQuote>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebQuote" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TsiWebQuote() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebQuote" /> class.
        /// </summary>
        /// <param name="accountNumber">accountNumber (required).</param>
        /// <param name="contactNumber">contactNumber.</param>
        /// <param name="repNumber">repNumber (required).</param>
        /// <param name="lastEditedByRepNumber">lastEditedByRepNumber.</param>
        /// <param name="opportunityNumber">opportunityNumber.</param>
        /// <param name="projectNumber">projectNumber.</param>
        /// <param name="projectPhaseNumber">projectPhaseNumber.</param>
        /// <param name="approvedByRepNumber">approvedByRepNumber.</param>
        /// <param name="changeOrderNumber">changeOrderNumber.</param>
        /// <param name="invoiceNumber">invoiceNumber.</param>
        /// <param name="priceLevel">priceLevel.</param>
        /// <param name="leaseMonths">leaseMonths.</param>
        /// <param name="payMethodId">payMethodId.</param>
        /// <param name="voidedBy">voidedBy.</param>
        /// <param name="internalExternalChangeOrder">internalExternalChangeOrder.</param>
        /// <param name="description">description (required).</param>
        /// <param name="alternateContactPhoneNumber">alternateContactPhoneNumber.</param>
        /// <param name="comment">comment.</param>
        /// <param name="job">job.</param>
        /// <param name="type">type.</param>
        /// <param name="terms">terms.</param>
        /// <param name="source">source.</param>
        /// <param name="status">status.</param>
        /// <param name="signedBy">signedBy.</param>
        /// <param name="shippingInstruction">shippingInstruction.</param>
        /// <param name="packingInstruction">packingInstruction.</param>
        /// <param name="shipper">shipper.</param>
        /// <param name="shippingMethod">shippingMethod.</param>
        /// <param name="internalComment">internalComment.</param>
        /// <param name="totalLineComment">totalLineComment.</param>
        /// <param name="stagingLocation">stagingLocation.</param>
        /// <param name="customerPurchaseOrder">customerPurchaseOrder.</param>
        /// <param name="salesTaxCode">salesTaxCode (required).</param>
        /// <param name="paymentMethod">paymentMethod.</param>
        /// <param name="billingComment">billingComment.</param>
        /// <param name="trackingNumber">trackingNumber.</param>
        /// <param name="leaseBuyOut">leaseBuyOut.</param>
        /// <param name="progressiveInvoiceTotalComment">progressiveInvoiceTotalComment.</param>
        /// <param name="aRCustomerNumber">aRCustomerNumber.</param>
        /// <param name="stagingBin">stagingBin.</param>
        /// <param name="rateCardName">rateCardName.</param>
        /// <param name="maintenanceType">maintenanceType.</param>
        /// <param name="maintenanceAmount">maintenanceAmount.</param>
        /// <param name="quoteDate">quoteDate.</param>
        /// <param name="expirationDate">expirationDate.</param>
        /// <param name="statusDate">statusDate.</param>
        /// <param name="signedDate">signedDate.</param>
        /// <param name="shipDate">shipDate.</param>
        /// <param name="lastEditDate">lastEditDate.</param>
        /// <param name="approvedDate">approvedDate.</param>
        /// <param name="invoiceDate">invoiceDate.</param>
        /// <param name="closeDate">closeDate.</param>
        /// <param name="estimatedCloseDate">estimatedCloseDate.</param>
        /// <param name="serviceOrderDate">serviceOrderDate.</param>
        /// <param name="postedDate">postedDate.</param>
        /// <param name="paidInFullDate">paidInFullDate.</param>
        /// <param name="installDate">installDate.</param>
        /// <param name="dateToInstall">dateToInstall.</param>
        /// <param name="nextDate">nextDate.</param>
        /// <param name="shipTo">shipTo.</param>
        /// <param name="billTo">billTo.</param>
        /// <param name="workOrderNumber">workOrderNumber.</param>
        /// <param name="workOrderClosed">workOrderClosed.</param>
        /// <param name="workOrderDate">workOrderDate.</param>
        /// <param name="workOrderStatus">workOrderStatus.</param>
        /// <param name="showInForecasts">showInForecasts.</param>
        /// <param name="displayOnPortal">displayOnPortal.</param>
        /// <param name="approved">approved.</param>
        /// <param name="approvedForInvoicing">approvedForInvoicing.</param>
        /// <param name="printLeaseInfo">printLeaseInfo.</param>
        /// <param name="completelyServiceOrdered">completelyServiceOrdered.</param>
        /// <param name="canDiscountedItemsGetQuoteDiscount">canDiscountedItemsGetQuoteDiscount.</param>
        /// <param name="paymentFromGreatAmerica">paymentFromGreatAmerica.</param>
        /// <param name="changesMadeAfterPaymentFromGreatAmerica">changesMadeAfterPaymentFromGreatAmerica.</param>
        /// <param name="isChangeOrder">isChangeOrder.</param>
        /// <param name="freightTaxable">freightTaxable.</param>
        /// <param name="taxLabor">taxLabor.</param>
        /// <param name="gSTExempt">gSTExempt.</param>
        /// <param name="taxable">taxable.</param>
        /// <param name="taxComputedBeforeTradeIn">taxComputedBeforeTradeIn.</param>
        /// <param name="gSTaxComputedBeforeTradeIn">gSTaxComputedBeforeTradeIn.</param>
        /// <param name="gSTIsTaxable">gSTIsTaxable.</param>
        /// <param name="discountAmount">discountAmount.</param>
        /// <param name="discountSellForPrice">discountSellForPrice.</param>
        /// <param name="freight">freight.</param>
        /// <param name="tradeIn">tradeIn.</param>
        /// <param name="credit">credit.</param>
        /// <param name="deposit">deposit.</param>
        /// <param name="leaseDown">leaseDown.</param>
        /// <param name="leasePayment">leasePayment.</param>
        /// <param name="cashOnDelivery">cashOnDelivery.</param>
        /// <param name="manufacturerListPrice">manufacturerListPrice.</param>
        /// <param name="bookPrice">bookPrice.</param>
        /// <param name="netSell">netSell.</param>
        /// <param name="grossSell">grossSell.</param>
        /// <param name="dollarsDiscounted">dollarsDiscounted.</param>
        /// <param name="netInvoice">netInvoice.</param>
        /// <param name="laborNet">laborNet.</param>
        /// <param name="materialNet">materialNet.</param>
        /// <param name="taxableAmount">taxableAmount.</param>
        /// <param name="tax">tax.</param>
        /// <param name="gSTaxableAmount">gSTaxableAmount.</param>
        /// <param name="gSTax">gSTax.</param>
        /// <param name="amountDue">amountDue.</param>
        /// <param name="cost">cost.</param>
        /// <param name="materialCost">materialCost.</param>
        /// <param name="laborCost">laborCost.</param>
        /// <param name="profit">profit.</param>
        /// <param name="providerTaxableAmount">providerTaxableAmount.</param>
        /// <param name="providerTax">providerTax.</param>
        /// <param name="percentDiscounted">percentDiscounted.</param>
        /// <param name="margin">margin.</param>
        /// <param name="salesTaxRate">salesTaxRate.</param>
        /// <param name="percentagePoints">percentagePoints.</param>
        /// <param name="hoursNeeded">hoursNeeded.</param>
        /// <param name="hoursEntered">hoursEntered.</param>
        /// <param name="discountPercent">discountPercent.</param>
        /// <param name="leaseRate">leaseRate.</param>
        /// <param name="discountMarginPercent">discountMarginPercent.</param>
        /// <param name="providerTaxRate">providerTaxRate.</param>
        /// <param name="gSTaxRate">gSTaxRate.</param>
        /// <param name="leaseIsTaxIncluded">leaseIsTaxIncluded.</param>
        public TsiWebQuote(int? accountNumber = default(int?), int? contactNumber = default(int?), int? repNumber = default(int?), int? lastEditedByRepNumber = default(int?), int? opportunityNumber = default(int?), int? projectNumber = default(int?), int? projectPhaseNumber = default(int?), int? approvedByRepNumber = default(int?), int? changeOrderNumber = default(int?), int? invoiceNumber = default(int?), int? priceLevel = default(int?), int? leaseMonths = default(int?), int? payMethodId = default(int?), int? voidedBy = default(int?), int? internalExternalChangeOrder = default(int?), string description = default(string), string alternateContactPhoneNumber = default(string), string comment = default(string), string job = default(string), string type = default(string), string terms = default(string), string source = default(string), string status = default(string), string signedBy = default(string), string shippingInstruction = default(string), string packingInstruction = default(string), string shipper = default(string), string shippingMethod = default(string), string internalComment = default(string), string totalLineComment = default(string), string stagingLocation = default(string), string customerPurchaseOrder = default(string), string salesTaxCode = default(string), string paymentMethod = default(string), string billingComment = default(string), string trackingNumber = default(string), string leaseBuyOut = default(string), string progressiveInvoiceTotalComment = default(string), string aRCustomerNumber = default(string), string stagingBin = default(string), string rateCardName = default(string), string maintenanceType = default(string), string maintenanceAmount = default(string), DateTime? quoteDate = default(DateTime?), DateTime? expirationDate = default(DateTime?), DateTime? statusDate = default(DateTime?), DateTime? signedDate = default(DateTime?), DateTime? shipDate = default(DateTime?), DateTime? lastEditDate = default(DateTime?), DateTime? approvedDate = default(DateTime?), DateTime? invoiceDate = default(DateTime?), DateTime? closeDate = default(DateTime?), DateTime? estimatedCloseDate = default(DateTime?), DateTime? serviceOrderDate = default(DateTime?), DateTime? postedDate = default(DateTime?), DateTime? paidInFullDate = default(DateTime?), DateTime? installDate = default(DateTime?), DateTime? dateToInstall = default(DateTime?), DateTime? nextDate = default(DateTime?), TsiWebAlternateAddress shipTo = default(TsiWebAlternateAddress), TsiWebAlternateAddress billTo = default(TsiWebAlternateAddress), int? workOrderNumber = default(int?), bool? workOrderClosed = default(bool?), DateTime? workOrderDate = default(DateTime?), string workOrderStatus = default(string), bool? showInForecasts = default(bool?), bool? displayOnPortal = default(bool?), bool? approved = default(bool?), bool? approvedForInvoicing = default(bool?), bool? printLeaseInfo = default(bool?), bool? completelyServiceOrdered = default(bool?), bool? canDiscountedItemsGetQuoteDiscount = default(bool?), bool? paymentFromGreatAmerica = default(bool?), bool? changesMadeAfterPaymentFromGreatAmerica = default(bool?), bool? isChangeOrder = default(bool?), bool? freightTaxable = default(bool?), bool? taxLabor = default(bool?), bool? gSTExempt = default(bool?), bool? taxable = default(bool?), bool? taxComputedBeforeTradeIn = default(bool?), bool? gSTaxComputedBeforeTradeIn = default(bool?), bool? gSTIsTaxable = default(bool?), double? discountAmount = default(double?), double? discountSellForPrice = default(double?), double? freight = default(double?), double? tradeIn = default(double?), double? credit = default(double?), double? deposit = default(double?), double? leaseDown = default(double?), double? leasePayment = default(double?), int? cashOnDelivery = default(int?), double? manufacturerListPrice = default(double?), double? bookPrice = default(double?), double? netSell = default(double?), double? grossSell = default(double?), double? dollarsDiscounted = default(double?), double? netInvoice = default(double?), double? laborNet = default(double?), double? materialNet = default(double?), double? taxableAmount = default(double?), double? tax = default(double?), double? gSTaxableAmount = default(double?), double? gSTax = default(double?), double? amountDue = default(double?), double? cost = default(double?), double? materialCost = default(double?), double? laborCost = default(double?), double? profit = default(double?), double? providerTaxableAmount = default(double?), double? providerTax = default(double?), double? percentDiscounted = default(double?), double? margin = default(double?), double? salesTaxRate = default(double?), double? percentagePoints = default(double?), double? hoursNeeded = default(double?), double? hoursEntered = default(double?), double? discountPercent = default(double?), double? leaseRate = default(double?), double? discountMarginPercent = default(double?), double? providerTaxRate = default(double?), double? gSTaxRate = default(double?), bool? leaseIsTaxIncluded = default(bool?))
        {
            // to ensure "accountNumber" is required (not null)
            if (accountNumber == null)
            {
                throw new InvalidDataException("accountNumber is a required property for TsiWebQuote and cannot be null");
            }
            else
            {
                this.AccountNumber = accountNumber;
            }
            // to ensure "repNumber" is required (not null)
            if (repNumber == null)
            {
                throw new InvalidDataException("repNumber is a required property for TsiWebQuote and cannot be null");
            }
            else
            {
                this.RepNumber = repNumber;
            }
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new InvalidDataException("description is a required property for TsiWebQuote and cannot be null");
            }
            else
            {
                this.Description = description;
            }
            // to ensure "salesTaxCode" is required (not null)
            if (salesTaxCode == null)
            {
                throw new InvalidDataException("salesTaxCode is a required property for TsiWebQuote and cannot be null");
            }
            else
            {
                this.SalesTaxCode = salesTaxCode;
            }
            this.ContactNumber = contactNumber;
            this.LastEditedByRepNumber = lastEditedByRepNumber;
            this.OpportunityNumber = opportunityNumber;
            this.ProjectNumber = projectNumber;
            this.ProjectPhaseNumber = projectPhaseNumber;
            this.ApprovedByRepNumber = approvedByRepNumber;
            this.ChangeOrderNumber = changeOrderNumber;
            this.InvoiceNumber = invoiceNumber;
            this.PriceLevel = priceLevel;
            this.LeaseMonths = leaseMonths;
            this.PayMethodId = payMethodId;
            this.VoidedBy = voidedBy;
            this.InternalExternalChangeOrder = internalExternalChangeOrder;
            this.AlternateContactPhoneNumber = alternateContactPhoneNumber;
            this.Comment = comment;
            this.Job = job;
            this.Type = type;
            this.Terms = terms;
            this.Source = source;
            this.Status = status;
            this.SignedBy = signedBy;
            this.ShippingInstruction = shippingInstruction;
            this.PackingInstruction = packingInstruction;
            this.Shipper = shipper;
            this.ShippingMethod = shippingMethod;
            this.InternalComment = internalComment;
            this.TotalLineComment = totalLineComment;
            this.StagingLocation = stagingLocation;
            this.CustomerPurchaseOrder = customerPurchaseOrder;
            this.PaymentMethod = paymentMethod;
            this.BillingComment = billingComment;
            this.TrackingNumber = trackingNumber;
            this.LeaseBuyOut = leaseBuyOut;
            this.ProgressiveInvoiceTotalComment = progressiveInvoiceTotalComment;
            this.ARCustomerNumber = aRCustomerNumber;
            this.StagingBin = stagingBin;
            this.RateCardName = rateCardName;
            this.MaintenanceType = maintenanceType;
            this.MaintenanceAmount = maintenanceAmount;
            this.QuoteDate = quoteDate;
            this.ExpirationDate = expirationDate;
            this.StatusDate = statusDate;
            this.SignedDate = signedDate;
            this.ShipDate = shipDate;
            this.LastEditDate = lastEditDate;
            this.ApprovedDate = approvedDate;
            this.InvoiceDate = invoiceDate;
            this.CloseDate = closeDate;
            this.EstimatedCloseDate = estimatedCloseDate;
            this.ServiceOrderDate = serviceOrderDate;
            this.PostedDate = postedDate;
            this.PaidInFullDate = paidInFullDate;
            this.InstallDate = installDate;
            this.DateToInstall = dateToInstall;
            this.NextDate = nextDate;
            this.ShipTo = shipTo;
            this.BillTo = billTo;
            this.WorkOrderNumber = workOrderNumber;
            this.WorkOrderClosed = workOrderClosed;
            this.WorkOrderDate = workOrderDate;
            this.WorkOrderStatus = workOrderStatus;
            this.ShowInForecasts = showInForecasts;
            this.DisplayOnPortal = displayOnPortal;
            this.Approved = approved;
            this.ApprovedForInvoicing = approvedForInvoicing;
            this.PrintLeaseInfo = printLeaseInfo;
            this.CompletelyServiceOrdered = completelyServiceOrdered;
            this.CanDiscountedItemsGetQuoteDiscount = canDiscountedItemsGetQuoteDiscount;
            this.PaymentFromGreatAmerica = paymentFromGreatAmerica;
            this.ChangesMadeAfterPaymentFromGreatAmerica = changesMadeAfterPaymentFromGreatAmerica;
            this.IsChangeOrder = isChangeOrder;
            this.FreightTaxable = freightTaxable;
            this.TaxLabor = taxLabor;
            this.GSTExempt = gSTExempt;
            this.Taxable = taxable;
            this.TaxComputedBeforeTradeIn = taxComputedBeforeTradeIn;
            this.GSTaxComputedBeforeTradeIn = gSTaxComputedBeforeTradeIn;
            this.GSTIsTaxable = gSTIsTaxable;
            this.DiscountAmount = discountAmount;
            this.DiscountSellForPrice = discountSellForPrice;
            this.Freight = freight;
            this.TradeIn = tradeIn;
            this.Credit = credit;
            this.Deposit = deposit;
            this.LeaseDown = leaseDown;
            this.LeasePayment = leasePayment;
            this.CashOnDelivery = cashOnDelivery;
            this.ManufacturerListPrice = manufacturerListPrice;
            this.BookPrice = bookPrice;
            this.NetSell = netSell;
            this.GrossSell = grossSell;
            this.DollarsDiscounted = dollarsDiscounted;
            this.NetInvoice = netInvoice;
            this.LaborNet = laborNet;
            this.MaterialNet = materialNet;
            this.TaxableAmount = taxableAmount;
            this.Tax = tax;
            this.GSTaxableAmount = gSTaxableAmount;
            this.GSTax = gSTax;
            this.AmountDue = amountDue;
            this.Cost = cost;
            this.MaterialCost = materialCost;
            this.LaborCost = laborCost;
            this.Profit = profit;
            this.ProviderTaxableAmount = providerTaxableAmount;
            this.ProviderTax = providerTax;
            this.PercentDiscounted = percentDiscounted;
            this.Margin = margin;
            this.SalesTaxRate = salesTaxRate;
            this.PercentagePoints = percentagePoints;
            this.HoursNeeded = hoursNeeded;
            this.HoursEntered = hoursEntered;
            this.DiscountPercent = discountPercent;
            this.LeaseRate = leaseRate;
            this.DiscountMarginPercent = discountMarginPercent;
            this.ProviderTaxRate = providerTaxRate;
            this.GSTaxRate = gSTaxRate;
            this.LeaseIsTaxIncluded = leaseIsTaxIncluded;
        }
        
        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactNumber
        /// </summary>
        [DataMember(Name="ContactNumber", EmitDefaultValue=false)]
        public int? ContactNumber { get; set; }

        /// <summary>
        /// Gets or Sets RepNumber
        /// </summary>
        [DataMember(Name="RepNumber", EmitDefaultValue=false)]
        public int? RepNumber { get; set; }

        /// <summary>
        /// Gets or Sets LastEditedByRepNumber
        /// </summary>
        [DataMember(Name="LastEditedByRepNumber", EmitDefaultValue=false)]
        public int? LastEditedByRepNumber { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityNumber
        /// </summary>
        [DataMember(Name="OpportunityNumber", EmitDefaultValue=false)]
        public int? OpportunityNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectNumber
        /// </summary>
        [DataMember(Name="ProjectNumber", EmitDefaultValue=false)]
        public int? ProjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectPhaseNumber
        /// </summary>
        [DataMember(Name="ProjectPhaseNumber", EmitDefaultValue=false)]
        public int? ProjectPhaseNumber { get; set; }

        /// <summary>
        /// Gets or Sets ApprovedByRepNumber
        /// </summary>
        [DataMember(Name="ApprovedByRepNumber", EmitDefaultValue=false)]
        public int? ApprovedByRepNumber { get; set; }

        /// <summary>
        /// Gets or Sets ChangeOrderNumber
        /// </summary>
        [DataMember(Name="ChangeOrderNumber", EmitDefaultValue=false)]
        public int? ChangeOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceNumber
        /// </summary>
        [DataMember(Name="InvoiceNumber", EmitDefaultValue=false)]
        public int? InvoiceNumber { get; set; }

        /// <summary>
        /// Gets or Sets PriceLevel
        /// </summary>
        [DataMember(Name="PriceLevel", EmitDefaultValue=false)]
        public int? PriceLevel { get; set; }

        /// <summary>
        /// Gets or Sets LeaseMonths
        /// </summary>
        [DataMember(Name="LeaseMonths", EmitDefaultValue=false)]
        public int? LeaseMonths { get; set; }

        /// <summary>
        /// Gets or Sets PayMethodId
        /// </summary>
        [DataMember(Name="PayMethodId", EmitDefaultValue=false)]
        public int? PayMethodId { get; set; }

        /// <summary>
        /// Gets or Sets VoidedBy
        /// </summary>
        [DataMember(Name="VoidedBy", EmitDefaultValue=false)]
        public int? VoidedBy { get; set; }

        /// <summary>
        /// Gets or Sets InternalExternalChangeOrder
        /// </summary>
        [DataMember(Name="InternalExternalChangeOrder", EmitDefaultValue=false)]
        public int? InternalExternalChangeOrder { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets AlternateContactPhoneNumber
        /// </summary>
        [DataMember(Name="AlternateContactPhoneNumber", EmitDefaultValue=false)]
        public string AlternateContactPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="Comment", EmitDefaultValue=false)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets Job
        /// </summary>
        [DataMember(Name="Job", EmitDefaultValue=false)]
        public string Job { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="Type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Terms
        /// </summary>
        [DataMember(Name="Terms", EmitDefaultValue=false)]
        public string Terms { get; set; }

        /// <summary>
        /// Gets or Sets Source
        /// </summary>
        [DataMember(Name="Source", EmitDefaultValue=false)]
        public string Source { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets SignedBy
        /// </summary>
        [DataMember(Name="SignedBy", EmitDefaultValue=false)]
        public string SignedBy { get; set; }

        /// <summary>
        /// Gets or Sets ShippingInstruction
        /// </summary>
        [DataMember(Name="ShippingInstruction", EmitDefaultValue=false)]
        public string ShippingInstruction { get; set; }

        /// <summary>
        /// Gets or Sets PackingInstruction
        /// </summary>
        [DataMember(Name="PackingInstruction", EmitDefaultValue=false)]
        public string PackingInstruction { get; set; }

        /// <summary>
        /// Gets or Sets Shipper
        /// </summary>
        [DataMember(Name="Shipper", EmitDefaultValue=false)]
        public string Shipper { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMethod
        /// </summary>
        [DataMember(Name="ShippingMethod", EmitDefaultValue=false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// Gets or Sets InternalComment
        /// </summary>
        [DataMember(Name="InternalComment", EmitDefaultValue=false)]
        public string InternalComment { get; set; }

        /// <summary>
        /// Gets or Sets TotalLineComment
        /// </summary>
        [DataMember(Name="TotalLineComment", EmitDefaultValue=false)]
        public string TotalLineComment { get; set; }

        /// <summary>
        /// Gets or Sets StagingLocation
        /// </summary>
        [DataMember(Name="StagingLocation", EmitDefaultValue=false)]
        public string StagingLocation { get; set; }

        /// <summary>
        /// Gets or Sets CustomerPurchaseOrder
        /// </summary>
        [DataMember(Name="CustomerPurchaseOrder", EmitDefaultValue=false)]
        public string CustomerPurchaseOrder { get; set; }

        /// <summary>
        /// Gets or Sets SalesTaxCode
        /// </summary>
        [DataMember(Name="SalesTaxCode", EmitDefaultValue=false)]
        public string SalesTaxCode { get; set; }

        /// <summary>
        /// Gets or Sets PaymentMethod
        /// </summary>
        [DataMember(Name="PaymentMethod", EmitDefaultValue=false)]
        public string PaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets BillingComment
        /// </summary>
        [DataMember(Name="BillingComment", EmitDefaultValue=false)]
        public string BillingComment { get; set; }

        /// <summary>
        /// Gets or Sets TrackingNumber
        /// </summary>
        [DataMember(Name="TrackingNumber", EmitDefaultValue=false)]
        public string TrackingNumber { get; set; }

        /// <summary>
        /// Gets or Sets LeaseBuyOut
        /// </summary>
        [DataMember(Name="LeaseBuyOut", EmitDefaultValue=false)]
        public string LeaseBuyOut { get; set; }

        /// <summary>
        /// Gets or Sets ProgressiveInvoiceTotalComment
        /// </summary>
        [DataMember(Name="ProgressiveInvoiceTotalComment", EmitDefaultValue=false)]
        public string ProgressiveInvoiceTotalComment { get; set; }

        /// <summary>
        /// Gets or Sets ARCustomerNumber
        /// </summary>
        [DataMember(Name="ARCustomerNumber", EmitDefaultValue=false)]
        public string ARCustomerNumber { get; set; }

        /// <summary>
        /// Gets or Sets StagingBin
        /// </summary>
        [DataMember(Name="StagingBin", EmitDefaultValue=false)]
        public string StagingBin { get; set; }

        /// <summary>
        /// Gets or Sets RateCardName
        /// </summary>
        [DataMember(Name="RateCardName", EmitDefaultValue=false)]
        public string RateCardName { get; set; }

        /// <summary>
        /// Gets or Sets MaintenanceType
        /// </summary>
        [DataMember(Name="MaintenanceType", EmitDefaultValue=false)]
        public string MaintenanceType { get; set; }

        /// <summary>
        /// Gets or Sets MaintenanceAmount
        /// </summary>
        [DataMember(Name="MaintenanceAmount", EmitDefaultValue=false)]
        public string MaintenanceAmount { get; set; }

        /// <summary>
        /// Gets or Sets QuoteDate
        /// </summary>
        [DataMember(Name="QuoteDate", EmitDefaultValue=false)]
        public DateTime? QuoteDate { get; set; }

        /// <summary>
        /// Gets or Sets ExpirationDate
        /// </summary>
        [DataMember(Name="ExpirationDate", EmitDefaultValue=false)]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets StatusDate
        /// </summary>
        [DataMember(Name="StatusDate", EmitDefaultValue=false)]
        public DateTime? StatusDate { get; set; }

        /// <summary>
        /// Gets or Sets SignedDate
        /// </summary>
        [DataMember(Name="SignedDate", EmitDefaultValue=false)]
        public DateTime? SignedDate { get; set; }

        /// <summary>
        /// Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name="ShipDate", EmitDefaultValue=false)]
        public DateTime? ShipDate { get; set; }

        /// <summary>
        /// Gets or Sets LastEditDate
        /// </summary>
        [DataMember(Name="LastEditDate", EmitDefaultValue=false)]
        public DateTime? LastEditDate { get; set; }

        /// <summary>
        /// Gets or Sets ApprovedDate
        /// </summary>
        [DataMember(Name="ApprovedDate", EmitDefaultValue=false)]
        public DateTime? ApprovedDate { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceDate
        /// </summary>
        [DataMember(Name="InvoiceDate", EmitDefaultValue=false)]
        public DateTime? InvoiceDate { get; set; }

        /// <summary>
        /// Gets or Sets CloseDate
        /// </summary>
        [DataMember(Name="CloseDate", EmitDefaultValue=false)]
        public DateTime? CloseDate { get; set; }

        /// <summary>
        /// Gets or Sets EstimatedCloseDate
        /// </summary>
        [DataMember(Name="EstimatedCloseDate", EmitDefaultValue=false)]
        public DateTime? EstimatedCloseDate { get; set; }

        /// <summary>
        /// Gets or Sets ServiceOrderDate
        /// </summary>
        [DataMember(Name="ServiceOrderDate", EmitDefaultValue=false)]
        public DateTime? ServiceOrderDate { get; set; }

        /// <summary>
        /// Gets or Sets PostedDate
        /// </summary>
        [DataMember(Name="PostedDate", EmitDefaultValue=false)]
        public DateTime? PostedDate { get; set; }

        /// <summary>
        /// Gets or Sets PaidInFullDate
        /// </summary>
        [DataMember(Name="PaidInFullDate", EmitDefaultValue=false)]
        public DateTime? PaidInFullDate { get; set; }

        /// <summary>
        /// Gets or Sets InstallDate
        /// </summary>
        [DataMember(Name="InstallDate", EmitDefaultValue=false)]
        public DateTime? InstallDate { get; set; }

        /// <summary>
        /// Gets or Sets DateToInstall
        /// </summary>
        [DataMember(Name="DateToInstall", EmitDefaultValue=false)]
        public DateTime? DateToInstall { get; set; }

        /// <summary>
        /// Gets or Sets NextDate
        /// </summary>
        [DataMember(Name="NextDate", EmitDefaultValue=false)]
        public DateTime? NextDate { get; set; }

        /// <summary>
        /// Gets or Sets ShipTo
        /// </summary>
        [DataMember(Name="ShipTo", EmitDefaultValue=false)]
        public TsiWebAlternateAddress ShipTo { get; set; }

        /// <summary>
        /// Gets or Sets BillTo
        /// </summary>
        [DataMember(Name="BillTo", EmitDefaultValue=false)]
        public TsiWebAlternateAddress BillTo { get; set; }

        /// <summary>
        /// Gets or Sets WorkOrderNumber
        /// </summary>
        [DataMember(Name="WorkOrderNumber", EmitDefaultValue=false)]
        public int? WorkOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets WorkOrderClosed
        /// </summary>
        [DataMember(Name="WorkOrderClosed", EmitDefaultValue=false)]
        public bool? WorkOrderClosed { get; set; }

        /// <summary>
        /// Gets or Sets WorkOrderDate
        /// </summary>
        [DataMember(Name="WorkOrderDate", EmitDefaultValue=false)]
        public DateTime? WorkOrderDate { get; set; }

        /// <summary>
        /// Gets or Sets WorkOrderStatus
        /// </summary>
        [DataMember(Name="WorkOrderStatus", EmitDefaultValue=false)]
        public string WorkOrderStatus { get; set; }

        /// <summary>
        /// Gets or Sets ShowInForecasts
        /// </summary>
        [DataMember(Name="ShowInForecasts", EmitDefaultValue=false)]
        public bool? ShowInForecasts { get; set; }

        /// <summary>
        /// Gets or Sets DisplayOnPortal
        /// </summary>
        [DataMember(Name="DisplayOnPortal", EmitDefaultValue=false)]
        public bool? DisplayOnPortal { get; set; }

        /// <summary>
        /// Gets or Sets Approved
        /// </summary>
        [DataMember(Name="Approved", EmitDefaultValue=false)]
        public bool? Approved { get; set; }

        /// <summary>
        /// Gets or Sets ApprovedForInvoicing
        /// </summary>
        [DataMember(Name="ApprovedForInvoicing", EmitDefaultValue=false)]
        public bool? ApprovedForInvoicing { get; set; }

        /// <summary>
        /// Gets or Sets PrintLeaseInfo
        /// </summary>
        [DataMember(Name="PrintLeaseInfo", EmitDefaultValue=false)]
        public bool? PrintLeaseInfo { get; set; }

        /// <summary>
        /// Gets or Sets CompletelyServiceOrdered
        /// </summary>
        [DataMember(Name="CompletelyServiceOrdered", EmitDefaultValue=false)]
        public bool? CompletelyServiceOrdered { get; set; }

        /// <summary>
        /// Gets or Sets CanDiscountedItemsGetQuoteDiscount
        /// </summary>
        [DataMember(Name="CanDiscountedItemsGetQuoteDiscount", EmitDefaultValue=false)]
        public bool? CanDiscountedItemsGetQuoteDiscount { get; set; }

        /// <summary>
        /// Gets or Sets PaymentFromGreatAmerica
        /// </summary>
        [DataMember(Name="PaymentFromGreatAmerica", EmitDefaultValue=false)]
        public bool? PaymentFromGreatAmerica { get; set; }

        /// <summary>
        /// Gets or Sets ChangesMadeAfterPaymentFromGreatAmerica
        /// </summary>
        [DataMember(Name="ChangesMadeAfterPaymentFromGreatAmerica", EmitDefaultValue=false)]
        public bool? ChangesMadeAfterPaymentFromGreatAmerica { get; set; }

        /// <summary>
        /// Gets or Sets IsChangeOrder
        /// </summary>
        [DataMember(Name="IsChangeOrder", EmitDefaultValue=false)]
        public bool? IsChangeOrder { get; set; }

        /// <summary>
        /// Gets or Sets FreightTaxable
        /// </summary>
        [DataMember(Name="FreightTaxable", EmitDefaultValue=false)]
        public bool? FreightTaxable { get; set; }

        /// <summary>
        /// Gets or Sets TaxLabor
        /// </summary>
        [DataMember(Name="TaxLabor", EmitDefaultValue=false)]
        public bool? TaxLabor { get; set; }

        /// <summary>
        /// Gets or Sets GSTExempt
        /// </summary>
        [DataMember(Name="GSTExempt", EmitDefaultValue=false)]
        public bool? GSTExempt { get; set; }

        /// <summary>
        /// Gets or Sets Taxable
        /// </summary>
        [DataMember(Name="Taxable", EmitDefaultValue=false)]
        public bool? Taxable { get; set; }

        /// <summary>
        /// Gets or Sets TaxComputedBeforeTradeIn
        /// </summary>
        [DataMember(Name="TaxComputedBeforeTradeIn", EmitDefaultValue=false)]
        public bool? TaxComputedBeforeTradeIn { get; set; }

        /// <summary>
        /// Gets or Sets GSTaxComputedBeforeTradeIn
        /// </summary>
        [DataMember(Name="GSTaxComputedBeforeTradeIn", EmitDefaultValue=false)]
        public bool? GSTaxComputedBeforeTradeIn { get; set; }

        /// <summary>
        /// Gets or Sets GSTIsTaxable
        /// </summary>
        [DataMember(Name="GSTIsTaxable", EmitDefaultValue=false)]
        public bool? GSTIsTaxable { get; set; }

        /// <summary>
        /// Gets or Sets DiscountAmount
        /// </summary>
        [DataMember(Name="DiscountAmount", EmitDefaultValue=false)]
        public double? DiscountAmount { get; set; }

        /// <summary>
        /// Gets or Sets DiscountSellForPrice
        /// </summary>
        [DataMember(Name="DiscountSellForPrice", EmitDefaultValue=false)]
        public double? DiscountSellForPrice { get; set; }

        /// <summary>
        /// Gets or Sets Freight
        /// </summary>
        [DataMember(Name="Freight", EmitDefaultValue=false)]
        public double? Freight { get; set; }

        /// <summary>
        /// Gets or Sets TradeIn
        /// </summary>
        [DataMember(Name="TradeIn", EmitDefaultValue=false)]
        public double? TradeIn { get; set; }

        /// <summary>
        /// Gets or Sets Credit
        /// </summary>
        [DataMember(Name="Credit", EmitDefaultValue=false)]
        public double? Credit { get; set; }

        /// <summary>
        /// Gets or Sets Deposit
        /// </summary>
        [DataMember(Name="Deposit", EmitDefaultValue=false)]
        public double? Deposit { get; set; }

        /// <summary>
        /// Gets or Sets LeaseDown
        /// </summary>
        [DataMember(Name="LeaseDown", EmitDefaultValue=false)]
        public double? LeaseDown { get; set; }

        /// <summary>
        /// Gets or Sets LeasePayment
        /// </summary>
        [DataMember(Name="LeasePayment", EmitDefaultValue=false)]
        public double? LeasePayment { get; set; }

        /// <summary>
        /// Gets or Sets CashOnDelivery
        /// </summary>
        [DataMember(Name="CashOnDelivery", EmitDefaultValue=false)]
        public int? CashOnDelivery { get; set; }

        /// <summary>
        /// Gets or Sets ManufacturerListPrice
        /// </summary>
        [DataMember(Name="ManufacturerListPrice", EmitDefaultValue=false)]
        public double? ManufacturerListPrice { get; set; }

        /// <summary>
        /// Gets or Sets BookPrice
        /// </summary>
        [DataMember(Name="BookPrice", EmitDefaultValue=false)]
        public double? BookPrice { get; set; }

        /// <summary>
        /// Gets or Sets NetSell
        /// </summary>
        [DataMember(Name="NetSell", EmitDefaultValue=false)]
        public double? NetSell { get; set; }

        /// <summary>
        /// Gets or Sets GrossSell
        /// </summary>
        [DataMember(Name="GrossSell", EmitDefaultValue=false)]
        public double? GrossSell { get; set; }

        /// <summary>
        /// Gets or Sets DollarsDiscounted
        /// </summary>
        [DataMember(Name="DollarsDiscounted", EmitDefaultValue=false)]
        public double? DollarsDiscounted { get; set; }

        /// <summary>
        /// Gets or Sets NetInvoice
        /// </summary>
        [DataMember(Name="NetInvoice", EmitDefaultValue=false)]
        public double? NetInvoice { get; set; }

        /// <summary>
        /// Gets or Sets LaborNet
        /// </summary>
        [DataMember(Name="LaborNet", EmitDefaultValue=false)]
        public double? LaborNet { get; set; }

        /// <summary>
        /// Gets or Sets MaterialNet
        /// </summary>
        [DataMember(Name="MaterialNet", EmitDefaultValue=false)]
        public double? MaterialNet { get; set; }

        /// <summary>
        /// Gets or Sets TaxableAmount
        /// </summary>
        [DataMember(Name="TaxableAmount", EmitDefaultValue=false)]
        public double? TaxableAmount { get; set; }

        /// <summary>
        /// Gets or Sets Tax
        /// </summary>
        [DataMember(Name="Tax", EmitDefaultValue=false)]
        public double? Tax { get; set; }

        /// <summary>
        /// Gets or Sets GSTaxableAmount
        /// </summary>
        [DataMember(Name="GSTaxableAmount", EmitDefaultValue=false)]
        public double? GSTaxableAmount { get; set; }

        /// <summary>
        /// Gets or Sets GSTax
        /// </summary>
        [DataMember(Name="GSTax", EmitDefaultValue=false)]
        public double? GSTax { get; set; }

        /// <summary>
        /// Gets or Sets AmountDue
        /// </summary>
        [DataMember(Name="AmountDue", EmitDefaultValue=false)]
        public double? AmountDue { get; set; }

        /// <summary>
        /// Gets or Sets Cost
        /// </summary>
        [DataMember(Name="Cost", EmitDefaultValue=false)]
        public double? Cost { get; set; }

        /// <summary>
        /// Gets or Sets MaterialCost
        /// </summary>
        [DataMember(Name="MaterialCost", EmitDefaultValue=false)]
        public double? MaterialCost { get; set; }

        /// <summary>
        /// Gets or Sets LaborCost
        /// </summary>
        [DataMember(Name="LaborCost", EmitDefaultValue=false)]
        public double? LaborCost { get; set; }

        /// <summary>
        /// Gets or Sets Profit
        /// </summary>
        [DataMember(Name="Profit", EmitDefaultValue=false)]
        public double? Profit { get; set; }

        /// <summary>
        /// Gets or Sets ProviderTaxableAmount
        /// </summary>
        [DataMember(Name="ProviderTaxableAmount", EmitDefaultValue=false)]
        public double? ProviderTaxableAmount { get; set; }

        /// <summary>
        /// Gets or Sets ProviderTax
        /// </summary>
        [DataMember(Name="ProviderTax", EmitDefaultValue=false)]
        public double? ProviderTax { get; set; }

        /// <summary>
        /// Gets or Sets PercentDiscounted
        /// </summary>
        [DataMember(Name="PercentDiscounted", EmitDefaultValue=false)]
        public double? PercentDiscounted { get; set; }

        /// <summary>
        /// Gets or Sets Margin
        /// </summary>
        [DataMember(Name="Margin", EmitDefaultValue=false)]
        public double? Margin { get; set; }

        /// <summary>
        /// Gets or Sets SalesTaxRate
        /// </summary>
        [DataMember(Name="SalesTaxRate", EmitDefaultValue=false)]
        public double? SalesTaxRate { get; set; }

        /// <summary>
        /// Gets or Sets PercentagePoints
        /// </summary>
        [DataMember(Name="PercentagePoints", EmitDefaultValue=false)]
        public double? PercentagePoints { get; set; }

        /// <summary>
        /// Gets or Sets HoursNeeded
        /// </summary>
        [DataMember(Name="HoursNeeded", EmitDefaultValue=false)]
        public double? HoursNeeded { get; set; }

        /// <summary>
        /// Gets or Sets HoursEntered
        /// </summary>
        [DataMember(Name="HoursEntered", EmitDefaultValue=false)]
        public double? HoursEntered { get; set; }

        /// <summary>
        /// Gets or Sets DiscountPercent
        /// </summary>
        [DataMember(Name="DiscountPercent", EmitDefaultValue=false)]
        public double? DiscountPercent { get; set; }

        /// <summary>
        /// Gets or Sets LeaseRate
        /// </summary>
        [DataMember(Name="LeaseRate", EmitDefaultValue=false)]
        public double? LeaseRate { get; set; }

        /// <summary>
        /// Gets or Sets DiscountMarginPercent
        /// </summary>
        [DataMember(Name="DiscountMarginPercent", EmitDefaultValue=false)]
        public double? DiscountMarginPercent { get; set; }

        /// <summary>
        /// Gets or Sets ProviderTaxRate
        /// </summary>
        [DataMember(Name="ProviderTaxRate", EmitDefaultValue=false)]
        public double? ProviderTaxRate { get; set; }

        /// <summary>
        /// Gets or Sets GSTaxRate
        /// </summary>
        [DataMember(Name="GSTaxRate", EmitDefaultValue=false)]
        public double? GSTaxRate { get; set; }

        /// <summary>
        /// Gets or Sets LeaseIsTaxIncluded
        /// </summary>
        [DataMember(Name="LeaseIsTaxIncluded", EmitDefaultValue=false)]
        public bool? LeaseIsTaxIncluded { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebQuote {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  ContactNumber: ").Append(ContactNumber).Append("\n");
            sb.Append("  RepNumber: ").Append(RepNumber).Append("\n");
            sb.Append("  LastEditedByRepNumber: ").Append(LastEditedByRepNumber).Append("\n");
            sb.Append("  OpportunityNumber: ").Append(OpportunityNumber).Append("\n");
            sb.Append("  ProjectNumber: ").Append(ProjectNumber).Append("\n");
            sb.Append("  ProjectPhaseNumber: ").Append(ProjectPhaseNumber).Append("\n");
            sb.Append("  ApprovedByRepNumber: ").Append(ApprovedByRepNumber).Append("\n");
            sb.Append("  ChangeOrderNumber: ").Append(ChangeOrderNumber).Append("\n");
            sb.Append("  InvoiceNumber: ").Append(InvoiceNumber).Append("\n");
            sb.Append("  PriceLevel: ").Append(PriceLevel).Append("\n");
            sb.Append("  LeaseMonths: ").Append(LeaseMonths).Append("\n");
            sb.Append("  PayMethodId: ").Append(PayMethodId).Append("\n");
            sb.Append("  VoidedBy: ").Append(VoidedBy).Append("\n");
            sb.Append("  InternalExternalChangeOrder: ").Append(InternalExternalChangeOrder).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  AlternateContactPhoneNumber: ").Append(AlternateContactPhoneNumber).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  Job: ").Append(Job).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Terms: ").Append(Terms).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  SignedBy: ").Append(SignedBy).Append("\n");
            sb.Append("  ShippingInstruction: ").Append(ShippingInstruction).Append("\n");
            sb.Append("  PackingInstruction: ").Append(PackingInstruction).Append("\n");
            sb.Append("  Shipper: ").Append(Shipper).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  InternalComment: ").Append(InternalComment).Append("\n");
            sb.Append("  TotalLineComment: ").Append(TotalLineComment).Append("\n");
            sb.Append("  StagingLocation: ").Append(StagingLocation).Append("\n");
            sb.Append("  CustomerPurchaseOrder: ").Append(CustomerPurchaseOrder).Append("\n");
            sb.Append("  SalesTaxCode: ").Append(SalesTaxCode).Append("\n");
            sb.Append("  PaymentMethod: ").Append(PaymentMethod).Append("\n");
            sb.Append("  BillingComment: ").Append(BillingComment).Append("\n");
            sb.Append("  TrackingNumber: ").Append(TrackingNumber).Append("\n");
            sb.Append("  LeaseBuyOut: ").Append(LeaseBuyOut).Append("\n");
            sb.Append("  ProgressiveInvoiceTotalComment: ").Append(ProgressiveInvoiceTotalComment).Append("\n");
            sb.Append("  ARCustomerNumber: ").Append(ARCustomerNumber).Append("\n");
            sb.Append("  StagingBin: ").Append(StagingBin).Append("\n");
            sb.Append("  RateCardName: ").Append(RateCardName).Append("\n");
            sb.Append("  MaintenanceType: ").Append(MaintenanceType).Append("\n");
            sb.Append("  MaintenanceAmount: ").Append(MaintenanceAmount).Append("\n");
            sb.Append("  QuoteDate: ").Append(QuoteDate).Append("\n");
            sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
            sb.Append("  StatusDate: ").Append(StatusDate).Append("\n");
            sb.Append("  SignedDate: ").Append(SignedDate).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("  LastEditDate: ").Append(LastEditDate).Append("\n");
            sb.Append("  ApprovedDate: ").Append(ApprovedDate).Append("\n");
            sb.Append("  InvoiceDate: ").Append(InvoiceDate).Append("\n");
            sb.Append("  CloseDate: ").Append(CloseDate).Append("\n");
            sb.Append("  EstimatedCloseDate: ").Append(EstimatedCloseDate).Append("\n");
            sb.Append("  ServiceOrderDate: ").Append(ServiceOrderDate).Append("\n");
            sb.Append("  PostedDate: ").Append(PostedDate).Append("\n");
            sb.Append("  PaidInFullDate: ").Append(PaidInFullDate).Append("\n");
            sb.Append("  InstallDate: ").Append(InstallDate).Append("\n");
            sb.Append("  DateToInstall: ").Append(DateToInstall).Append("\n");
            sb.Append("  NextDate: ").Append(NextDate).Append("\n");
            sb.Append("  ShipTo: ").Append(ShipTo).Append("\n");
            sb.Append("  BillTo: ").Append(BillTo).Append("\n");
            sb.Append("  WorkOrderNumber: ").Append(WorkOrderNumber).Append("\n");
            sb.Append("  WorkOrderClosed: ").Append(WorkOrderClosed).Append("\n");
            sb.Append("  WorkOrderDate: ").Append(WorkOrderDate).Append("\n");
            sb.Append("  WorkOrderStatus: ").Append(WorkOrderStatus).Append("\n");
            sb.Append("  ShowInForecasts: ").Append(ShowInForecasts).Append("\n");
            sb.Append("  DisplayOnPortal: ").Append(DisplayOnPortal).Append("\n");
            sb.Append("  Approved: ").Append(Approved).Append("\n");
            sb.Append("  ApprovedForInvoicing: ").Append(ApprovedForInvoicing).Append("\n");
            sb.Append("  PrintLeaseInfo: ").Append(PrintLeaseInfo).Append("\n");
            sb.Append("  CompletelyServiceOrdered: ").Append(CompletelyServiceOrdered).Append("\n");
            sb.Append("  CanDiscountedItemsGetQuoteDiscount: ").Append(CanDiscountedItemsGetQuoteDiscount).Append("\n");
            sb.Append("  PaymentFromGreatAmerica: ").Append(PaymentFromGreatAmerica).Append("\n");
            sb.Append("  ChangesMadeAfterPaymentFromGreatAmerica: ").Append(ChangesMadeAfterPaymentFromGreatAmerica).Append("\n");
            sb.Append("  IsChangeOrder: ").Append(IsChangeOrder).Append("\n");
            sb.Append("  FreightTaxable: ").Append(FreightTaxable).Append("\n");
            sb.Append("  TaxLabor: ").Append(TaxLabor).Append("\n");
            sb.Append("  GSTExempt: ").Append(GSTExempt).Append("\n");
            sb.Append("  Taxable: ").Append(Taxable).Append("\n");
            sb.Append("  TaxComputedBeforeTradeIn: ").Append(TaxComputedBeforeTradeIn).Append("\n");
            sb.Append("  GSTaxComputedBeforeTradeIn: ").Append(GSTaxComputedBeforeTradeIn).Append("\n");
            sb.Append("  GSTIsTaxable: ").Append(GSTIsTaxable).Append("\n");
            sb.Append("  DiscountAmount: ").Append(DiscountAmount).Append("\n");
            sb.Append("  DiscountSellForPrice: ").Append(DiscountSellForPrice).Append("\n");
            sb.Append("  Freight: ").Append(Freight).Append("\n");
            sb.Append("  TradeIn: ").Append(TradeIn).Append("\n");
            sb.Append("  Credit: ").Append(Credit).Append("\n");
            sb.Append("  Deposit: ").Append(Deposit).Append("\n");
            sb.Append("  LeaseDown: ").Append(LeaseDown).Append("\n");
            sb.Append("  LeasePayment: ").Append(LeasePayment).Append("\n");
            sb.Append("  CashOnDelivery: ").Append(CashOnDelivery).Append("\n");
            sb.Append("  ManufacturerListPrice: ").Append(ManufacturerListPrice).Append("\n");
            sb.Append("  BookPrice: ").Append(BookPrice).Append("\n");
            sb.Append("  NetSell: ").Append(NetSell).Append("\n");
            sb.Append("  GrossSell: ").Append(GrossSell).Append("\n");
            sb.Append("  DollarsDiscounted: ").Append(DollarsDiscounted).Append("\n");
            sb.Append("  NetInvoice: ").Append(NetInvoice).Append("\n");
            sb.Append("  LaborNet: ").Append(LaborNet).Append("\n");
            sb.Append("  MaterialNet: ").Append(MaterialNet).Append("\n");
            sb.Append("  TaxableAmount: ").Append(TaxableAmount).Append("\n");
            sb.Append("  Tax: ").Append(Tax).Append("\n");
            sb.Append("  GSTaxableAmount: ").Append(GSTaxableAmount).Append("\n");
            sb.Append("  GSTax: ").Append(GSTax).Append("\n");
            sb.Append("  AmountDue: ").Append(AmountDue).Append("\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  MaterialCost: ").Append(MaterialCost).Append("\n");
            sb.Append("  LaborCost: ").Append(LaborCost).Append("\n");
            sb.Append("  Profit: ").Append(Profit).Append("\n");
            sb.Append("  ProviderTaxableAmount: ").Append(ProviderTaxableAmount).Append("\n");
            sb.Append("  ProviderTax: ").Append(ProviderTax).Append("\n");
            sb.Append("  PercentDiscounted: ").Append(PercentDiscounted).Append("\n");
            sb.Append("  Margin: ").Append(Margin).Append("\n");
            sb.Append("  SalesTaxRate: ").Append(SalesTaxRate).Append("\n");
            sb.Append("  PercentagePoints: ").Append(PercentagePoints).Append("\n");
            sb.Append("  HoursNeeded: ").Append(HoursNeeded).Append("\n");
            sb.Append("  HoursEntered: ").Append(HoursEntered).Append("\n");
            sb.Append("  DiscountPercent: ").Append(DiscountPercent).Append("\n");
            sb.Append("  LeaseRate: ").Append(LeaseRate).Append("\n");
            sb.Append("  DiscountMarginPercent: ").Append(DiscountMarginPercent).Append("\n");
            sb.Append("  ProviderTaxRate: ").Append(ProviderTaxRate).Append("\n");
            sb.Append("  GSTaxRate: ").Append(GSTaxRate).Append("\n");
            sb.Append("  LeaseIsTaxIncluded: ").Append(LeaseIsTaxIncluded).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebQuote);
        }

        /// <summary>
        /// Returns true if TsiWebQuote instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebQuote to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebQuote input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.ContactNumber == input.ContactNumber ||
                    (this.ContactNumber != null &&
                    this.ContactNumber.Equals(input.ContactNumber))
                ) && 
                (
                    this.RepNumber == input.RepNumber ||
                    (this.RepNumber != null &&
                    this.RepNumber.Equals(input.RepNumber))
                ) && 
                (
                    this.LastEditedByRepNumber == input.LastEditedByRepNumber ||
                    (this.LastEditedByRepNumber != null &&
                    this.LastEditedByRepNumber.Equals(input.LastEditedByRepNumber))
                ) && 
                (
                    this.OpportunityNumber == input.OpportunityNumber ||
                    (this.OpportunityNumber != null &&
                    this.OpportunityNumber.Equals(input.OpportunityNumber))
                ) && 
                (
                    this.ProjectNumber == input.ProjectNumber ||
                    (this.ProjectNumber != null &&
                    this.ProjectNumber.Equals(input.ProjectNumber))
                ) && 
                (
                    this.ProjectPhaseNumber == input.ProjectPhaseNumber ||
                    (this.ProjectPhaseNumber != null &&
                    this.ProjectPhaseNumber.Equals(input.ProjectPhaseNumber))
                ) && 
                (
                    this.ApprovedByRepNumber == input.ApprovedByRepNumber ||
                    (this.ApprovedByRepNumber != null &&
                    this.ApprovedByRepNumber.Equals(input.ApprovedByRepNumber))
                ) && 
                (
                    this.ChangeOrderNumber == input.ChangeOrderNumber ||
                    (this.ChangeOrderNumber != null &&
                    this.ChangeOrderNumber.Equals(input.ChangeOrderNumber))
                ) && 
                (
                    this.InvoiceNumber == input.InvoiceNumber ||
                    (this.InvoiceNumber != null &&
                    this.InvoiceNumber.Equals(input.InvoiceNumber))
                ) && 
                (
                    this.PriceLevel == input.PriceLevel ||
                    (this.PriceLevel != null &&
                    this.PriceLevel.Equals(input.PriceLevel))
                ) && 
                (
                    this.LeaseMonths == input.LeaseMonths ||
                    (this.LeaseMonths != null &&
                    this.LeaseMonths.Equals(input.LeaseMonths))
                ) && 
                (
                    this.PayMethodId == input.PayMethodId ||
                    (this.PayMethodId != null &&
                    this.PayMethodId.Equals(input.PayMethodId))
                ) && 
                (
                    this.VoidedBy == input.VoidedBy ||
                    (this.VoidedBy != null &&
                    this.VoidedBy.Equals(input.VoidedBy))
                ) && 
                (
                    this.InternalExternalChangeOrder == input.InternalExternalChangeOrder ||
                    (this.InternalExternalChangeOrder != null &&
                    this.InternalExternalChangeOrder.Equals(input.InternalExternalChangeOrder))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.AlternateContactPhoneNumber == input.AlternateContactPhoneNumber ||
                    (this.AlternateContactPhoneNumber != null &&
                    this.AlternateContactPhoneNumber.Equals(input.AlternateContactPhoneNumber))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.Job == input.Job ||
                    (this.Job != null &&
                    this.Job.Equals(input.Job))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Terms == input.Terms ||
                    (this.Terms != null &&
                    this.Terms.Equals(input.Terms))
                ) && 
                (
                    this.Source == input.Source ||
                    (this.Source != null &&
                    this.Source.Equals(input.Source))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.SignedBy == input.SignedBy ||
                    (this.SignedBy != null &&
                    this.SignedBy.Equals(input.SignedBy))
                ) && 
                (
                    this.ShippingInstruction == input.ShippingInstruction ||
                    (this.ShippingInstruction != null &&
                    this.ShippingInstruction.Equals(input.ShippingInstruction))
                ) && 
                (
                    this.PackingInstruction == input.PackingInstruction ||
                    (this.PackingInstruction != null &&
                    this.PackingInstruction.Equals(input.PackingInstruction))
                ) && 
                (
                    this.Shipper == input.Shipper ||
                    (this.Shipper != null &&
                    this.Shipper.Equals(input.Shipper))
                ) && 
                (
                    this.ShippingMethod == input.ShippingMethod ||
                    (this.ShippingMethod != null &&
                    this.ShippingMethod.Equals(input.ShippingMethod))
                ) && 
                (
                    this.InternalComment == input.InternalComment ||
                    (this.InternalComment != null &&
                    this.InternalComment.Equals(input.InternalComment))
                ) && 
                (
                    this.TotalLineComment == input.TotalLineComment ||
                    (this.TotalLineComment != null &&
                    this.TotalLineComment.Equals(input.TotalLineComment))
                ) && 
                (
                    this.StagingLocation == input.StagingLocation ||
                    (this.StagingLocation != null &&
                    this.StagingLocation.Equals(input.StagingLocation))
                ) && 
                (
                    this.CustomerPurchaseOrder == input.CustomerPurchaseOrder ||
                    (this.CustomerPurchaseOrder != null &&
                    this.CustomerPurchaseOrder.Equals(input.CustomerPurchaseOrder))
                ) && 
                (
                    this.SalesTaxCode == input.SalesTaxCode ||
                    (this.SalesTaxCode != null &&
                    this.SalesTaxCode.Equals(input.SalesTaxCode))
                ) && 
                (
                    this.PaymentMethod == input.PaymentMethod ||
                    (this.PaymentMethod != null &&
                    this.PaymentMethod.Equals(input.PaymentMethod))
                ) && 
                (
                    this.BillingComment == input.BillingComment ||
                    (this.BillingComment != null &&
                    this.BillingComment.Equals(input.BillingComment))
                ) && 
                (
                    this.TrackingNumber == input.TrackingNumber ||
                    (this.TrackingNumber != null &&
                    this.TrackingNumber.Equals(input.TrackingNumber))
                ) && 
                (
                    this.LeaseBuyOut == input.LeaseBuyOut ||
                    (this.LeaseBuyOut != null &&
                    this.LeaseBuyOut.Equals(input.LeaseBuyOut))
                ) && 
                (
                    this.ProgressiveInvoiceTotalComment == input.ProgressiveInvoiceTotalComment ||
                    (this.ProgressiveInvoiceTotalComment != null &&
                    this.ProgressiveInvoiceTotalComment.Equals(input.ProgressiveInvoiceTotalComment))
                ) && 
                (
                    this.ARCustomerNumber == input.ARCustomerNumber ||
                    (this.ARCustomerNumber != null &&
                    this.ARCustomerNumber.Equals(input.ARCustomerNumber))
                ) && 
                (
                    this.StagingBin == input.StagingBin ||
                    (this.StagingBin != null &&
                    this.StagingBin.Equals(input.StagingBin))
                ) && 
                (
                    this.RateCardName == input.RateCardName ||
                    (this.RateCardName != null &&
                    this.RateCardName.Equals(input.RateCardName))
                ) && 
                (
                    this.MaintenanceType == input.MaintenanceType ||
                    (this.MaintenanceType != null &&
                    this.MaintenanceType.Equals(input.MaintenanceType))
                ) && 
                (
                    this.MaintenanceAmount == input.MaintenanceAmount ||
                    (this.MaintenanceAmount != null &&
                    this.MaintenanceAmount.Equals(input.MaintenanceAmount))
                ) && 
                (
                    this.QuoteDate == input.QuoteDate ||
                    (this.QuoteDate != null &&
                    this.QuoteDate.Equals(input.QuoteDate))
                ) && 
                (
                    this.ExpirationDate == input.ExpirationDate ||
                    (this.ExpirationDate != null &&
                    this.ExpirationDate.Equals(input.ExpirationDate))
                ) && 
                (
                    this.StatusDate == input.StatusDate ||
                    (this.StatusDate != null &&
                    this.StatusDate.Equals(input.StatusDate))
                ) && 
                (
                    this.SignedDate == input.SignedDate ||
                    (this.SignedDate != null &&
                    this.SignedDate.Equals(input.SignedDate))
                ) && 
                (
                    this.ShipDate == input.ShipDate ||
                    (this.ShipDate != null &&
                    this.ShipDate.Equals(input.ShipDate))
                ) && 
                (
                    this.LastEditDate == input.LastEditDate ||
                    (this.LastEditDate != null &&
                    this.LastEditDate.Equals(input.LastEditDate))
                ) && 
                (
                    this.ApprovedDate == input.ApprovedDate ||
                    (this.ApprovedDate != null &&
                    this.ApprovedDate.Equals(input.ApprovedDate))
                ) && 
                (
                    this.InvoiceDate == input.InvoiceDate ||
                    (this.InvoiceDate != null &&
                    this.InvoiceDate.Equals(input.InvoiceDate))
                ) && 
                (
                    this.CloseDate == input.CloseDate ||
                    (this.CloseDate != null &&
                    this.CloseDate.Equals(input.CloseDate))
                ) && 
                (
                    this.EstimatedCloseDate == input.EstimatedCloseDate ||
                    (this.EstimatedCloseDate != null &&
                    this.EstimatedCloseDate.Equals(input.EstimatedCloseDate))
                ) && 
                (
                    this.ServiceOrderDate == input.ServiceOrderDate ||
                    (this.ServiceOrderDate != null &&
                    this.ServiceOrderDate.Equals(input.ServiceOrderDate))
                ) && 
                (
                    this.PostedDate == input.PostedDate ||
                    (this.PostedDate != null &&
                    this.PostedDate.Equals(input.PostedDate))
                ) && 
                (
                    this.PaidInFullDate == input.PaidInFullDate ||
                    (this.PaidInFullDate != null &&
                    this.PaidInFullDate.Equals(input.PaidInFullDate))
                ) && 
                (
                    this.InstallDate == input.InstallDate ||
                    (this.InstallDate != null &&
                    this.InstallDate.Equals(input.InstallDate))
                ) && 
                (
                    this.DateToInstall == input.DateToInstall ||
                    (this.DateToInstall != null &&
                    this.DateToInstall.Equals(input.DateToInstall))
                ) && 
                (
                    this.NextDate == input.NextDate ||
                    (this.NextDate != null &&
                    this.NextDate.Equals(input.NextDate))
                ) && 
                (
                    this.ShipTo == input.ShipTo ||
                    (this.ShipTo != null &&
                    this.ShipTo.Equals(input.ShipTo))
                ) && 
                (
                    this.BillTo == input.BillTo ||
                    (this.BillTo != null &&
                    this.BillTo.Equals(input.BillTo))
                ) && 
                (
                    this.WorkOrderNumber == input.WorkOrderNumber ||
                    (this.WorkOrderNumber != null &&
                    this.WorkOrderNumber.Equals(input.WorkOrderNumber))
                ) && 
                (
                    this.WorkOrderClosed == input.WorkOrderClosed ||
                    (this.WorkOrderClosed != null &&
                    this.WorkOrderClosed.Equals(input.WorkOrderClosed))
                ) && 
                (
                    this.WorkOrderDate == input.WorkOrderDate ||
                    (this.WorkOrderDate != null &&
                    this.WorkOrderDate.Equals(input.WorkOrderDate))
                ) && 
                (
                    this.WorkOrderStatus == input.WorkOrderStatus ||
                    (this.WorkOrderStatus != null &&
                    this.WorkOrderStatus.Equals(input.WorkOrderStatus))
                ) && 
                (
                    this.ShowInForecasts == input.ShowInForecasts ||
                    (this.ShowInForecasts != null &&
                    this.ShowInForecasts.Equals(input.ShowInForecasts))
                ) && 
                (
                    this.DisplayOnPortal == input.DisplayOnPortal ||
                    (this.DisplayOnPortal != null &&
                    this.DisplayOnPortal.Equals(input.DisplayOnPortal))
                ) && 
                (
                    this.Approved == input.Approved ||
                    (this.Approved != null &&
                    this.Approved.Equals(input.Approved))
                ) && 
                (
                    this.ApprovedForInvoicing == input.ApprovedForInvoicing ||
                    (this.ApprovedForInvoicing != null &&
                    this.ApprovedForInvoicing.Equals(input.ApprovedForInvoicing))
                ) && 
                (
                    this.PrintLeaseInfo == input.PrintLeaseInfo ||
                    (this.PrintLeaseInfo != null &&
                    this.PrintLeaseInfo.Equals(input.PrintLeaseInfo))
                ) && 
                (
                    this.CompletelyServiceOrdered == input.CompletelyServiceOrdered ||
                    (this.CompletelyServiceOrdered != null &&
                    this.CompletelyServiceOrdered.Equals(input.CompletelyServiceOrdered))
                ) && 
                (
                    this.CanDiscountedItemsGetQuoteDiscount == input.CanDiscountedItemsGetQuoteDiscount ||
                    (this.CanDiscountedItemsGetQuoteDiscount != null &&
                    this.CanDiscountedItemsGetQuoteDiscount.Equals(input.CanDiscountedItemsGetQuoteDiscount))
                ) && 
                (
                    this.PaymentFromGreatAmerica == input.PaymentFromGreatAmerica ||
                    (this.PaymentFromGreatAmerica != null &&
                    this.PaymentFromGreatAmerica.Equals(input.PaymentFromGreatAmerica))
                ) && 
                (
                    this.ChangesMadeAfterPaymentFromGreatAmerica == input.ChangesMadeAfterPaymentFromGreatAmerica ||
                    (this.ChangesMadeAfterPaymentFromGreatAmerica != null &&
                    this.ChangesMadeAfterPaymentFromGreatAmerica.Equals(input.ChangesMadeAfterPaymentFromGreatAmerica))
                ) && 
                (
                    this.IsChangeOrder == input.IsChangeOrder ||
                    (this.IsChangeOrder != null &&
                    this.IsChangeOrder.Equals(input.IsChangeOrder))
                ) && 
                (
                    this.FreightTaxable == input.FreightTaxable ||
                    (this.FreightTaxable != null &&
                    this.FreightTaxable.Equals(input.FreightTaxable))
                ) && 
                (
                    this.TaxLabor == input.TaxLabor ||
                    (this.TaxLabor != null &&
                    this.TaxLabor.Equals(input.TaxLabor))
                ) && 
                (
                    this.GSTExempt == input.GSTExempt ||
                    (this.GSTExempt != null &&
                    this.GSTExempt.Equals(input.GSTExempt))
                ) && 
                (
                    this.Taxable == input.Taxable ||
                    (this.Taxable != null &&
                    this.Taxable.Equals(input.Taxable))
                ) && 
                (
                    this.TaxComputedBeforeTradeIn == input.TaxComputedBeforeTradeIn ||
                    (this.TaxComputedBeforeTradeIn != null &&
                    this.TaxComputedBeforeTradeIn.Equals(input.TaxComputedBeforeTradeIn))
                ) && 
                (
                    this.GSTaxComputedBeforeTradeIn == input.GSTaxComputedBeforeTradeIn ||
                    (this.GSTaxComputedBeforeTradeIn != null &&
                    this.GSTaxComputedBeforeTradeIn.Equals(input.GSTaxComputedBeforeTradeIn))
                ) && 
                (
                    this.GSTIsTaxable == input.GSTIsTaxable ||
                    (this.GSTIsTaxable != null &&
                    this.GSTIsTaxable.Equals(input.GSTIsTaxable))
                ) && 
                (
                    this.DiscountAmount == input.DiscountAmount ||
                    (this.DiscountAmount != null &&
                    this.DiscountAmount.Equals(input.DiscountAmount))
                ) && 
                (
                    this.DiscountSellForPrice == input.DiscountSellForPrice ||
                    (this.DiscountSellForPrice != null &&
                    this.DiscountSellForPrice.Equals(input.DiscountSellForPrice))
                ) && 
                (
                    this.Freight == input.Freight ||
                    (this.Freight != null &&
                    this.Freight.Equals(input.Freight))
                ) && 
                (
                    this.TradeIn == input.TradeIn ||
                    (this.TradeIn != null &&
                    this.TradeIn.Equals(input.TradeIn))
                ) && 
                (
                    this.Credit == input.Credit ||
                    (this.Credit != null &&
                    this.Credit.Equals(input.Credit))
                ) && 
                (
                    this.Deposit == input.Deposit ||
                    (this.Deposit != null &&
                    this.Deposit.Equals(input.Deposit))
                ) && 
                (
                    this.LeaseDown == input.LeaseDown ||
                    (this.LeaseDown != null &&
                    this.LeaseDown.Equals(input.LeaseDown))
                ) && 
                (
                    this.LeasePayment == input.LeasePayment ||
                    (this.LeasePayment != null &&
                    this.LeasePayment.Equals(input.LeasePayment))
                ) && 
                (
                    this.CashOnDelivery == input.CashOnDelivery ||
                    (this.CashOnDelivery != null &&
                    this.CashOnDelivery.Equals(input.CashOnDelivery))
                ) && 
                (
                    this.ManufacturerListPrice == input.ManufacturerListPrice ||
                    (this.ManufacturerListPrice != null &&
                    this.ManufacturerListPrice.Equals(input.ManufacturerListPrice))
                ) && 
                (
                    this.BookPrice == input.BookPrice ||
                    (this.BookPrice != null &&
                    this.BookPrice.Equals(input.BookPrice))
                ) && 
                (
                    this.NetSell == input.NetSell ||
                    (this.NetSell != null &&
                    this.NetSell.Equals(input.NetSell))
                ) && 
                (
                    this.GrossSell == input.GrossSell ||
                    (this.GrossSell != null &&
                    this.GrossSell.Equals(input.GrossSell))
                ) && 
                (
                    this.DollarsDiscounted == input.DollarsDiscounted ||
                    (this.DollarsDiscounted != null &&
                    this.DollarsDiscounted.Equals(input.DollarsDiscounted))
                ) && 
                (
                    this.NetInvoice == input.NetInvoice ||
                    (this.NetInvoice != null &&
                    this.NetInvoice.Equals(input.NetInvoice))
                ) && 
                (
                    this.LaborNet == input.LaborNet ||
                    (this.LaborNet != null &&
                    this.LaborNet.Equals(input.LaborNet))
                ) && 
                (
                    this.MaterialNet == input.MaterialNet ||
                    (this.MaterialNet != null &&
                    this.MaterialNet.Equals(input.MaterialNet))
                ) && 
                (
                    this.TaxableAmount == input.TaxableAmount ||
                    (this.TaxableAmount != null &&
                    this.TaxableAmount.Equals(input.TaxableAmount))
                ) && 
                (
                    this.Tax == input.Tax ||
                    (this.Tax != null &&
                    this.Tax.Equals(input.Tax))
                ) && 
                (
                    this.GSTaxableAmount == input.GSTaxableAmount ||
                    (this.GSTaxableAmount != null &&
                    this.GSTaxableAmount.Equals(input.GSTaxableAmount))
                ) && 
                (
                    this.GSTax == input.GSTax ||
                    (this.GSTax != null &&
                    this.GSTax.Equals(input.GSTax))
                ) && 
                (
                    this.AmountDue == input.AmountDue ||
                    (this.AmountDue != null &&
                    this.AmountDue.Equals(input.AmountDue))
                ) && 
                (
                    this.Cost == input.Cost ||
                    (this.Cost != null &&
                    this.Cost.Equals(input.Cost))
                ) && 
                (
                    this.MaterialCost == input.MaterialCost ||
                    (this.MaterialCost != null &&
                    this.MaterialCost.Equals(input.MaterialCost))
                ) && 
                (
                    this.LaborCost == input.LaborCost ||
                    (this.LaborCost != null &&
                    this.LaborCost.Equals(input.LaborCost))
                ) && 
                (
                    this.Profit == input.Profit ||
                    (this.Profit != null &&
                    this.Profit.Equals(input.Profit))
                ) && 
                (
                    this.ProviderTaxableAmount == input.ProviderTaxableAmount ||
                    (this.ProviderTaxableAmount != null &&
                    this.ProviderTaxableAmount.Equals(input.ProviderTaxableAmount))
                ) && 
                (
                    this.ProviderTax == input.ProviderTax ||
                    (this.ProviderTax != null &&
                    this.ProviderTax.Equals(input.ProviderTax))
                ) && 
                (
                    this.PercentDiscounted == input.PercentDiscounted ||
                    (this.PercentDiscounted != null &&
                    this.PercentDiscounted.Equals(input.PercentDiscounted))
                ) && 
                (
                    this.Margin == input.Margin ||
                    (this.Margin != null &&
                    this.Margin.Equals(input.Margin))
                ) && 
                (
                    this.SalesTaxRate == input.SalesTaxRate ||
                    (this.SalesTaxRate != null &&
                    this.SalesTaxRate.Equals(input.SalesTaxRate))
                ) && 
                (
                    this.PercentagePoints == input.PercentagePoints ||
                    (this.PercentagePoints != null &&
                    this.PercentagePoints.Equals(input.PercentagePoints))
                ) && 
                (
                    this.HoursNeeded == input.HoursNeeded ||
                    (this.HoursNeeded != null &&
                    this.HoursNeeded.Equals(input.HoursNeeded))
                ) && 
                (
                    this.HoursEntered == input.HoursEntered ||
                    (this.HoursEntered != null &&
                    this.HoursEntered.Equals(input.HoursEntered))
                ) && 
                (
                    this.DiscountPercent == input.DiscountPercent ||
                    (this.DiscountPercent != null &&
                    this.DiscountPercent.Equals(input.DiscountPercent))
                ) && 
                (
                    this.LeaseRate == input.LeaseRate ||
                    (this.LeaseRate != null &&
                    this.LeaseRate.Equals(input.LeaseRate))
                ) && 
                (
                    this.DiscountMarginPercent == input.DiscountMarginPercent ||
                    (this.DiscountMarginPercent != null &&
                    this.DiscountMarginPercent.Equals(input.DiscountMarginPercent))
                ) && 
                (
                    this.ProviderTaxRate == input.ProviderTaxRate ||
                    (this.ProviderTaxRate != null &&
                    this.ProviderTaxRate.Equals(input.ProviderTaxRate))
                ) && 
                (
                    this.GSTaxRate == input.GSTaxRate ||
                    (this.GSTaxRate != null &&
                    this.GSTaxRate.Equals(input.GSTaxRate))
                ) && 
                (
                    this.LeaseIsTaxIncluded == input.LeaseIsTaxIncluded ||
                    (this.LeaseIsTaxIncluded != null &&
                    this.LeaseIsTaxIncluded.Equals(input.LeaseIsTaxIncluded))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.ContactNumber != null)
                    hashCode = hashCode * 59 + this.ContactNumber.GetHashCode();
                if (this.RepNumber != null)
                    hashCode = hashCode * 59 + this.RepNumber.GetHashCode();
                if (this.LastEditedByRepNumber != null)
                    hashCode = hashCode * 59 + this.LastEditedByRepNumber.GetHashCode();
                if (this.OpportunityNumber != null)
                    hashCode = hashCode * 59 + this.OpportunityNumber.GetHashCode();
                if (this.ProjectNumber != null)
                    hashCode = hashCode * 59 + this.ProjectNumber.GetHashCode();
                if (this.ProjectPhaseNumber != null)
                    hashCode = hashCode * 59 + this.ProjectPhaseNumber.GetHashCode();
                if (this.ApprovedByRepNumber != null)
                    hashCode = hashCode * 59 + this.ApprovedByRepNumber.GetHashCode();
                if (this.ChangeOrderNumber != null)
                    hashCode = hashCode * 59 + this.ChangeOrderNumber.GetHashCode();
                if (this.InvoiceNumber != null)
                    hashCode = hashCode * 59 + this.InvoiceNumber.GetHashCode();
                if (this.PriceLevel != null)
                    hashCode = hashCode * 59 + this.PriceLevel.GetHashCode();
                if (this.LeaseMonths != null)
                    hashCode = hashCode * 59 + this.LeaseMonths.GetHashCode();
                if (this.PayMethodId != null)
                    hashCode = hashCode * 59 + this.PayMethodId.GetHashCode();
                if (this.VoidedBy != null)
                    hashCode = hashCode * 59 + this.VoidedBy.GetHashCode();
                if (this.InternalExternalChangeOrder != null)
                    hashCode = hashCode * 59 + this.InternalExternalChangeOrder.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.AlternateContactPhoneNumber != null)
                    hashCode = hashCode * 59 + this.AlternateContactPhoneNumber.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.Job != null)
                    hashCode = hashCode * 59 + this.Job.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.Terms != null)
                    hashCode = hashCode * 59 + this.Terms.GetHashCode();
                if (this.Source != null)
                    hashCode = hashCode * 59 + this.Source.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.SignedBy != null)
                    hashCode = hashCode * 59 + this.SignedBy.GetHashCode();
                if (this.ShippingInstruction != null)
                    hashCode = hashCode * 59 + this.ShippingInstruction.GetHashCode();
                if (this.PackingInstruction != null)
                    hashCode = hashCode * 59 + this.PackingInstruction.GetHashCode();
                if (this.Shipper != null)
                    hashCode = hashCode * 59 + this.Shipper.GetHashCode();
                if (this.ShippingMethod != null)
                    hashCode = hashCode * 59 + this.ShippingMethod.GetHashCode();
                if (this.InternalComment != null)
                    hashCode = hashCode * 59 + this.InternalComment.GetHashCode();
                if (this.TotalLineComment != null)
                    hashCode = hashCode * 59 + this.TotalLineComment.GetHashCode();
                if (this.StagingLocation != null)
                    hashCode = hashCode * 59 + this.StagingLocation.GetHashCode();
                if (this.CustomerPurchaseOrder != null)
                    hashCode = hashCode * 59 + this.CustomerPurchaseOrder.GetHashCode();
                if (this.SalesTaxCode != null)
                    hashCode = hashCode * 59 + this.SalesTaxCode.GetHashCode();
                if (this.PaymentMethod != null)
                    hashCode = hashCode * 59 + this.PaymentMethod.GetHashCode();
                if (this.BillingComment != null)
                    hashCode = hashCode * 59 + this.BillingComment.GetHashCode();
                if (this.TrackingNumber != null)
                    hashCode = hashCode * 59 + this.TrackingNumber.GetHashCode();
                if (this.LeaseBuyOut != null)
                    hashCode = hashCode * 59 + this.LeaseBuyOut.GetHashCode();
                if (this.ProgressiveInvoiceTotalComment != null)
                    hashCode = hashCode * 59 + this.ProgressiveInvoiceTotalComment.GetHashCode();
                if (this.ARCustomerNumber != null)
                    hashCode = hashCode * 59 + this.ARCustomerNumber.GetHashCode();
                if (this.StagingBin != null)
                    hashCode = hashCode * 59 + this.StagingBin.GetHashCode();
                if (this.RateCardName != null)
                    hashCode = hashCode * 59 + this.RateCardName.GetHashCode();
                if (this.MaintenanceType != null)
                    hashCode = hashCode * 59 + this.MaintenanceType.GetHashCode();
                if (this.MaintenanceAmount != null)
                    hashCode = hashCode * 59 + this.MaintenanceAmount.GetHashCode();
                if (this.QuoteDate != null)
                    hashCode = hashCode * 59 + this.QuoteDate.GetHashCode();
                if (this.ExpirationDate != null)
                    hashCode = hashCode * 59 + this.ExpirationDate.GetHashCode();
                if (this.StatusDate != null)
                    hashCode = hashCode * 59 + this.StatusDate.GetHashCode();
                if (this.SignedDate != null)
                    hashCode = hashCode * 59 + this.SignedDate.GetHashCode();
                if (this.ShipDate != null)
                    hashCode = hashCode * 59 + this.ShipDate.GetHashCode();
                if (this.LastEditDate != null)
                    hashCode = hashCode * 59 + this.LastEditDate.GetHashCode();
                if (this.ApprovedDate != null)
                    hashCode = hashCode * 59 + this.ApprovedDate.GetHashCode();
                if (this.InvoiceDate != null)
                    hashCode = hashCode * 59 + this.InvoiceDate.GetHashCode();
                if (this.CloseDate != null)
                    hashCode = hashCode * 59 + this.CloseDate.GetHashCode();
                if (this.EstimatedCloseDate != null)
                    hashCode = hashCode * 59 + this.EstimatedCloseDate.GetHashCode();
                if (this.ServiceOrderDate != null)
                    hashCode = hashCode * 59 + this.ServiceOrderDate.GetHashCode();
                if (this.PostedDate != null)
                    hashCode = hashCode * 59 + this.PostedDate.GetHashCode();
                if (this.PaidInFullDate != null)
                    hashCode = hashCode * 59 + this.PaidInFullDate.GetHashCode();
                if (this.InstallDate != null)
                    hashCode = hashCode * 59 + this.InstallDate.GetHashCode();
                if (this.DateToInstall != null)
                    hashCode = hashCode * 59 + this.DateToInstall.GetHashCode();
                if (this.NextDate != null)
                    hashCode = hashCode * 59 + this.NextDate.GetHashCode();
                if (this.ShipTo != null)
                    hashCode = hashCode * 59 + this.ShipTo.GetHashCode();
                if (this.BillTo != null)
                    hashCode = hashCode * 59 + this.BillTo.GetHashCode();
                if (this.WorkOrderNumber != null)
                    hashCode = hashCode * 59 + this.WorkOrderNumber.GetHashCode();
                if (this.WorkOrderClosed != null)
                    hashCode = hashCode * 59 + this.WorkOrderClosed.GetHashCode();
                if (this.WorkOrderDate != null)
                    hashCode = hashCode * 59 + this.WorkOrderDate.GetHashCode();
                if (this.WorkOrderStatus != null)
                    hashCode = hashCode * 59 + this.WorkOrderStatus.GetHashCode();
                if (this.ShowInForecasts != null)
                    hashCode = hashCode * 59 + this.ShowInForecasts.GetHashCode();
                if (this.DisplayOnPortal != null)
                    hashCode = hashCode * 59 + this.DisplayOnPortal.GetHashCode();
                if (this.Approved != null)
                    hashCode = hashCode * 59 + this.Approved.GetHashCode();
                if (this.ApprovedForInvoicing != null)
                    hashCode = hashCode * 59 + this.ApprovedForInvoicing.GetHashCode();
                if (this.PrintLeaseInfo != null)
                    hashCode = hashCode * 59 + this.PrintLeaseInfo.GetHashCode();
                if (this.CompletelyServiceOrdered != null)
                    hashCode = hashCode * 59 + this.CompletelyServiceOrdered.GetHashCode();
                if (this.CanDiscountedItemsGetQuoteDiscount != null)
                    hashCode = hashCode * 59 + this.CanDiscountedItemsGetQuoteDiscount.GetHashCode();
                if (this.PaymentFromGreatAmerica != null)
                    hashCode = hashCode * 59 + this.PaymentFromGreatAmerica.GetHashCode();
                if (this.ChangesMadeAfterPaymentFromGreatAmerica != null)
                    hashCode = hashCode * 59 + this.ChangesMadeAfterPaymentFromGreatAmerica.GetHashCode();
                if (this.IsChangeOrder != null)
                    hashCode = hashCode * 59 + this.IsChangeOrder.GetHashCode();
                if (this.FreightTaxable != null)
                    hashCode = hashCode * 59 + this.FreightTaxable.GetHashCode();
                if (this.TaxLabor != null)
                    hashCode = hashCode * 59 + this.TaxLabor.GetHashCode();
                if (this.GSTExempt != null)
                    hashCode = hashCode * 59 + this.GSTExempt.GetHashCode();
                if (this.Taxable != null)
                    hashCode = hashCode * 59 + this.Taxable.GetHashCode();
                if (this.TaxComputedBeforeTradeIn != null)
                    hashCode = hashCode * 59 + this.TaxComputedBeforeTradeIn.GetHashCode();
                if (this.GSTaxComputedBeforeTradeIn != null)
                    hashCode = hashCode * 59 + this.GSTaxComputedBeforeTradeIn.GetHashCode();
                if (this.GSTIsTaxable != null)
                    hashCode = hashCode * 59 + this.GSTIsTaxable.GetHashCode();
                if (this.DiscountAmount != null)
                    hashCode = hashCode * 59 + this.DiscountAmount.GetHashCode();
                if (this.DiscountSellForPrice != null)
                    hashCode = hashCode * 59 + this.DiscountSellForPrice.GetHashCode();
                if (this.Freight != null)
                    hashCode = hashCode * 59 + this.Freight.GetHashCode();
                if (this.TradeIn != null)
                    hashCode = hashCode * 59 + this.TradeIn.GetHashCode();
                if (this.Credit != null)
                    hashCode = hashCode * 59 + this.Credit.GetHashCode();
                if (this.Deposit != null)
                    hashCode = hashCode * 59 + this.Deposit.GetHashCode();
                if (this.LeaseDown != null)
                    hashCode = hashCode * 59 + this.LeaseDown.GetHashCode();
                if (this.LeasePayment != null)
                    hashCode = hashCode * 59 + this.LeasePayment.GetHashCode();
                if (this.CashOnDelivery != null)
                    hashCode = hashCode * 59 + this.CashOnDelivery.GetHashCode();
                if (this.ManufacturerListPrice != null)
                    hashCode = hashCode * 59 + this.ManufacturerListPrice.GetHashCode();
                if (this.BookPrice != null)
                    hashCode = hashCode * 59 + this.BookPrice.GetHashCode();
                if (this.NetSell != null)
                    hashCode = hashCode * 59 + this.NetSell.GetHashCode();
                if (this.GrossSell != null)
                    hashCode = hashCode * 59 + this.GrossSell.GetHashCode();
                if (this.DollarsDiscounted != null)
                    hashCode = hashCode * 59 + this.DollarsDiscounted.GetHashCode();
                if (this.NetInvoice != null)
                    hashCode = hashCode * 59 + this.NetInvoice.GetHashCode();
                if (this.LaborNet != null)
                    hashCode = hashCode * 59 + this.LaborNet.GetHashCode();
                if (this.MaterialNet != null)
                    hashCode = hashCode * 59 + this.MaterialNet.GetHashCode();
                if (this.TaxableAmount != null)
                    hashCode = hashCode * 59 + this.TaxableAmount.GetHashCode();
                if (this.Tax != null)
                    hashCode = hashCode * 59 + this.Tax.GetHashCode();
                if (this.GSTaxableAmount != null)
                    hashCode = hashCode * 59 + this.GSTaxableAmount.GetHashCode();
                if (this.GSTax != null)
                    hashCode = hashCode * 59 + this.GSTax.GetHashCode();
                if (this.AmountDue != null)
                    hashCode = hashCode * 59 + this.AmountDue.GetHashCode();
                if (this.Cost != null)
                    hashCode = hashCode * 59 + this.Cost.GetHashCode();
                if (this.MaterialCost != null)
                    hashCode = hashCode * 59 + this.MaterialCost.GetHashCode();
                if (this.LaborCost != null)
                    hashCode = hashCode * 59 + this.LaborCost.GetHashCode();
                if (this.Profit != null)
                    hashCode = hashCode * 59 + this.Profit.GetHashCode();
                if (this.ProviderTaxableAmount != null)
                    hashCode = hashCode * 59 + this.ProviderTaxableAmount.GetHashCode();
                if (this.ProviderTax != null)
                    hashCode = hashCode * 59 + this.ProviderTax.GetHashCode();
                if (this.PercentDiscounted != null)
                    hashCode = hashCode * 59 + this.PercentDiscounted.GetHashCode();
                if (this.Margin != null)
                    hashCode = hashCode * 59 + this.Margin.GetHashCode();
                if (this.SalesTaxRate != null)
                    hashCode = hashCode * 59 + this.SalesTaxRate.GetHashCode();
                if (this.PercentagePoints != null)
                    hashCode = hashCode * 59 + this.PercentagePoints.GetHashCode();
                if (this.HoursNeeded != null)
                    hashCode = hashCode * 59 + this.HoursNeeded.GetHashCode();
                if (this.HoursEntered != null)
                    hashCode = hashCode * 59 + this.HoursEntered.GetHashCode();
                if (this.DiscountPercent != null)
                    hashCode = hashCode * 59 + this.DiscountPercent.GetHashCode();
                if (this.LeaseRate != null)
                    hashCode = hashCode * 59 + this.LeaseRate.GetHashCode();
                if (this.DiscountMarginPercent != null)
                    hashCode = hashCode * 59 + this.DiscountMarginPercent.GetHashCode();
                if (this.ProviderTaxRate != null)
                    hashCode = hashCode * 59 + this.ProviderTaxRate.GetHashCode();
                if (this.GSTaxRate != null)
                    hashCode = hashCode * 59 + this.GSTaxRate.GetHashCode();
                if (this.LeaseIsTaxIncluded != null)
                    hashCode = hashCode * 59 + this.LeaseIsTaxIncluded.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
