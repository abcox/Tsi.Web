/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebQuoteSummary
    /// </summary>
    [DataContract]
    public partial class TsiWebQuoteSummary :  IEquatable<TsiWebQuoteSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebQuoteSummary" /> class.
        /// </summary>
        /// <param name="quoteNumber">quoteNumber.</param>
        /// <param name="quote">quote.</param>
        /// <param name="details">details.</param>
        /// <param name="serviceOrdersCreatedFromQuote">serviceOrdersCreatedFromQuote.</param>
        /// <param name="purchaseOrdersContainingQuoteItems">purchaseOrdersContainingQuoteItems.</param>
        /// <param name="accountName">accountName.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="contactName">contactName.</param>
        /// <param name="contactEmailAddress">contactEmailAddress.</param>
        /// <param name="contactPhoneNumber">contactPhoneNumber.</param>
        /// <param name="ownerName">ownerName.</param>
        /// <param name="ownerEmailAddress">ownerEmailAddress.</param>
        /// <param name="ownerPhoneNumber">ownerPhoneNumber.</param>
        /// <param name="lastEditedRepName">lastEditedRepName.</param>
        /// <param name="approvedRepName">approvedRepName.</param>
        /// <param name="payMethodName">payMethodName.</param>
        /// <param name="priceLevelDescription">priceLevelDescription.</param>
        /// <param name="specialInstructions">specialInstructions.</param>
        /// <param name="creditHoldInstructions">creditHoldInstructions.</param>
        /// <param name="opportunityName">opportunityName.</param>
        /// <param name="projectDescription">projectDescription.</param>
        /// <param name="projectPhase">projectPhase.</param>
        /// <param name="hasProjectBeenInvoiced">hasProjectBeenInvoiced.</param>
        /// <param name="isLocked">isLocked.</param>
        /// <param name="changeOrderDescription">changeOrderDescription.</param>
        /// <param name="changeOrderDateCreated">changeOrderDateCreated.</param>
        public TsiWebQuoteSummary(int? quoteNumber = default(int?), TsiWebQuote quote = default(TsiWebQuote), int? details = default(int?), int? serviceOrdersCreatedFromQuote = default(int?), int? purchaseOrdersContainingQuoteItems = default(int?), string accountName = default(string), string phoneNumber = default(string), string faxNumber = default(string), string contactName = default(string), string contactEmailAddress = default(string), string contactPhoneNumber = default(string), string ownerName = default(string), string ownerEmailAddress = default(string), string ownerPhoneNumber = default(string), string lastEditedRepName = default(string), string approvedRepName = default(string), string payMethodName = default(string), string priceLevelDescription = default(string), string specialInstructions = default(string), string creditHoldInstructions = default(string), string opportunityName = default(string), string projectDescription = default(string), string projectPhase = default(string), bool? hasProjectBeenInvoiced = default(bool?), bool? isLocked = default(bool?), string changeOrderDescription = default(string), DateTime? changeOrderDateCreated = default(DateTime?))
        {
            this.QuoteNumber = quoteNumber;
            this.Quote = quote;
            this.Details = details;
            this.ServiceOrdersCreatedFromQuote = serviceOrdersCreatedFromQuote;
            this.PurchaseOrdersContainingQuoteItems = purchaseOrdersContainingQuoteItems;
            this.AccountName = accountName;
            this.PhoneNumber = phoneNumber;
            this.FaxNumber = faxNumber;
            this.ContactName = contactName;
            this.ContactEmailAddress = contactEmailAddress;
            this.ContactPhoneNumber = contactPhoneNumber;
            this.OwnerName = ownerName;
            this.OwnerEmailAddress = ownerEmailAddress;
            this.OwnerPhoneNumber = ownerPhoneNumber;
            this.LastEditedRepName = lastEditedRepName;
            this.ApprovedRepName = approvedRepName;
            this.PayMethodName = payMethodName;
            this.PriceLevelDescription = priceLevelDescription;
            this.SpecialInstructions = specialInstructions;
            this.CreditHoldInstructions = creditHoldInstructions;
            this.OpportunityName = opportunityName;
            this.ProjectDescription = projectDescription;
            this.ProjectPhase = projectPhase;
            this.HasProjectBeenInvoiced = hasProjectBeenInvoiced;
            this.IsLocked = isLocked;
            this.ChangeOrderDescription = changeOrderDescription;
            this.ChangeOrderDateCreated = changeOrderDateCreated;
        }
        
        /// <summary>
        /// Gets or Sets QuoteNumber
        /// </summary>
        [DataMember(Name="QuoteNumber", EmitDefaultValue=false)]
        public int? QuoteNumber { get; set; }

        /// <summary>
        /// Gets or Sets Quote
        /// </summary>
        [DataMember(Name="Quote", EmitDefaultValue=false)]
        public TsiWebQuote Quote { get; set; }

        /// <summary>
        /// Gets or Sets Details
        /// </summary>
        [DataMember(Name="Details", EmitDefaultValue=false)]
        public int? Details { get; set; }

        /// <summary>
        /// Gets or Sets ServiceOrdersCreatedFromQuote
        /// </summary>
        [DataMember(Name="ServiceOrdersCreatedFromQuote", EmitDefaultValue=false)]
        public int? ServiceOrdersCreatedFromQuote { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrdersContainingQuoteItems
        /// </summary>
        [DataMember(Name="PurchaseOrdersContainingQuoteItems", EmitDefaultValue=false)]
        public int? PurchaseOrdersContainingQuoteItems { get; set; }

        /// <summary>
        /// Gets or Sets AccountName
        /// </summary>
        [DataMember(Name="AccountName", EmitDefaultValue=false)]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="PhoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="FaxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactName
        /// </summary>
        [DataMember(Name="ContactName", EmitDefaultValue=false)]
        public string ContactName { get; set; }

        /// <summary>
        /// Gets or Sets ContactEmailAddress
        /// </summary>
        [DataMember(Name="ContactEmailAddress", EmitDefaultValue=false)]
        public string ContactEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets ContactPhoneNumber
        /// </summary>
        [DataMember(Name="ContactPhoneNumber", EmitDefaultValue=false)]
        public string ContactPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets OwnerName
        /// </summary>
        [DataMember(Name="OwnerName", EmitDefaultValue=false)]
        public string OwnerName { get; set; }

        /// <summary>
        /// Gets or Sets OwnerEmailAddress
        /// </summary>
        [DataMember(Name="OwnerEmailAddress", EmitDefaultValue=false)]
        public string OwnerEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets OwnerPhoneNumber
        /// </summary>
        [DataMember(Name="OwnerPhoneNumber", EmitDefaultValue=false)]
        public string OwnerPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets LastEditedRepName
        /// </summary>
        [DataMember(Name="LastEditedRepName", EmitDefaultValue=false)]
        public string LastEditedRepName { get; set; }

        /// <summary>
        /// Gets or Sets ApprovedRepName
        /// </summary>
        [DataMember(Name="ApprovedRepName", EmitDefaultValue=false)]
        public string ApprovedRepName { get; set; }

        /// <summary>
        /// Gets or Sets PayMethodName
        /// </summary>
        [DataMember(Name="PayMethodName", EmitDefaultValue=false)]
        public string PayMethodName { get; set; }

        /// <summary>
        /// Gets or Sets PriceLevelDescription
        /// </summary>
        [DataMember(Name="PriceLevelDescription", EmitDefaultValue=false)]
        public string PriceLevelDescription { get; set; }

        /// <summary>
        /// Gets or Sets SpecialInstructions
        /// </summary>
        [DataMember(Name="SpecialInstructions", EmitDefaultValue=false)]
        public string SpecialInstructions { get; set; }

        /// <summary>
        /// Gets or Sets CreditHoldInstructions
        /// </summary>
        [DataMember(Name="CreditHoldInstructions", EmitDefaultValue=false)]
        public string CreditHoldInstructions { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityName
        /// </summary>
        [DataMember(Name="OpportunityName", EmitDefaultValue=false)]
        public string OpportunityName { get; set; }

        /// <summary>
        /// Gets or Sets ProjectDescription
        /// </summary>
        [DataMember(Name="ProjectDescription", EmitDefaultValue=false)]
        public string ProjectDescription { get; set; }

        /// <summary>
        /// Gets or Sets ProjectPhase
        /// </summary>
        [DataMember(Name="ProjectPhase", EmitDefaultValue=false)]
        public string ProjectPhase { get; set; }

        /// <summary>
        /// Gets or Sets HasProjectBeenInvoiced
        /// </summary>
        [DataMember(Name="HasProjectBeenInvoiced", EmitDefaultValue=false)]
        public bool? HasProjectBeenInvoiced { get; set; }

        /// <summary>
        /// Gets or Sets IsLocked
        /// </summary>
        [DataMember(Name="IsLocked", EmitDefaultValue=false)]
        public bool? IsLocked { get; set; }

        /// <summary>
        /// Gets or Sets ChangeOrderDescription
        /// </summary>
        [DataMember(Name="ChangeOrderDescription", EmitDefaultValue=false)]
        public string ChangeOrderDescription { get; set; }

        /// <summary>
        /// Gets or Sets ChangeOrderDateCreated
        /// </summary>
        [DataMember(Name="ChangeOrderDateCreated", EmitDefaultValue=false)]
        public DateTime? ChangeOrderDateCreated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebQuoteSummary {\n");
            sb.Append("  QuoteNumber: ").Append(QuoteNumber).Append("\n");
            sb.Append("  Quote: ").Append(Quote).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  ServiceOrdersCreatedFromQuote: ").Append(ServiceOrdersCreatedFromQuote).Append("\n");
            sb.Append("  PurchaseOrdersContainingQuoteItems: ").Append(PurchaseOrdersContainingQuoteItems).Append("\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  ContactName: ").Append(ContactName).Append("\n");
            sb.Append("  ContactEmailAddress: ").Append(ContactEmailAddress).Append("\n");
            sb.Append("  ContactPhoneNumber: ").Append(ContactPhoneNumber).Append("\n");
            sb.Append("  OwnerName: ").Append(OwnerName).Append("\n");
            sb.Append("  OwnerEmailAddress: ").Append(OwnerEmailAddress).Append("\n");
            sb.Append("  OwnerPhoneNumber: ").Append(OwnerPhoneNumber).Append("\n");
            sb.Append("  LastEditedRepName: ").Append(LastEditedRepName).Append("\n");
            sb.Append("  ApprovedRepName: ").Append(ApprovedRepName).Append("\n");
            sb.Append("  PayMethodName: ").Append(PayMethodName).Append("\n");
            sb.Append("  PriceLevelDescription: ").Append(PriceLevelDescription).Append("\n");
            sb.Append("  SpecialInstructions: ").Append(SpecialInstructions).Append("\n");
            sb.Append("  CreditHoldInstructions: ").Append(CreditHoldInstructions).Append("\n");
            sb.Append("  OpportunityName: ").Append(OpportunityName).Append("\n");
            sb.Append("  ProjectDescription: ").Append(ProjectDescription).Append("\n");
            sb.Append("  ProjectPhase: ").Append(ProjectPhase).Append("\n");
            sb.Append("  HasProjectBeenInvoiced: ").Append(HasProjectBeenInvoiced).Append("\n");
            sb.Append("  IsLocked: ").Append(IsLocked).Append("\n");
            sb.Append("  ChangeOrderDescription: ").Append(ChangeOrderDescription).Append("\n");
            sb.Append("  ChangeOrderDateCreated: ").Append(ChangeOrderDateCreated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebQuoteSummary);
        }

        /// <summary>
        /// Returns true if TsiWebQuoteSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebQuoteSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebQuoteSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.QuoteNumber == input.QuoteNumber ||
                    (this.QuoteNumber != null &&
                    this.QuoteNumber.Equals(input.QuoteNumber))
                ) && 
                (
                    this.Quote == input.Quote ||
                    (this.Quote != null &&
                    this.Quote.Equals(input.Quote))
                ) && 
                (
                    this.Details == input.Details ||
                    (this.Details != null &&
                    this.Details.Equals(input.Details))
                ) && 
                (
                    this.ServiceOrdersCreatedFromQuote == input.ServiceOrdersCreatedFromQuote ||
                    (this.ServiceOrdersCreatedFromQuote != null &&
                    this.ServiceOrdersCreatedFromQuote.Equals(input.ServiceOrdersCreatedFromQuote))
                ) && 
                (
                    this.PurchaseOrdersContainingQuoteItems == input.PurchaseOrdersContainingQuoteItems ||
                    (this.PurchaseOrdersContainingQuoteItems != null &&
                    this.PurchaseOrdersContainingQuoteItems.Equals(input.PurchaseOrdersContainingQuoteItems))
                ) && 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.ContactName == input.ContactName ||
                    (this.ContactName != null &&
                    this.ContactName.Equals(input.ContactName))
                ) && 
                (
                    this.ContactEmailAddress == input.ContactEmailAddress ||
                    (this.ContactEmailAddress != null &&
                    this.ContactEmailAddress.Equals(input.ContactEmailAddress))
                ) && 
                (
                    this.ContactPhoneNumber == input.ContactPhoneNumber ||
                    (this.ContactPhoneNumber != null &&
                    this.ContactPhoneNumber.Equals(input.ContactPhoneNumber))
                ) && 
                (
                    this.OwnerName == input.OwnerName ||
                    (this.OwnerName != null &&
                    this.OwnerName.Equals(input.OwnerName))
                ) && 
                (
                    this.OwnerEmailAddress == input.OwnerEmailAddress ||
                    (this.OwnerEmailAddress != null &&
                    this.OwnerEmailAddress.Equals(input.OwnerEmailAddress))
                ) && 
                (
                    this.OwnerPhoneNumber == input.OwnerPhoneNumber ||
                    (this.OwnerPhoneNumber != null &&
                    this.OwnerPhoneNumber.Equals(input.OwnerPhoneNumber))
                ) && 
                (
                    this.LastEditedRepName == input.LastEditedRepName ||
                    (this.LastEditedRepName != null &&
                    this.LastEditedRepName.Equals(input.LastEditedRepName))
                ) && 
                (
                    this.ApprovedRepName == input.ApprovedRepName ||
                    (this.ApprovedRepName != null &&
                    this.ApprovedRepName.Equals(input.ApprovedRepName))
                ) && 
                (
                    this.PayMethodName == input.PayMethodName ||
                    (this.PayMethodName != null &&
                    this.PayMethodName.Equals(input.PayMethodName))
                ) && 
                (
                    this.PriceLevelDescription == input.PriceLevelDescription ||
                    (this.PriceLevelDescription != null &&
                    this.PriceLevelDescription.Equals(input.PriceLevelDescription))
                ) && 
                (
                    this.SpecialInstructions == input.SpecialInstructions ||
                    (this.SpecialInstructions != null &&
                    this.SpecialInstructions.Equals(input.SpecialInstructions))
                ) && 
                (
                    this.CreditHoldInstructions == input.CreditHoldInstructions ||
                    (this.CreditHoldInstructions != null &&
                    this.CreditHoldInstructions.Equals(input.CreditHoldInstructions))
                ) && 
                (
                    this.OpportunityName == input.OpportunityName ||
                    (this.OpportunityName != null &&
                    this.OpportunityName.Equals(input.OpportunityName))
                ) && 
                (
                    this.ProjectDescription == input.ProjectDescription ||
                    (this.ProjectDescription != null &&
                    this.ProjectDescription.Equals(input.ProjectDescription))
                ) && 
                (
                    this.ProjectPhase == input.ProjectPhase ||
                    (this.ProjectPhase != null &&
                    this.ProjectPhase.Equals(input.ProjectPhase))
                ) && 
                (
                    this.HasProjectBeenInvoiced == input.HasProjectBeenInvoiced ||
                    (this.HasProjectBeenInvoiced != null &&
                    this.HasProjectBeenInvoiced.Equals(input.HasProjectBeenInvoiced))
                ) && 
                (
                    this.IsLocked == input.IsLocked ||
                    (this.IsLocked != null &&
                    this.IsLocked.Equals(input.IsLocked))
                ) && 
                (
                    this.ChangeOrderDescription == input.ChangeOrderDescription ||
                    (this.ChangeOrderDescription != null &&
                    this.ChangeOrderDescription.Equals(input.ChangeOrderDescription))
                ) && 
                (
                    this.ChangeOrderDateCreated == input.ChangeOrderDateCreated ||
                    (this.ChangeOrderDateCreated != null &&
                    this.ChangeOrderDateCreated.Equals(input.ChangeOrderDateCreated))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.QuoteNumber != null)
                    hashCode = hashCode * 59 + this.QuoteNumber.GetHashCode();
                if (this.Quote != null)
                    hashCode = hashCode * 59 + this.Quote.GetHashCode();
                if (this.Details != null)
                    hashCode = hashCode * 59 + this.Details.GetHashCode();
                if (this.ServiceOrdersCreatedFromQuote != null)
                    hashCode = hashCode * 59 + this.ServiceOrdersCreatedFromQuote.GetHashCode();
                if (this.PurchaseOrdersContainingQuoteItems != null)
                    hashCode = hashCode * 59 + this.PurchaseOrdersContainingQuoteItems.GetHashCode();
                if (this.AccountName != null)
                    hashCode = hashCode * 59 + this.AccountName.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.ContactName != null)
                    hashCode = hashCode * 59 + this.ContactName.GetHashCode();
                if (this.ContactEmailAddress != null)
                    hashCode = hashCode * 59 + this.ContactEmailAddress.GetHashCode();
                if (this.ContactPhoneNumber != null)
                    hashCode = hashCode * 59 + this.ContactPhoneNumber.GetHashCode();
                if (this.OwnerName != null)
                    hashCode = hashCode * 59 + this.OwnerName.GetHashCode();
                if (this.OwnerEmailAddress != null)
                    hashCode = hashCode * 59 + this.OwnerEmailAddress.GetHashCode();
                if (this.OwnerPhoneNumber != null)
                    hashCode = hashCode * 59 + this.OwnerPhoneNumber.GetHashCode();
                if (this.LastEditedRepName != null)
                    hashCode = hashCode * 59 + this.LastEditedRepName.GetHashCode();
                if (this.ApprovedRepName != null)
                    hashCode = hashCode * 59 + this.ApprovedRepName.GetHashCode();
                if (this.PayMethodName != null)
                    hashCode = hashCode * 59 + this.PayMethodName.GetHashCode();
                if (this.PriceLevelDescription != null)
                    hashCode = hashCode * 59 + this.PriceLevelDescription.GetHashCode();
                if (this.SpecialInstructions != null)
                    hashCode = hashCode * 59 + this.SpecialInstructions.GetHashCode();
                if (this.CreditHoldInstructions != null)
                    hashCode = hashCode * 59 + this.CreditHoldInstructions.GetHashCode();
                if (this.OpportunityName != null)
                    hashCode = hashCode * 59 + this.OpportunityName.GetHashCode();
                if (this.ProjectDescription != null)
                    hashCode = hashCode * 59 + this.ProjectDescription.GetHashCode();
                if (this.ProjectPhase != null)
                    hashCode = hashCode * 59 + this.ProjectPhase.GetHashCode();
                if (this.HasProjectBeenInvoiced != null)
                    hashCode = hashCode * 59 + this.HasProjectBeenInvoiced.GetHashCode();
                if (this.IsLocked != null)
                    hashCode = hashCode * 59 + this.IsLocked.GetHashCode();
                if (this.ChangeOrderDescription != null)
                    hashCode = hashCode * 59 + this.ChangeOrderDescription.GetHashCode();
                if (this.ChangeOrderDateCreated != null)
                    hashCode = hashCode * 59 + this.ChangeOrderDateCreated.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
