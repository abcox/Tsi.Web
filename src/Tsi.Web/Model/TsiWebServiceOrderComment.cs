/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebServiceOrderComment
    /// </summary>
    [DataContract]
    public partial class TsiWebServiceOrderComment :  IEquatable<TsiWebServiceOrderComment>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebServiceOrderComment" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="comment">comment.</param>
        /// <param name="isWorkPerformed">isWorkPerformed.</param>
        /// <param name="isWorkRequested">isWorkRequested.</param>
        /// <param name="isInternalComments">isInternalComments.</param>
        public TsiWebServiceOrderComment(int? id = default(int?), string comment = default(string), bool? isWorkPerformed = default(bool?), bool? isWorkRequested = default(bool?), bool? isInternalComments = default(bool?))
        {
            this.Id = id;
            this.Comment = comment;
            this.IsWorkPerformed = isWorkPerformed;
            this.IsWorkRequested = isWorkRequested;
            this.IsInternalComments = isInternalComments;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="Id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="Comment", EmitDefaultValue=false)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets IsWorkPerformed
        /// </summary>
        [DataMember(Name="IsWorkPerformed", EmitDefaultValue=false)]
        public bool? IsWorkPerformed { get; set; }

        /// <summary>
        /// Gets or Sets IsWorkRequested
        /// </summary>
        [DataMember(Name="IsWorkRequested", EmitDefaultValue=false)]
        public bool? IsWorkRequested { get; set; }

        /// <summary>
        /// Gets or Sets IsInternalComments
        /// </summary>
        [DataMember(Name="IsInternalComments", EmitDefaultValue=false)]
        public bool? IsInternalComments { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebServiceOrderComment {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  IsWorkPerformed: ").Append(IsWorkPerformed).Append("\n");
            sb.Append("  IsWorkRequested: ").Append(IsWorkRequested).Append("\n");
            sb.Append("  IsInternalComments: ").Append(IsInternalComments).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebServiceOrderComment);
        }

        /// <summary>
        /// Returns true if TsiWebServiceOrderComment instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebServiceOrderComment to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebServiceOrderComment input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.IsWorkPerformed == input.IsWorkPerformed ||
                    (this.IsWorkPerformed != null &&
                    this.IsWorkPerformed.Equals(input.IsWorkPerformed))
                ) && 
                (
                    this.IsWorkRequested == input.IsWorkRequested ||
                    (this.IsWorkRequested != null &&
                    this.IsWorkRequested.Equals(input.IsWorkRequested))
                ) && 
                (
                    this.IsInternalComments == input.IsInternalComments ||
                    (this.IsInternalComments != null &&
                    this.IsInternalComments.Equals(input.IsInternalComments))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.IsWorkPerformed != null)
                    hashCode = hashCode * 59 + this.IsWorkPerformed.GetHashCode();
                if (this.IsWorkRequested != null)
                    hashCode = hashCode * 59 + this.IsWorkRequested.GetHashCode();
                if (this.IsInternalComments != null)
                    hashCode = hashCode * 59 + this.IsInternalComments.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
