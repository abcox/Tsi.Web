/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebServiceOrderSystem
    /// </summary>
    [DataContract]
    public partial class TsiWebServiceOrderSystem :  IEquatable<TsiWebServiceOrderSystem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebServiceOrderSystem" /> class.
        /// </summary>
        /// <param name="techSkillLevel">techSkillLevel.</param>
        /// <param name="skill">skill.</param>
        /// <param name="comments">comments.</param>
        /// <param name="systemType">systemType.</param>
        /// <param name="repGroupForSystem">repGroupForSystem.</param>
        public TsiWebServiceOrderSystem(int? techSkillLevel = default(int?), string skill = default(string), string comments = default(string), string systemType = default(string), string repGroupForSystem = default(string))
        {
            this.TechSkillLevel = techSkillLevel;
            this.Skill = skill;
            this.Comments = comments;
            this.SystemType = systemType;
            this.RepGroupForSystem = repGroupForSystem;
        }
        
        /// <summary>
        /// Gets or Sets TechSkillLevel
        /// </summary>
        [DataMember(Name="TechSkillLevel", EmitDefaultValue=false)]
        public int? TechSkillLevel { get; set; }

        /// <summary>
        /// Gets or Sets Skill
        /// </summary>
        [DataMember(Name="Skill", EmitDefaultValue=false)]
        public string Skill { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="Comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets SystemType
        /// </summary>
        [DataMember(Name="SystemType", EmitDefaultValue=false)]
        public string SystemType { get; set; }

        /// <summary>
        /// Gets or Sets RepGroupForSystem
        /// </summary>
        [DataMember(Name="RepGroupForSystem", EmitDefaultValue=false)]
        public string RepGroupForSystem { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebServiceOrderSystem {\n");
            sb.Append("  TechSkillLevel: ").Append(TechSkillLevel).Append("\n");
            sb.Append("  Skill: ").Append(Skill).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  SystemType: ").Append(SystemType).Append("\n");
            sb.Append("  RepGroupForSystem: ").Append(RepGroupForSystem).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebServiceOrderSystem);
        }

        /// <summary>
        /// Returns true if TsiWebServiceOrderSystem instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebServiceOrderSystem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebServiceOrderSystem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TechSkillLevel == input.TechSkillLevel ||
                    (this.TechSkillLevel != null &&
                    this.TechSkillLevel.Equals(input.TechSkillLevel))
                ) && 
                (
                    this.Skill == input.Skill ||
                    (this.Skill != null &&
                    this.Skill.Equals(input.Skill))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.SystemType == input.SystemType ||
                    (this.SystemType != null &&
                    this.SystemType.Equals(input.SystemType))
                ) && 
                (
                    this.RepGroupForSystem == input.RepGroupForSystem ||
                    (this.RepGroupForSystem != null &&
                    this.RepGroupForSystem.Equals(input.RepGroupForSystem))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TechSkillLevel != null)
                    hashCode = hashCode * 59 + this.TechSkillLevel.GetHashCode();
                if (this.Skill != null)
                    hashCode = hashCode * 59 + this.Skill.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.SystemType != null)
                    hashCode = hashCode * 59 + this.SystemType.GetHashCode();
                if (this.RepGroupForSystem != null)
                    hashCode = hashCode * 59 + this.RepGroupForSystem.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
