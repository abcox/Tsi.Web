/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebTask
    /// </summary>
    [DataContract]
    public partial class TsiWebTask :  IEquatable<TsiWebTask>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebTask" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TsiWebTask() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebTask" /> class.
        /// </summary>
        /// <param name="comment">comment.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="contactNumber">contactNumber.</param>
        /// <param name="scheduledForRepNumber">scheduledForRepNumber.</param>
        /// <param name="scheduledByRepNumber">scheduledByRepNumber.</param>
        /// <param name="serviceOrderNumber">serviceOrderNumber.</param>
        /// <param name="serviceOrderTemplateNumber">serviceOrderTemplateNumber.</param>
        /// <param name="quoteNumber">quoteNumber.</param>
        /// <param name="opportunityNumber">opportunityNumber.</param>
        /// <param name="projectNumber">projectNumber.</param>
        /// <param name="projectPhaseNumber">projectPhaseNumber.</param>
        /// <param name="projectSubPhaseAssignmentNumber">projectSubPhaseAssignmentNumber.</param>
        /// <param name="startDate">startDate.</param>
        /// <param name="startTime">startTime.</param>
        /// <param name="wholeStart">wholeStart.</param>
        /// <param name="endDate">endDate.</param>
        /// <param name="endTime">endTime.</param>
        /// <param name="wholeEnd">wholeEnd.</param>
        /// <param name="action">action (required).</param>
        /// <param name="actionColor">actionColor.</param>
        /// <param name="type">type (required).</param>
        /// <param name="dateScheduled">dateScheduled.</param>
        /// <param name="priorityNumber">priorityNumber.</param>
        /// <param name="priority">priority.</param>
        /// <param name="hasAlarm">hasAlarm.</param>
        /// <param name="alarmDateTime">alarmDateTime.</param>
        /// <param name="alarmReminderQuantity">alarmReminderQuantity.</param>
        /// <param name="alarmReminderInterval">alarmReminderInterval.</param>
        /// <param name="isCompleted">isCompleted.</param>
        /// <param name="recurringId">recurringId.</param>
        /// <param name="recurringDescription">recurringDescription.</param>
        /// <param name="groupId">groupId.</param>
        /// <param name="groupAttendeeId">groupAttendeeId.</param>
        /// <param name="isPrivate">isPrivate.</param>
        /// <param name="outlookSyncDate">outlookSyncDate.</param>
        /// <param name="waveFileName">waveFileName.</param>
        /// <param name="palmRecordId">palmRecordId.</param>
        /// <param name="palmIdentifier">palmIdentifier.</param>
        /// <param name="lastModified">lastModified.</param>
        /// <param name="lastOutlookSyncDateTime">lastOutlookSyncDateTime.</param>
        /// <param name="outlookId">outlookId.</param>
        /// <param name="resourceName">resourceName.</param>
        /// <param name="isGlobalTask">isGlobalTask.</param>
        /// <param name="rUID">rUID.</param>
        /// <param name="isAppointment">isAppointment.</param>
        /// <param name="doNotSync">doNotSync.</param>
        /// <param name="subject">subject.</param>
        /// <param name="dateCreated">dateCreated.</param>
        /// <param name="location">location.</param>
        /// <param name="organizer">organizer.</param>
        /// <param name="sortStartDateTime">sortStartDateTime.</param>
        /// <param name="sortEndDateTime">sortEndDateTime.</param>
        /// <param name="age">age.</param>
        /// <param name="exchangeHref">exchangeHref.</param>
        /// <param name="mobileDispatchWorkStatusId">mobileDispatchWorkStatusId.</param>
        /// <param name="mobileDispatchWorkStatus">mobileDispatchWorkStatus.</param>
        /// <param name="itemID">itemID.</param>
        /// <param name="masterItemID">masterItemID.</param>
        /// <param name="originalStartDate">originalStartDate.</param>
        /// <param name="dueDate">dueDate.</param>
        /// <param name="dueTime">dueTime.</param>
        /// <param name="dueDateWorkflowCreated">dueDateWorkflowCreated.</param>
        public TsiWebTask(string comment = default(string), int? accountNumber = default(int?), int? contactNumber = default(int?), int? scheduledForRepNumber = default(int?), int? scheduledByRepNumber = default(int?), int? serviceOrderNumber = default(int?), int? serviceOrderTemplateNumber = default(int?), int? quoteNumber = default(int?), int? opportunityNumber = default(int?), int? projectNumber = default(int?), int? projectPhaseNumber = default(int?), int? projectSubPhaseAssignmentNumber = default(int?), DateTime? startDate = default(DateTime?), DateTime? startTime = default(DateTime?), DateTime? wholeStart = default(DateTime?), DateTime? endDate = default(DateTime?), DateTime? endTime = default(DateTime?), DateTime? wholeEnd = default(DateTime?), string action = default(string), string actionColor = default(string), string type = default(string), DateTime? dateScheduled = default(DateTime?), int? priorityNumber = default(int?), string priority = default(string), bool? hasAlarm = default(bool?), DateTime? alarmDateTime = default(DateTime?), int? alarmReminderQuantity = default(int?), string alarmReminderInterval = default(string), bool? isCompleted = default(bool?), int? recurringId = default(int?), string recurringDescription = default(string), int? groupId = default(int?), int? groupAttendeeId = default(int?), bool? isPrivate = default(bool?), DateTime? outlookSyncDate = default(DateTime?), string waveFileName = default(string), int? palmRecordId = default(int?), string palmIdentifier = default(string), DateTime? lastModified = default(DateTime?), DateTime? lastOutlookSyncDateTime = default(DateTime?), string outlookId = default(string), string resourceName = default(string), bool? isGlobalTask = default(bool?), string rUID = default(string), bool? isAppointment = default(bool?), bool? doNotSync = default(bool?), string subject = default(string), DateTime? dateCreated = default(DateTime?), string location = default(string), string organizer = default(string), DateTime? sortStartDateTime = default(DateTime?), DateTime? sortEndDateTime = default(DateTime?), int? age = default(int?), string exchangeHref = default(string), int? mobileDispatchWorkStatusId = default(int?), string mobileDispatchWorkStatus = default(string), string itemID = default(string), string masterItemID = default(string), DateTime? originalStartDate = default(DateTime?), DateTime? dueDate = default(DateTime?), DateTime? dueTime = default(DateTime?), bool? dueDateWorkflowCreated = default(bool?))
        {
            // to ensure "action" is required (not null)
            if (action == null)
            {
                throw new InvalidDataException("action is a required property for TsiWebTask and cannot be null");
            }
            else
            {
                this.Action = action;
            }
            // to ensure "type" is required (not null)
            if (type == null)
            {
                throw new InvalidDataException("type is a required property for TsiWebTask and cannot be null");
            }
            else
            {
                this.Type = type;
            }
            this.Comment = comment;
            this.AccountNumber = accountNumber;
            this.ContactNumber = contactNumber;
            this.ScheduledForRepNumber = scheduledForRepNumber;
            this.ScheduledByRepNumber = scheduledByRepNumber;
            this.ServiceOrderNumber = serviceOrderNumber;
            this.ServiceOrderTemplateNumber = serviceOrderTemplateNumber;
            this.QuoteNumber = quoteNumber;
            this.OpportunityNumber = opportunityNumber;
            this.ProjectNumber = projectNumber;
            this.ProjectPhaseNumber = projectPhaseNumber;
            this.ProjectSubPhaseAssignmentNumber = projectSubPhaseAssignmentNumber;
            this.StartDate = startDate;
            this.StartTime = startTime;
            this.WholeStart = wholeStart;
            this.EndDate = endDate;
            this.EndTime = endTime;
            this.WholeEnd = wholeEnd;
            this.ActionColor = actionColor;
            this.DateScheduled = dateScheduled;
            this.PriorityNumber = priorityNumber;
            this.Priority = priority;
            this.HasAlarm = hasAlarm;
            this.AlarmDateTime = alarmDateTime;
            this.AlarmReminderQuantity = alarmReminderQuantity;
            this.AlarmReminderInterval = alarmReminderInterval;
            this.IsCompleted = isCompleted;
            this.RecurringId = recurringId;
            this.RecurringDescription = recurringDescription;
            this.GroupId = groupId;
            this.GroupAttendeeId = groupAttendeeId;
            this.IsPrivate = isPrivate;
            this.OutlookSyncDate = outlookSyncDate;
            this.WaveFileName = waveFileName;
            this.PalmRecordId = palmRecordId;
            this.PalmIdentifier = palmIdentifier;
            this.LastModified = lastModified;
            this.LastOutlookSyncDateTime = lastOutlookSyncDateTime;
            this.OutlookId = outlookId;
            this.ResourceName = resourceName;
            this.IsGlobalTask = isGlobalTask;
            this.RUID = rUID;
            this.IsAppointment = isAppointment;
            this.DoNotSync = doNotSync;
            this.Subject = subject;
            this.DateCreated = dateCreated;
            this.Location = location;
            this.Organizer = organizer;
            this.SortStartDateTime = sortStartDateTime;
            this.SortEndDateTime = sortEndDateTime;
            this.Age = age;
            this.ExchangeHref = exchangeHref;
            this.MobileDispatchWorkStatusId = mobileDispatchWorkStatusId;
            this.MobileDispatchWorkStatus = mobileDispatchWorkStatus;
            this.ItemID = itemID;
            this.MasterItemID = masterItemID;
            this.OriginalStartDate = originalStartDate;
            this.DueDate = dueDate;
            this.DueTime = dueTime;
            this.DueDateWorkflowCreated = dueDateWorkflowCreated;
        }
        
        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="Comment", EmitDefaultValue=false)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets ContactNumber
        /// </summary>
        [DataMember(Name="ContactNumber", EmitDefaultValue=false)]
        public int? ContactNumber { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledForRepNumber
        /// </summary>
        [DataMember(Name="ScheduledForRepNumber", EmitDefaultValue=false)]
        public int? ScheduledForRepNumber { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledByRepNumber
        /// </summary>
        [DataMember(Name="ScheduledByRepNumber", EmitDefaultValue=false)]
        public int? ScheduledByRepNumber { get; set; }

        /// <summary>
        /// Gets or Sets ServiceOrderNumber
        /// </summary>
        [DataMember(Name="ServiceOrderNumber", EmitDefaultValue=false)]
        public int? ServiceOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets ServiceOrderTemplateNumber
        /// </summary>
        [DataMember(Name="ServiceOrderTemplateNumber", EmitDefaultValue=false)]
        public int? ServiceOrderTemplateNumber { get; set; }

        /// <summary>
        /// Gets or Sets QuoteNumber
        /// </summary>
        [DataMember(Name="QuoteNumber", EmitDefaultValue=false)]
        public int? QuoteNumber { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityNumber
        /// </summary>
        [DataMember(Name="OpportunityNumber", EmitDefaultValue=false)]
        public int? OpportunityNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectNumber
        /// </summary>
        [DataMember(Name="ProjectNumber", EmitDefaultValue=false)]
        public int? ProjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectPhaseNumber
        /// </summary>
        [DataMember(Name="ProjectPhaseNumber", EmitDefaultValue=false)]
        public int? ProjectPhaseNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectSubPhaseAssignmentNumber
        /// </summary>
        [DataMember(Name="ProjectSubPhaseAssignmentNumber", EmitDefaultValue=false)]
        public int? ProjectSubPhaseAssignmentNumber { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name="StartDate", EmitDefaultValue=false)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        [DataMember(Name="StartTime", EmitDefaultValue=false)]
        public DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or Sets WholeStart
        /// </summary>
        [DataMember(Name="WholeStart", EmitDefaultValue=false)]
        public DateTime? WholeStart { get; set; }

        /// <summary>
        /// Gets or Sets EndDate
        /// </summary>
        [DataMember(Name="EndDate", EmitDefaultValue=false)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or Sets EndTime
        /// </summary>
        [DataMember(Name="EndTime", EmitDefaultValue=false)]
        public DateTime? EndTime { get; set; }

        /// <summary>
        /// Gets or Sets WholeEnd
        /// </summary>
        [DataMember(Name="WholeEnd", EmitDefaultValue=false)]
        public DateTime? WholeEnd { get; set; }

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name="Action", EmitDefaultValue=false)]
        public string Action { get; set; }

        /// <summary>
        /// Gets or Sets ActionColor
        /// </summary>
        [DataMember(Name="ActionColor", EmitDefaultValue=false)]
        public string ActionColor { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="Type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets DateScheduled
        /// </summary>
        [DataMember(Name="DateScheduled", EmitDefaultValue=false)]
        public DateTime? DateScheduled { get; set; }

        /// <summary>
        /// Gets or Sets PriorityNumber
        /// </summary>
        [DataMember(Name="PriorityNumber", EmitDefaultValue=false)]
        public int? PriorityNumber { get; set; }

        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="Priority", EmitDefaultValue=false)]
        public string Priority { get; set; }

        /// <summary>
        /// Gets or Sets HasAlarm
        /// </summary>
        [DataMember(Name="HasAlarm", EmitDefaultValue=false)]
        public bool? HasAlarm { get; set; }

        /// <summary>
        /// Gets or Sets AlarmDateTime
        /// </summary>
        [DataMember(Name="AlarmDateTime", EmitDefaultValue=false)]
        public DateTime? AlarmDateTime { get; set; }

        /// <summary>
        /// Gets or Sets AlarmReminderQuantity
        /// </summary>
        [DataMember(Name="AlarmReminderQuantity", EmitDefaultValue=false)]
        public int? AlarmReminderQuantity { get; set; }

        /// <summary>
        /// Gets or Sets AlarmReminderInterval
        /// </summary>
        [DataMember(Name="AlarmReminderInterval", EmitDefaultValue=false)]
        public string AlarmReminderInterval { get; set; }

        /// <summary>
        /// Gets or Sets IsCompleted
        /// </summary>
        [DataMember(Name="IsCompleted", EmitDefaultValue=false)]
        public bool? IsCompleted { get; set; }

        /// <summary>
        /// Gets or Sets RecurringId
        /// </summary>
        [DataMember(Name="RecurringId", EmitDefaultValue=false)]
        public int? RecurringId { get; set; }

        /// <summary>
        /// Gets or Sets RecurringDescription
        /// </summary>
        [DataMember(Name="RecurringDescription", EmitDefaultValue=false)]
        public string RecurringDescription { get; set; }

        /// <summary>
        /// Gets or Sets GroupId
        /// </summary>
        [DataMember(Name="GroupId", EmitDefaultValue=false)]
        public int? GroupId { get; set; }

        /// <summary>
        /// Gets or Sets GroupAttendeeId
        /// </summary>
        [DataMember(Name="GroupAttendeeId", EmitDefaultValue=false)]
        public int? GroupAttendeeId { get; set; }

        /// <summary>
        /// Gets or Sets IsPrivate
        /// </summary>
        [DataMember(Name="IsPrivate", EmitDefaultValue=false)]
        public bool? IsPrivate { get; set; }

        /// <summary>
        /// Gets or Sets OutlookSyncDate
        /// </summary>
        [DataMember(Name="OutlookSyncDate", EmitDefaultValue=false)]
        public DateTime? OutlookSyncDate { get; set; }

        /// <summary>
        /// Gets or Sets WaveFileName
        /// </summary>
        [DataMember(Name="WaveFileName", EmitDefaultValue=false)]
        public string WaveFileName { get; set; }

        /// <summary>
        /// Gets or Sets PalmRecordId
        /// </summary>
        [DataMember(Name="PalmRecordId", EmitDefaultValue=false)]
        public int? PalmRecordId { get; set; }

        /// <summary>
        /// Gets or Sets PalmIdentifier
        /// </summary>
        [DataMember(Name="PalmIdentifier", EmitDefaultValue=false)]
        public string PalmIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets LastModified
        /// </summary>
        [DataMember(Name="LastModified", EmitDefaultValue=false)]
        public DateTime? LastModified { get; set; }

        /// <summary>
        /// Gets or Sets LastOutlookSyncDateTime
        /// </summary>
        [DataMember(Name="LastOutlookSyncDateTime", EmitDefaultValue=false)]
        public DateTime? LastOutlookSyncDateTime { get; set; }

        /// <summary>
        /// Gets or Sets OutlookId
        /// </summary>
        [DataMember(Name="OutlookId", EmitDefaultValue=false)]
        public string OutlookId { get; set; }

        /// <summary>
        /// Gets or Sets ResourceName
        /// </summary>
        [DataMember(Name="ResourceName", EmitDefaultValue=false)]
        public string ResourceName { get; set; }

        /// <summary>
        /// Gets or Sets IsGlobalTask
        /// </summary>
        [DataMember(Name="IsGlobalTask", EmitDefaultValue=false)]
        public bool? IsGlobalTask { get; set; }

        /// <summary>
        /// Gets or Sets RUID
        /// </summary>
        [DataMember(Name="RUID", EmitDefaultValue=false)]
        public string RUID { get; set; }

        /// <summary>
        /// Gets or Sets IsAppointment
        /// </summary>
        [DataMember(Name="IsAppointment", EmitDefaultValue=false)]
        public bool? IsAppointment { get; set; }

        /// <summary>
        /// Gets or Sets DoNotSync
        /// </summary>
        [DataMember(Name="DoNotSync", EmitDefaultValue=false)]
        public bool? DoNotSync { get; set; }

        /// <summary>
        /// Gets or Sets Subject
        /// </summary>
        [DataMember(Name="Subject", EmitDefaultValue=false)]
        public string Subject { get; set; }

        /// <summary>
        /// Gets or Sets DateCreated
        /// </summary>
        [DataMember(Name="DateCreated", EmitDefaultValue=false)]
        public DateTime? DateCreated { get; set; }

        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name="Location", EmitDefaultValue=false)]
        public string Location { get; set; }

        /// <summary>
        /// Gets or Sets Organizer
        /// </summary>
        [DataMember(Name="Organizer", EmitDefaultValue=false)]
        public string Organizer { get; set; }

        /// <summary>
        /// Gets or Sets SortStartDateTime
        /// </summary>
        [DataMember(Name="SortStartDateTime", EmitDefaultValue=false)]
        public DateTime? SortStartDateTime { get; set; }

        /// <summary>
        /// Gets or Sets SortEndDateTime
        /// </summary>
        [DataMember(Name="SortEndDateTime", EmitDefaultValue=false)]
        public DateTime? SortEndDateTime { get; set; }

        /// <summary>
        /// Gets or Sets Age
        /// </summary>
        [DataMember(Name="Age", EmitDefaultValue=false)]
        public int? Age { get; set; }

        /// <summary>
        /// Gets or Sets ExchangeHref
        /// </summary>
        [DataMember(Name="ExchangeHref", EmitDefaultValue=false)]
        public string ExchangeHref { get; set; }

        /// <summary>
        /// Gets or Sets MobileDispatchWorkStatusId
        /// </summary>
        [DataMember(Name="MobileDispatchWorkStatusId", EmitDefaultValue=false)]
        public int? MobileDispatchWorkStatusId { get; set; }

        /// <summary>
        /// Gets or Sets MobileDispatchWorkStatus
        /// </summary>
        [DataMember(Name="MobileDispatchWorkStatus", EmitDefaultValue=false)]
        public string MobileDispatchWorkStatus { get; set; }

        /// <summary>
        /// Gets or Sets ItemID
        /// </summary>
        [DataMember(Name="ItemID", EmitDefaultValue=false)]
        public string ItemID { get; set; }

        /// <summary>
        /// Gets or Sets MasterItemID
        /// </summary>
        [DataMember(Name="MasterItemID", EmitDefaultValue=false)]
        public string MasterItemID { get; set; }

        /// <summary>
        /// Gets or Sets OriginalStartDate
        /// </summary>
        [DataMember(Name="OriginalStartDate", EmitDefaultValue=false)]
        public DateTime? OriginalStartDate { get; set; }

        /// <summary>
        /// Gets or Sets DueDate
        /// </summary>
        [DataMember(Name="DueDate", EmitDefaultValue=false)]
        public DateTime? DueDate { get; set; }

        /// <summary>
        /// Gets or Sets DueTime
        /// </summary>
        [DataMember(Name="DueTime", EmitDefaultValue=false)]
        public DateTime? DueTime { get; set; }

        /// <summary>
        /// Gets or Sets DueDateWorkflowCreated
        /// </summary>
        [DataMember(Name="DueDateWorkflowCreated", EmitDefaultValue=false)]
        public bool? DueDateWorkflowCreated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebTask {\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  ContactNumber: ").Append(ContactNumber).Append("\n");
            sb.Append("  ScheduledForRepNumber: ").Append(ScheduledForRepNumber).Append("\n");
            sb.Append("  ScheduledByRepNumber: ").Append(ScheduledByRepNumber).Append("\n");
            sb.Append("  ServiceOrderNumber: ").Append(ServiceOrderNumber).Append("\n");
            sb.Append("  ServiceOrderTemplateNumber: ").Append(ServiceOrderTemplateNumber).Append("\n");
            sb.Append("  QuoteNumber: ").Append(QuoteNumber).Append("\n");
            sb.Append("  OpportunityNumber: ").Append(OpportunityNumber).Append("\n");
            sb.Append("  ProjectNumber: ").Append(ProjectNumber).Append("\n");
            sb.Append("  ProjectPhaseNumber: ").Append(ProjectPhaseNumber).Append("\n");
            sb.Append("  ProjectSubPhaseAssignmentNumber: ").Append(ProjectSubPhaseAssignmentNumber).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  WholeStart: ").Append(WholeStart).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  WholeEnd: ").Append(WholeEnd).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  ActionColor: ").Append(ActionColor).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  DateScheduled: ").Append(DateScheduled).Append("\n");
            sb.Append("  PriorityNumber: ").Append(PriorityNumber).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  HasAlarm: ").Append(HasAlarm).Append("\n");
            sb.Append("  AlarmDateTime: ").Append(AlarmDateTime).Append("\n");
            sb.Append("  AlarmReminderQuantity: ").Append(AlarmReminderQuantity).Append("\n");
            sb.Append("  AlarmReminderInterval: ").Append(AlarmReminderInterval).Append("\n");
            sb.Append("  IsCompleted: ").Append(IsCompleted).Append("\n");
            sb.Append("  RecurringId: ").Append(RecurringId).Append("\n");
            sb.Append("  RecurringDescription: ").Append(RecurringDescription).Append("\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  GroupAttendeeId: ").Append(GroupAttendeeId).Append("\n");
            sb.Append("  IsPrivate: ").Append(IsPrivate).Append("\n");
            sb.Append("  OutlookSyncDate: ").Append(OutlookSyncDate).Append("\n");
            sb.Append("  WaveFileName: ").Append(WaveFileName).Append("\n");
            sb.Append("  PalmRecordId: ").Append(PalmRecordId).Append("\n");
            sb.Append("  PalmIdentifier: ").Append(PalmIdentifier).Append("\n");
            sb.Append("  LastModified: ").Append(LastModified).Append("\n");
            sb.Append("  LastOutlookSyncDateTime: ").Append(LastOutlookSyncDateTime).Append("\n");
            sb.Append("  OutlookId: ").Append(OutlookId).Append("\n");
            sb.Append("  ResourceName: ").Append(ResourceName).Append("\n");
            sb.Append("  IsGlobalTask: ").Append(IsGlobalTask).Append("\n");
            sb.Append("  RUID: ").Append(RUID).Append("\n");
            sb.Append("  IsAppointment: ").Append(IsAppointment).Append("\n");
            sb.Append("  DoNotSync: ").Append(DoNotSync).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("  DateCreated: ").Append(DateCreated).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  Organizer: ").Append(Organizer).Append("\n");
            sb.Append("  SortStartDateTime: ").Append(SortStartDateTime).Append("\n");
            sb.Append("  SortEndDateTime: ").Append(SortEndDateTime).Append("\n");
            sb.Append("  Age: ").Append(Age).Append("\n");
            sb.Append("  ExchangeHref: ").Append(ExchangeHref).Append("\n");
            sb.Append("  MobileDispatchWorkStatusId: ").Append(MobileDispatchWorkStatusId).Append("\n");
            sb.Append("  MobileDispatchWorkStatus: ").Append(MobileDispatchWorkStatus).Append("\n");
            sb.Append("  ItemID: ").Append(ItemID).Append("\n");
            sb.Append("  MasterItemID: ").Append(MasterItemID).Append("\n");
            sb.Append("  OriginalStartDate: ").Append(OriginalStartDate).Append("\n");
            sb.Append("  DueDate: ").Append(DueDate).Append("\n");
            sb.Append("  DueTime: ").Append(DueTime).Append("\n");
            sb.Append("  DueDateWorkflowCreated: ").Append(DueDateWorkflowCreated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebTask);
        }

        /// <summary>
        /// Returns true if TsiWebTask instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebTask to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebTask input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.ContactNumber == input.ContactNumber ||
                    (this.ContactNumber != null &&
                    this.ContactNumber.Equals(input.ContactNumber))
                ) && 
                (
                    this.ScheduledForRepNumber == input.ScheduledForRepNumber ||
                    (this.ScheduledForRepNumber != null &&
                    this.ScheduledForRepNumber.Equals(input.ScheduledForRepNumber))
                ) && 
                (
                    this.ScheduledByRepNumber == input.ScheduledByRepNumber ||
                    (this.ScheduledByRepNumber != null &&
                    this.ScheduledByRepNumber.Equals(input.ScheduledByRepNumber))
                ) && 
                (
                    this.ServiceOrderNumber == input.ServiceOrderNumber ||
                    (this.ServiceOrderNumber != null &&
                    this.ServiceOrderNumber.Equals(input.ServiceOrderNumber))
                ) && 
                (
                    this.ServiceOrderTemplateNumber == input.ServiceOrderTemplateNumber ||
                    (this.ServiceOrderTemplateNumber != null &&
                    this.ServiceOrderTemplateNumber.Equals(input.ServiceOrderTemplateNumber))
                ) && 
                (
                    this.QuoteNumber == input.QuoteNumber ||
                    (this.QuoteNumber != null &&
                    this.QuoteNumber.Equals(input.QuoteNumber))
                ) && 
                (
                    this.OpportunityNumber == input.OpportunityNumber ||
                    (this.OpportunityNumber != null &&
                    this.OpportunityNumber.Equals(input.OpportunityNumber))
                ) && 
                (
                    this.ProjectNumber == input.ProjectNumber ||
                    (this.ProjectNumber != null &&
                    this.ProjectNumber.Equals(input.ProjectNumber))
                ) && 
                (
                    this.ProjectPhaseNumber == input.ProjectPhaseNumber ||
                    (this.ProjectPhaseNumber != null &&
                    this.ProjectPhaseNumber.Equals(input.ProjectPhaseNumber))
                ) && 
                (
                    this.ProjectSubPhaseAssignmentNumber == input.ProjectSubPhaseAssignmentNumber ||
                    (this.ProjectSubPhaseAssignmentNumber != null &&
                    this.ProjectSubPhaseAssignmentNumber.Equals(input.ProjectSubPhaseAssignmentNumber))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.StartTime == input.StartTime ||
                    (this.StartTime != null &&
                    this.StartTime.Equals(input.StartTime))
                ) && 
                (
                    this.WholeStart == input.WholeStart ||
                    (this.WholeStart != null &&
                    this.WholeStart.Equals(input.WholeStart))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.EndTime == input.EndTime ||
                    (this.EndTime != null &&
                    this.EndTime.Equals(input.EndTime))
                ) && 
                (
                    this.WholeEnd == input.WholeEnd ||
                    (this.WholeEnd != null &&
                    this.WholeEnd.Equals(input.WholeEnd))
                ) && 
                (
                    this.Action == input.Action ||
                    (this.Action != null &&
                    this.Action.Equals(input.Action))
                ) && 
                (
                    this.ActionColor == input.ActionColor ||
                    (this.ActionColor != null &&
                    this.ActionColor.Equals(input.ActionColor))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.DateScheduled == input.DateScheduled ||
                    (this.DateScheduled != null &&
                    this.DateScheduled.Equals(input.DateScheduled))
                ) && 
                (
                    this.PriorityNumber == input.PriorityNumber ||
                    (this.PriorityNumber != null &&
                    this.PriorityNumber.Equals(input.PriorityNumber))
                ) && 
                (
                    this.Priority == input.Priority ||
                    (this.Priority != null &&
                    this.Priority.Equals(input.Priority))
                ) && 
                (
                    this.HasAlarm == input.HasAlarm ||
                    (this.HasAlarm != null &&
                    this.HasAlarm.Equals(input.HasAlarm))
                ) && 
                (
                    this.AlarmDateTime == input.AlarmDateTime ||
                    (this.AlarmDateTime != null &&
                    this.AlarmDateTime.Equals(input.AlarmDateTime))
                ) && 
                (
                    this.AlarmReminderQuantity == input.AlarmReminderQuantity ||
                    (this.AlarmReminderQuantity != null &&
                    this.AlarmReminderQuantity.Equals(input.AlarmReminderQuantity))
                ) && 
                (
                    this.AlarmReminderInterval == input.AlarmReminderInterval ||
                    (this.AlarmReminderInterval != null &&
                    this.AlarmReminderInterval.Equals(input.AlarmReminderInterval))
                ) && 
                (
                    this.IsCompleted == input.IsCompleted ||
                    (this.IsCompleted != null &&
                    this.IsCompleted.Equals(input.IsCompleted))
                ) && 
                (
                    this.RecurringId == input.RecurringId ||
                    (this.RecurringId != null &&
                    this.RecurringId.Equals(input.RecurringId))
                ) && 
                (
                    this.RecurringDescription == input.RecurringDescription ||
                    (this.RecurringDescription != null &&
                    this.RecurringDescription.Equals(input.RecurringDescription))
                ) && 
                (
                    this.GroupId == input.GroupId ||
                    (this.GroupId != null &&
                    this.GroupId.Equals(input.GroupId))
                ) && 
                (
                    this.GroupAttendeeId == input.GroupAttendeeId ||
                    (this.GroupAttendeeId != null &&
                    this.GroupAttendeeId.Equals(input.GroupAttendeeId))
                ) && 
                (
                    this.IsPrivate == input.IsPrivate ||
                    (this.IsPrivate != null &&
                    this.IsPrivate.Equals(input.IsPrivate))
                ) && 
                (
                    this.OutlookSyncDate == input.OutlookSyncDate ||
                    (this.OutlookSyncDate != null &&
                    this.OutlookSyncDate.Equals(input.OutlookSyncDate))
                ) && 
                (
                    this.WaveFileName == input.WaveFileName ||
                    (this.WaveFileName != null &&
                    this.WaveFileName.Equals(input.WaveFileName))
                ) && 
                (
                    this.PalmRecordId == input.PalmRecordId ||
                    (this.PalmRecordId != null &&
                    this.PalmRecordId.Equals(input.PalmRecordId))
                ) && 
                (
                    this.PalmIdentifier == input.PalmIdentifier ||
                    (this.PalmIdentifier != null &&
                    this.PalmIdentifier.Equals(input.PalmIdentifier))
                ) && 
                (
                    this.LastModified == input.LastModified ||
                    (this.LastModified != null &&
                    this.LastModified.Equals(input.LastModified))
                ) && 
                (
                    this.LastOutlookSyncDateTime == input.LastOutlookSyncDateTime ||
                    (this.LastOutlookSyncDateTime != null &&
                    this.LastOutlookSyncDateTime.Equals(input.LastOutlookSyncDateTime))
                ) && 
                (
                    this.OutlookId == input.OutlookId ||
                    (this.OutlookId != null &&
                    this.OutlookId.Equals(input.OutlookId))
                ) && 
                (
                    this.ResourceName == input.ResourceName ||
                    (this.ResourceName != null &&
                    this.ResourceName.Equals(input.ResourceName))
                ) && 
                (
                    this.IsGlobalTask == input.IsGlobalTask ||
                    (this.IsGlobalTask != null &&
                    this.IsGlobalTask.Equals(input.IsGlobalTask))
                ) && 
                (
                    this.RUID == input.RUID ||
                    (this.RUID != null &&
                    this.RUID.Equals(input.RUID))
                ) && 
                (
                    this.IsAppointment == input.IsAppointment ||
                    (this.IsAppointment != null &&
                    this.IsAppointment.Equals(input.IsAppointment))
                ) && 
                (
                    this.DoNotSync == input.DoNotSync ||
                    (this.DoNotSync != null &&
                    this.DoNotSync.Equals(input.DoNotSync))
                ) && 
                (
                    this.Subject == input.Subject ||
                    (this.Subject != null &&
                    this.Subject.Equals(input.Subject))
                ) && 
                (
                    this.DateCreated == input.DateCreated ||
                    (this.DateCreated != null &&
                    this.DateCreated.Equals(input.DateCreated))
                ) && 
                (
                    this.Location == input.Location ||
                    (this.Location != null &&
                    this.Location.Equals(input.Location))
                ) && 
                (
                    this.Organizer == input.Organizer ||
                    (this.Organizer != null &&
                    this.Organizer.Equals(input.Organizer))
                ) && 
                (
                    this.SortStartDateTime == input.SortStartDateTime ||
                    (this.SortStartDateTime != null &&
                    this.SortStartDateTime.Equals(input.SortStartDateTime))
                ) && 
                (
                    this.SortEndDateTime == input.SortEndDateTime ||
                    (this.SortEndDateTime != null &&
                    this.SortEndDateTime.Equals(input.SortEndDateTime))
                ) && 
                (
                    this.Age == input.Age ||
                    (this.Age != null &&
                    this.Age.Equals(input.Age))
                ) && 
                (
                    this.ExchangeHref == input.ExchangeHref ||
                    (this.ExchangeHref != null &&
                    this.ExchangeHref.Equals(input.ExchangeHref))
                ) && 
                (
                    this.MobileDispatchWorkStatusId == input.MobileDispatchWorkStatusId ||
                    (this.MobileDispatchWorkStatusId != null &&
                    this.MobileDispatchWorkStatusId.Equals(input.MobileDispatchWorkStatusId))
                ) && 
                (
                    this.MobileDispatchWorkStatus == input.MobileDispatchWorkStatus ||
                    (this.MobileDispatchWorkStatus != null &&
                    this.MobileDispatchWorkStatus.Equals(input.MobileDispatchWorkStatus))
                ) && 
                (
                    this.ItemID == input.ItemID ||
                    (this.ItemID != null &&
                    this.ItemID.Equals(input.ItemID))
                ) && 
                (
                    this.MasterItemID == input.MasterItemID ||
                    (this.MasterItemID != null &&
                    this.MasterItemID.Equals(input.MasterItemID))
                ) && 
                (
                    this.OriginalStartDate == input.OriginalStartDate ||
                    (this.OriginalStartDate != null &&
                    this.OriginalStartDate.Equals(input.OriginalStartDate))
                ) && 
                (
                    this.DueDate == input.DueDate ||
                    (this.DueDate != null &&
                    this.DueDate.Equals(input.DueDate))
                ) && 
                (
                    this.DueTime == input.DueTime ||
                    (this.DueTime != null &&
                    this.DueTime.Equals(input.DueTime))
                ) && 
                (
                    this.DueDateWorkflowCreated == input.DueDateWorkflowCreated ||
                    (this.DueDateWorkflowCreated != null &&
                    this.DueDateWorkflowCreated.Equals(input.DueDateWorkflowCreated))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.ContactNumber != null)
                    hashCode = hashCode * 59 + this.ContactNumber.GetHashCode();
                if (this.ScheduledForRepNumber != null)
                    hashCode = hashCode * 59 + this.ScheduledForRepNumber.GetHashCode();
                if (this.ScheduledByRepNumber != null)
                    hashCode = hashCode * 59 + this.ScheduledByRepNumber.GetHashCode();
                if (this.ServiceOrderNumber != null)
                    hashCode = hashCode * 59 + this.ServiceOrderNumber.GetHashCode();
                if (this.ServiceOrderTemplateNumber != null)
                    hashCode = hashCode * 59 + this.ServiceOrderTemplateNumber.GetHashCode();
                if (this.QuoteNumber != null)
                    hashCode = hashCode * 59 + this.QuoteNumber.GetHashCode();
                if (this.OpportunityNumber != null)
                    hashCode = hashCode * 59 + this.OpportunityNumber.GetHashCode();
                if (this.ProjectNumber != null)
                    hashCode = hashCode * 59 + this.ProjectNumber.GetHashCode();
                if (this.ProjectPhaseNumber != null)
                    hashCode = hashCode * 59 + this.ProjectPhaseNumber.GetHashCode();
                if (this.ProjectSubPhaseAssignmentNumber != null)
                    hashCode = hashCode * 59 + this.ProjectSubPhaseAssignmentNumber.GetHashCode();
                if (this.StartDate != null)
                    hashCode = hashCode * 59 + this.StartDate.GetHashCode();
                if (this.StartTime != null)
                    hashCode = hashCode * 59 + this.StartTime.GetHashCode();
                if (this.WholeStart != null)
                    hashCode = hashCode * 59 + this.WholeStart.GetHashCode();
                if (this.EndDate != null)
                    hashCode = hashCode * 59 + this.EndDate.GetHashCode();
                if (this.EndTime != null)
                    hashCode = hashCode * 59 + this.EndTime.GetHashCode();
                if (this.WholeEnd != null)
                    hashCode = hashCode * 59 + this.WholeEnd.GetHashCode();
                if (this.Action != null)
                    hashCode = hashCode * 59 + this.Action.GetHashCode();
                if (this.ActionColor != null)
                    hashCode = hashCode * 59 + this.ActionColor.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.DateScheduled != null)
                    hashCode = hashCode * 59 + this.DateScheduled.GetHashCode();
                if (this.PriorityNumber != null)
                    hashCode = hashCode * 59 + this.PriorityNumber.GetHashCode();
                if (this.Priority != null)
                    hashCode = hashCode * 59 + this.Priority.GetHashCode();
                if (this.HasAlarm != null)
                    hashCode = hashCode * 59 + this.HasAlarm.GetHashCode();
                if (this.AlarmDateTime != null)
                    hashCode = hashCode * 59 + this.AlarmDateTime.GetHashCode();
                if (this.AlarmReminderQuantity != null)
                    hashCode = hashCode * 59 + this.AlarmReminderQuantity.GetHashCode();
                if (this.AlarmReminderInterval != null)
                    hashCode = hashCode * 59 + this.AlarmReminderInterval.GetHashCode();
                if (this.IsCompleted != null)
                    hashCode = hashCode * 59 + this.IsCompleted.GetHashCode();
                if (this.RecurringId != null)
                    hashCode = hashCode * 59 + this.RecurringId.GetHashCode();
                if (this.RecurringDescription != null)
                    hashCode = hashCode * 59 + this.RecurringDescription.GetHashCode();
                if (this.GroupId != null)
                    hashCode = hashCode * 59 + this.GroupId.GetHashCode();
                if (this.GroupAttendeeId != null)
                    hashCode = hashCode * 59 + this.GroupAttendeeId.GetHashCode();
                if (this.IsPrivate != null)
                    hashCode = hashCode * 59 + this.IsPrivate.GetHashCode();
                if (this.OutlookSyncDate != null)
                    hashCode = hashCode * 59 + this.OutlookSyncDate.GetHashCode();
                if (this.WaveFileName != null)
                    hashCode = hashCode * 59 + this.WaveFileName.GetHashCode();
                if (this.PalmRecordId != null)
                    hashCode = hashCode * 59 + this.PalmRecordId.GetHashCode();
                if (this.PalmIdentifier != null)
                    hashCode = hashCode * 59 + this.PalmIdentifier.GetHashCode();
                if (this.LastModified != null)
                    hashCode = hashCode * 59 + this.LastModified.GetHashCode();
                if (this.LastOutlookSyncDateTime != null)
                    hashCode = hashCode * 59 + this.LastOutlookSyncDateTime.GetHashCode();
                if (this.OutlookId != null)
                    hashCode = hashCode * 59 + this.OutlookId.GetHashCode();
                if (this.ResourceName != null)
                    hashCode = hashCode * 59 + this.ResourceName.GetHashCode();
                if (this.IsGlobalTask != null)
                    hashCode = hashCode * 59 + this.IsGlobalTask.GetHashCode();
                if (this.RUID != null)
                    hashCode = hashCode * 59 + this.RUID.GetHashCode();
                if (this.IsAppointment != null)
                    hashCode = hashCode * 59 + this.IsAppointment.GetHashCode();
                if (this.DoNotSync != null)
                    hashCode = hashCode * 59 + this.DoNotSync.GetHashCode();
                if (this.Subject != null)
                    hashCode = hashCode * 59 + this.Subject.GetHashCode();
                if (this.DateCreated != null)
                    hashCode = hashCode * 59 + this.DateCreated.GetHashCode();
                if (this.Location != null)
                    hashCode = hashCode * 59 + this.Location.GetHashCode();
                if (this.Organizer != null)
                    hashCode = hashCode * 59 + this.Organizer.GetHashCode();
                if (this.SortStartDateTime != null)
                    hashCode = hashCode * 59 + this.SortStartDateTime.GetHashCode();
                if (this.SortEndDateTime != null)
                    hashCode = hashCode * 59 + this.SortEndDateTime.GetHashCode();
                if (this.Age != null)
                    hashCode = hashCode * 59 + this.Age.GetHashCode();
                if (this.ExchangeHref != null)
                    hashCode = hashCode * 59 + this.ExchangeHref.GetHashCode();
                if (this.MobileDispatchWorkStatusId != null)
                    hashCode = hashCode * 59 + this.MobileDispatchWorkStatusId.GetHashCode();
                if (this.MobileDispatchWorkStatus != null)
                    hashCode = hashCode * 59 + this.MobileDispatchWorkStatus.GetHashCode();
                if (this.ItemID != null)
                    hashCode = hashCode * 59 + this.ItemID.GetHashCode();
                if (this.MasterItemID != null)
                    hashCode = hashCode * 59 + this.MasterItemID.GetHashCode();
                if (this.OriginalStartDate != null)
                    hashCode = hashCode * 59 + this.OriginalStartDate.GetHashCode();
                if (this.DueDate != null)
                    hashCode = hashCode * 59 + this.DueDate.GetHashCode();
                if (this.DueTime != null)
                    hashCode = hashCode * 59 + this.DueTime.GetHashCode();
                if (this.DueDateWorkflowCreated != null)
                    hashCode = hashCode * 59 + this.DueDateWorkflowCreated.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
