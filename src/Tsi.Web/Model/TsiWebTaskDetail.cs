/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebTaskDetail
    /// </summary>
    [DataContract]
    public partial class TsiWebTaskDetail :  IEquatable<TsiWebTaskDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebTaskDetail" /> class.
        /// </summary>
        /// <param name="taskNumber">taskNumber.</param>
        /// <param name="task">task.</param>
        /// <param name="account">account.</param>
        /// <param name="contact">contact.</param>
        /// <param name="scheduledForRep">scheduledForRep.</param>
        /// <param name="scheduledByRep">scheduledByRep.</param>
        /// <param name="projectName">projectName.</param>
        /// <param name="projectPhase">projectPhase.</param>
        /// <param name="projectSubPhase">projectSubPhase.</param>
        /// <param name="serviceOrderDescription">serviceOrderDescription.</param>
        /// <param name="quoteDescription">quoteDescription.</param>
        /// <param name="opportunityName">opportunityName.</param>
        /// <param name="taskChecklist">taskChecklist.</param>
        /// <param name="customFields">customFields.</param>
        public TsiWebTaskDetail(int? taskNumber = default(int?), TsiWebTask task = default(TsiWebTask), TsiWebAccount account = default(TsiWebAccount), TsiWebPerson contact = default(TsiWebPerson), TsiWebPerson scheduledForRep = default(TsiWebPerson), TsiWebPerson scheduledByRep = default(TsiWebPerson), string projectName = default(string), string projectPhase = default(string), string projectSubPhase = default(string), string serviceOrderDescription = default(string), string quoteDescription = default(string), string opportunityName = default(string), List<TsiWebTaskChecklistItem> taskChecklist = default(List<TsiWebTaskChecklistItem>), List<TsiWebCustomField> customFields = default(List<TsiWebCustomField>))
        {
            this.TaskNumber = taskNumber;
            this.Task = task;
            this.Account = account;
            this.Contact = contact;
            this.ScheduledForRep = scheduledForRep;
            this.ScheduledByRep = scheduledByRep;
            this.ProjectName = projectName;
            this.ProjectPhase = projectPhase;
            this.ProjectSubPhase = projectSubPhase;
            this.ServiceOrderDescription = serviceOrderDescription;
            this.QuoteDescription = quoteDescription;
            this.OpportunityName = opportunityName;
            this.TaskChecklist = taskChecklist;
            this.CustomFields = customFields;
        }
        
        /// <summary>
        /// Gets or Sets TaskNumber
        /// </summary>
        [DataMember(Name="TaskNumber", EmitDefaultValue=false)]
        public int? TaskNumber { get; set; }

        /// <summary>
        /// Gets or Sets Task
        /// </summary>
        [DataMember(Name="Task", EmitDefaultValue=false)]
        public TsiWebTask Task { get; set; }

        /// <summary>
        /// Gets or Sets Account
        /// </summary>
        [DataMember(Name="Account", EmitDefaultValue=false)]
        public TsiWebAccount Account { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name="Contact", EmitDefaultValue=false)]
        public TsiWebPerson Contact { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledForRep
        /// </summary>
        [DataMember(Name="ScheduledForRep", EmitDefaultValue=false)]
        public TsiWebPerson ScheduledForRep { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledByRep
        /// </summary>
        [DataMember(Name="ScheduledByRep", EmitDefaultValue=false)]
        public TsiWebPerson ScheduledByRep { get; set; }

        /// <summary>
        /// Gets or Sets ProjectName
        /// </summary>
        [DataMember(Name="ProjectName", EmitDefaultValue=false)]
        public string ProjectName { get; set; }

        /// <summary>
        /// Gets or Sets ProjectPhase
        /// </summary>
        [DataMember(Name="ProjectPhase", EmitDefaultValue=false)]
        public string ProjectPhase { get; set; }

        /// <summary>
        /// Gets or Sets ProjectSubPhase
        /// </summary>
        [DataMember(Name="ProjectSubPhase", EmitDefaultValue=false)]
        public string ProjectSubPhase { get; set; }

        /// <summary>
        /// Gets or Sets ServiceOrderDescription
        /// </summary>
        [DataMember(Name="ServiceOrderDescription", EmitDefaultValue=false)]
        public string ServiceOrderDescription { get; set; }

        /// <summary>
        /// Gets or Sets QuoteDescription
        /// </summary>
        [DataMember(Name="QuoteDescription", EmitDefaultValue=false)]
        public string QuoteDescription { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityName
        /// </summary>
        [DataMember(Name="OpportunityName", EmitDefaultValue=false)]
        public string OpportunityName { get; set; }

        /// <summary>
        /// Gets or Sets TaskChecklist
        /// </summary>
        [DataMember(Name="TaskChecklist", EmitDefaultValue=false)]
        public List<TsiWebTaskChecklistItem> TaskChecklist { get; set; }

        /// <summary>
        /// Gets or Sets CustomFields
        /// </summary>
        [DataMember(Name="CustomFields", EmitDefaultValue=false)]
        public List<TsiWebCustomField> CustomFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebTaskDetail {\n");
            sb.Append("  TaskNumber: ").Append(TaskNumber).Append("\n");
            sb.Append("  Task: ").Append(Task).Append("\n");
            sb.Append("  Account: ").Append(Account).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  ScheduledForRep: ").Append(ScheduledForRep).Append("\n");
            sb.Append("  ScheduledByRep: ").Append(ScheduledByRep).Append("\n");
            sb.Append("  ProjectName: ").Append(ProjectName).Append("\n");
            sb.Append("  ProjectPhase: ").Append(ProjectPhase).Append("\n");
            sb.Append("  ProjectSubPhase: ").Append(ProjectSubPhase).Append("\n");
            sb.Append("  ServiceOrderDescription: ").Append(ServiceOrderDescription).Append("\n");
            sb.Append("  QuoteDescription: ").Append(QuoteDescription).Append("\n");
            sb.Append("  OpportunityName: ").Append(OpportunityName).Append("\n");
            sb.Append("  TaskChecklist: ").Append(TaskChecklist).Append("\n");
            sb.Append("  CustomFields: ").Append(CustomFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebTaskDetail);
        }

        /// <summary>
        /// Returns true if TsiWebTaskDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebTaskDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebTaskDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TaskNumber == input.TaskNumber ||
                    (this.TaskNumber != null &&
                    this.TaskNumber.Equals(input.TaskNumber))
                ) && 
                (
                    this.Task == input.Task ||
                    (this.Task != null &&
                    this.Task.Equals(input.Task))
                ) && 
                (
                    this.Account == input.Account ||
                    (this.Account != null &&
                    this.Account.Equals(input.Account))
                ) && 
                (
                    this.Contact == input.Contact ||
                    (this.Contact != null &&
                    this.Contact.Equals(input.Contact))
                ) && 
                (
                    this.ScheduledForRep == input.ScheduledForRep ||
                    (this.ScheduledForRep != null &&
                    this.ScheduledForRep.Equals(input.ScheduledForRep))
                ) && 
                (
                    this.ScheduledByRep == input.ScheduledByRep ||
                    (this.ScheduledByRep != null &&
                    this.ScheduledByRep.Equals(input.ScheduledByRep))
                ) && 
                (
                    this.ProjectName == input.ProjectName ||
                    (this.ProjectName != null &&
                    this.ProjectName.Equals(input.ProjectName))
                ) && 
                (
                    this.ProjectPhase == input.ProjectPhase ||
                    (this.ProjectPhase != null &&
                    this.ProjectPhase.Equals(input.ProjectPhase))
                ) && 
                (
                    this.ProjectSubPhase == input.ProjectSubPhase ||
                    (this.ProjectSubPhase != null &&
                    this.ProjectSubPhase.Equals(input.ProjectSubPhase))
                ) && 
                (
                    this.ServiceOrderDescription == input.ServiceOrderDescription ||
                    (this.ServiceOrderDescription != null &&
                    this.ServiceOrderDescription.Equals(input.ServiceOrderDescription))
                ) && 
                (
                    this.QuoteDescription == input.QuoteDescription ||
                    (this.QuoteDescription != null &&
                    this.QuoteDescription.Equals(input.QuoteDescription))
                ) && 
                (
                    this.OpportunityName == input.OpportunityName ||
                    (this.OpportunityName != null &&
                    this.OpportunityName.Equals(input.OpportunityName))
                ) && 
                (
                    this.TaskChecklist == input.TaskChecklist ||
                    this.TaskChecklist != null &&
                    this.TaskChecklist.SequenceEqual(input.TaskChecklist)
                ) && 
                (
                    this.CustomFields == input.CustomFields ||
                    this.CustomFields != null &&
                    this.CustomFields.SequenceEqual(input.CustomFields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TaskNumber != null)
                    hashCode = hashCode * 59 + this.TaskNumber.GetHashCode();
                if (this.Task != null)
                    hashCode = hashCode * 59 + this.Task.GetHashCode();
                if (this.Account != null)
                    hashCode = hashCode * 59 + this.Account.GetHashCode();
                if (this.Contact != null)
                    hashCode = hashCode * 59 + this.Contact.GetHashCode();
                if (this.ScheduledForRep != null)
                    hashCode = hashCode * 59 + this.ScheduledForRep.GetHashCode();
                if (this.ScheduledByRep != null)
                    hashCode = hashCode * 59 + this.ScheduledByRep.GetHashCode();
                if (this.ProjectName != null)
                    hashCode = hashCode * 59 + this.ProjectName.GetHashCode();
                if (this.ProjectPhase != null)
                    hashCode = hashCode * 59 + this.ProjectPhase.GetHashCode();
                if (this.ProjectSubPhase != null)
                    hashCode = hashCode * 59 + this.ProjectSubPhase.GetHashCode();
                if (this.ServiceOrderDescription != null)
                    hashCode = hashCode * 59 + this.ServiceOrderDescription.GetHashCode();
                if (this.QuoteDescription != null)
                    hashCode = hashCode * 59 + this.QuoteDescription.GetHashCode();
                if (this.OpportunityName != null)
                    hashCode = hashCode * 59 + this.OpportunityName.GetHashCode();
                if (this.TaskChecklist != null)
                    hashCode = hashCode * 59 + this.TaskChecklist.GetHashCode();
                if (this.CustomFields != null)
                    hashCode = hashCode * 59 + this.CustomFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
