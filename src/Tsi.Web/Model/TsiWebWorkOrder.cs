/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebWorkOrder
    /// </summary>
    [DataContract]
    public partial class TsiWebWorkOrder :  IEquatable<TsiWebWorkOrder>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebWorkOrder" /> class.
        /// </summary>
        /// <param name="workOrderNumber">workOrderNumber.</param>
        /// <param name="workOrderClosed">workOrderClosed.</param>
        /// <param name="workOrderDate">workOrderDate.</param>
        /// <param name="workOrderStatus">workOrderStatus.</param>
        /// <param name="stagingLocation">stagingLocation.</param>
        /// <param name="stagingBin">stagingBin.</param>
        /// <param name="quoteNumber">quoteNumber.</param>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="projectNumber">projectNumber.</param>
        /// <param name="projectPhaseNumber">projectPhaseNumber.</param>
        /// <param name="billTo">billTo.</param>
        /// <param name="billingComment">billingComment.</param>
        /// <param name="payMethodId">payMethodId.</param>
        /// <param name="terms">terms.</param>
        /// <param name="paymentMethod">paymentMethod.</param>
        /// <param name="invoiceNumber">invoiceNumber.</param>
        /// <param name="invoiceDate">invoiceDate.</param>
        /// <param name="shipTo">shipTo.</param>
        /// <param name="packingInstruction">packingInstruction.</param>
        /// <param name="shipper">shipper.</param>
        /// <param name="shippingMethod">shippingMethod.</param>
        /// <param name="shipperPhoneNumber">shipperPhoneNumber.</param>
        /// <param name="trackingNumber">trackingNumber.</param>
        /// <param name="shipDate">shipDate.</param>
        /// <param name="shippingInstruction">shippingInstruction.</param>
        /// <param name="internalComment">internalComment.</param>
        /// <param name="comment">comment.</param>
        /// <param name="numberOfPurchaseOrders">numberOfPurchaseOrders.</param>
        public TsiWebWorkOrder(int? workOrderNumber = default(int?), bool? workOrderClosed = default(bool?), DateTime? workOrderDate = default(DateTime?), string workOrderStatus = default(string), string stagingLocation = default(string), string stagingBin = default(string), int? quoteNumber = default(int?), int? accountNumber = default(int?), int? projectNumber = default(int?), int? projectPhaseNumber = default(int?), TsiWebAlternateAddress billTo = default(TsiWebAlternateAddress), string billingComment = default(string), int? payMethodId = default(int?), string terms = default(string), string paymentMethod = default(string), int? invoiceNumber = default(int?), DateTime? invoiceDate = default(DateTime?), TsiWebAlternateAddress shipTo = default(TsiWebAlternateAddress), string packingInstruction = default(string), string shipper = default(string), string shippingMethod = default(string), string shipperPhoneNumber = default(string), string trackingNumber = default(string), DateTime? shipDate = default(DateTime?), string shippingInstruction = default(string), string internalComment = default(string), string comment = default(string), int? numberOfPurchaseOrders = default(int?))
        {
            this.WorkOrderNumber = workOrderNumber;
            this.WorkOrderClosed = workOrderClosed;
            this.WorkOrderDate = workOrderDate;
            this.WorkOrderStatus = workOrderStatus;
            this.StagingLocation = stagingLocation;
            this.StagingBin = stagingBin;
            this.QuoteNumber = quoteNumber;
            this.AccountNumber = accountNumber;
            this.ProjectNumber = projectNumber;
            this.ProjectPhaseNumber = projectPhaseNumber;
            this.BillTo = billTo;
            this.BillingComment = billingComment;
            this.PayMethodId = payMethodId;
            this.Terms = terms;
            this.PaymentMethod = paymentMethod;
            this.InvoiceNumber = invoiceNumber;
            this.InvoiceDate = invoiceDate;
            this.ShipTo = shipTo;
            this.PackingInstruction = packingInstruction;
            this.Shipper = shipper;
            this.ShippingMethod = shippingMethod;
            this.ShipperPhoneNumber = shipperPhoneNumber;
            this.TrackingNumber = trackingNumber;
            this.ShipDate = shipDate;
            this.ShippingInstruction = shippingInstruction;
            this.InternalComment = internalComment;
            this.Comment = comment;
            this.NumberOfPurchaseOrders = numberOfPurchaseOrders;
        }
        
        /// <summary>
        /// Gets or Sets WorkOrderNumber
        /// </summary>
        [DataMember(Name="WorkOrderNumber", EmitDefaultValue=false)]
        public int? WorkOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets WorkOrderClosed
        /// </summary>
        [DataMember(Name="WorkOrderClosed", EmitDefaultValue=false)]
        public bool? WorkOrderClosed { get; set; }

        /// <summary>
        /// Gets or Sets WorkOrderDate
        /// </summary>
        [DataMember(Name="WorkOrderDate", EmitDefaultValue=false)]
        public DateTime? WorkOrderDate { get; set; }

        /// <summary>
        /// Gets or Sets WorkOrderStatus
        /// </summary>
        [DataMember(Name="WorkOrderStatus", EmitDefaultValue=false)]
        public string WorkOrderStatus { get; set; }

        /// <summary>
        /// Gets or Sets StagingLocation
        /// </summary>
        [DataMember(Name="StagingLocation", EmitDefaultValue=false)]
        public string StagingLocation { get; set; }

        /// <summary>
        /// Gets or Sets StagingBin
        /// </summary>
        [DataMember(Name="StagingBin", EmitDefaultValue=false)]
        public string StagingBin { get; set; }

        /// <summary>
        /// Gets or Sets QuoteNumber
        /// </summary>
        [DataMember(Name="QuoteNumber", EmitDefaultValue=false)]
        public int? QuoteNumber { get; set; }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name="AccountNumber", EmitDefaultValue=false)]
        public int? AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectNumber
        /// </summary>
        [DataMember(Name="ProjectNumber", EmitDefaultValue=false)]
        public int? ProjectNumber { get; set; }

        /// <summary>
        /// Gets or Sets ProjectPhaseNumber
        /// </summary>
        [DataMember(Name="ProjectPhaseNumber", EmitDefaultValue=false)]
        public int? ProjectPhaseNumber { get; set; }

        /// <summary>
        /// Gets or Sets BillTo
        /// </summary>
        [DataMember(Name="BillTo", EmitDefaultValue=false)]
        public TsiWebAlternateAddress BillTo { get; set; }

        /// <summary>
        /// Gets or Sets BillingComment
        /// </summary>
        [DataMember(Name="BillingComment", EmitDefaultValue=false)]
        public string BillingComment { get; set; }

        /// <summary>
        /// Gets or Sets PayMethodId
        /// </summary>
        [DataMember(Name="PayMethodId", EmitDefaultValue=false)]
        public int? PayMethodId { get; set; }

        /// <summary>
        /// Gets or Sets Terms
        /// </summary>
        [DataMember(Name="Terms", EmitDefaultValue=false)]
        public string Terms { get; set; }

        /// <summary>
        /// Gets or Sets PaymentMethod
        /// </summary>
        [DataMember(Name="PaymentMethod", EmitDefaultValue=false)]
        public string PaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceNumber
        /// </summary>
        [DataMember(Name="InvoiceNumber", EmitDefaultValue=false)]
        public int? InvoiceNumber { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceDate
        /// </summary>
        [DataMember(Name="InvoiceDate", EmitDefaultValue=false)]
        public DateTime? InvoiceDate { get; set; }

        /// <summary>
        /// Gets or Sets ShipTo
        /// </summary>
        [DataMember(Name="ShipTo", EmitDefaultValue=false)]
        public TsiWebAlternateAddress ShipTo { get; set; }

        /// <summary>
        /// Gets or Sets PackingInstruction
        /// </summary>
        [DataMember(Name="PackingInstruction", EmitDefaultValue=false)]
        public string PackingInstruction { get; set; }

        /// <summary>
        /// Gets or Sets Shipper
        /// </summary>
        [DataMember(Name="Shipper", EmitDefaultValue=false)]
        public string Shipper { get; set; }

        /// <summary>
        /// Gets or Sets ShippingMethod
        /// </summary>
        [DataMember(Name="ShippingMethod", EmitDefaultValue=false)]
        public string ShippingMethod { get; set; }

        /// <summary>
        /// Gets or Sets ShipperPhoneNumber
        /// </summary>
        [DataMember(Name="ShipperPhoneNumber", EmitDefaultValue=false)]
        public string ShipperPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets TrackingNumber
        /// </summary>
        [DataMember(Name="TrackingNumber", EmitDefaultValue=false)]
        public string TrackingNumber { get; set; }

        /// <summary>
        /// Gets or Sets ShipDate
        /// </summary>
        [DataMember(Name="ShipDate", EmitDefaultValue=false)]
        public DateTime? ShipDate { get; set; }

        /// <summary>
        /// Gets or Sets ShippingInstruction
        /// </summary>
        [DataMember(Name="ShippingInstruction", EmitDefaultValue=false)]
        public string ShippingInstruction { get; set; }

        /// <summary>
        /// Gets or Sets InternalComment
        /// </summary>
        [DataMember(Name="InternalComment", EmitDefaultValue=false)]
        public string InternalComment { get; set; }

        /// <summary>
        /// Gets or Sets Comment
        /// </summary>
        [DataMember(Name="Comment", EmitDefaultValue=false)]
        public string Comment { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfPurchaseOrders
        /// </summary>
        [DataMember(Name="NumberOfPurchaseOrders", EmitDefaultValue=false)]
        public int? NumberOfPurchaseOrders { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebWorkOrder {\n");
            sb.Append("  WorkOrderNumber: ").Append(WorkOrderNumber).Append("\n");
            sb.Append("  WorkOrderClosed: ").Append(WorkOrderClosed).Append("\n");
            sb.Append("  WorkOrderDate: ").Append(WorkOrderDate).Append("\n");
            sb.Append("  WorkOrderStatus: ").Append(WorkOrderStatus).Append("\n");
            sb.Append("  StagingLocation: ").Append(StagingLocation).Append("\n");
            sb.Append("  StagingBin: ").Append(StagingBin).Append("\n");
            sb.Append("  QuoteNumber: ").Append(QuoteNumber).Append("\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  ProjectNumber: ").Append(ProjectNumber).Append("\n");
            sb.Append("  ProjectPhaseNumber: ").Append(ProjectPhaseNumber).Append("\n");
            sb.Append("  BillTo: ").Append(BillTo).Append("\n");
            sb.Append("  BillingComment: ").Append(BillingComment).Append("\n");
            sb.Append("  PayMethodId: ").Append(PayMethodId).Append("\n");
            sb.Append("  Terms: ").Append(Terms).Append("\n");
            sb.Append("  PaymentMethod: ").Append(PaymentMethod).Append("\n");
            sb.Append("  InvoiceNumber: ").Append(InvoiceNumber).Append("\n");
            sb.Append("  InvoiceDate: ").Append(InvoiceDate).Append("\n");
            sb.Append("  ShipTo: ").Append(ShipTo).Append("\n");
            sb.Append("  PackingInstruction: ").Append(PackingInstruction).Append("\n");
            sb.Append("  Shipper: ").Append(Shipper).Append("\n");
            sb.Append("  ShippingMethod: ").Append(ShippingMethod).Append("\n");
            sb.Append("  ShipperPhoneNumber: ").Append(ShipperPhoneNumber).Append("\n");
            sb.Append("  TrackingNumber: ").Append(TrackingNumber).Append("\n");
            sb.Append("  ShipDate: ").Append(ShipDate).Append("\n");
            sb.Append("  ShippingInstruction: ").Append(ShippingInstruction).Append("\n");
            sb.Append("  InternalComment: ").Append(InternalComment).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  NumberOfPurchaseOrders: ").Append(NumberOfPurchaseOrders).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebWorkOrder);
        }

        /// <summary>
        /// Returns true if TsiWebWorkOrder instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebWorkOrder to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebWorkOrder input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WorkOrderNumber == input.WorkOrderNumber ||
                    (this.WorkOrderNumber != null &&
                    this.WorkOrderNumber.Equals(input.WorkOrderNumber))
                ) && 
                (
                    this.WorkOrderClosed == input.WorkOrderClosed ||
                    (this.WorkOrderClosed != null &&
                    this.WorkOrderClosed.Equals(input.WorkOrderClosed))
                ) && 
                (
                    this.WorkOrderDate == input.WorkOrderDate ||
                    (this.WorkOrderDate != null &&
                    this.WorkOrderDate.Equals(input.WorkOrderDate))
                ) && 
                (
                    this.WorkOrderStatus == input.WorkOrderStatus ||
                    (this.WorkOrderStatus != null &&
                    this.WorkOrderStatus.Equals(input.WorkOrderStatus))
                ) && 
                (
                    this.StagingLocation == input.StagingLocation ||
                    (this.StagingLocation != null &&
                    this.StagingLocation.Equals(input.StagingLocation))
                ) && 
                (
                    this.StagingBin == input.StagingBin ||
                    (this.StagingBin != null &&
                    this.StagingBin.Equals(input.StagingBin))
                ) && 
                (
                    this.QuoteNumber == input.QuoteNumber ||
                    (this.QuoteNumber != null &&
                    this.QuoteNumber.Equals(input.QuoteNumber))
                ) && 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.ProjectNumber == input.ProjectNumber ||
                    (this.ProjectNumber != null &&
                    this.ProjectNumber.Equals(input.ProjectNumber))
                ) && 
                (
                    this.ProjectPhaseNumber == input.ProjectPhaseNumber ||
                    (this.ProjectPhaseNumber != null &&
                    this.ProjectPhaseNumber.Equals(input.ProjectPhaseNumber))
                ) && 
                (
                    this.BillTo == input.BillTo ||
                    (this.BillTo != null &&
                    this.BillTo.Equals(input.BillTo))
                ) && 
                (
                    this.BillingComment == input.BillingComment ||
                    (this.BillingComment != null &&
                    this.BillingComment.Equals(input.BillingComment))
                ) && 
                (
                    this.PayMethodId == input.PayMethodId ||
                    (this.PayMethodId != null &&
                    this.PayMethodId.Equals(input.PayMethodId))
                ) && 
                (
                    this.Terms == input.Terms ||
                    (this.Terms != null &&
                    this.Terms.Equals(input.Terms))
                ) && 
                (
                    this.PaymentMethod == input.PaymentMethod ||
                    (this.PaymentMethod != null &&
                    this.PaymentMethod.Equals(input.PaymentMethod))
                ) && 
                (
                    this.InvoiceNumber == input.InvoiceNumber ||
                    (this.InvoiceNumber != null &&
                    this.InvoiceNumber.Equals(input.InvoiceNumber))
                ) && 
                (
                    this.InvoiceDate == input.InvoiceDate ||
                    (this.InvoiceDate != null &&
                    this.InvoiceDate.Equals(input.InvoiceDate))
                ) && 
                (
                    this.ShipTo == input.ShipTo ||
                    (this.ShipTo != null &&
                    this.ShipTo.Equals(input.ShipTo))
                ) && 
                (
                    this.PackingInstruction == input.PackingInstruction ||
                    (this.PackingInstruction != null &&
                    this.PackingInstruction.Equals(input.PackingInstruction))
                ) && 
                (
                    this.Shipper == input.Shipper ||
                    (this.Shipper != null &&
                    this.Shipper.Equals(input.Shipper))
                ) && 
                (
                    this.ShippingMethod == input.ShippingMethod ||
                    (this.ShippingMethod != null &&
                    this.ShippingMethod.Equals(input.ShippingMethod))
                ) && 
                (
                    this.ShipperPhoneNumber == input.ShipperPhoneNumber ||
                    (this.ShipperPhoneNumber != null &&
                    this.ShipperPhoneNumber.Equals(input.ShipperPhoneNumber))
                ) && 
                (
                    this.TrackingNumber == input.TrackingNumber ||
                    (this.TrackingNumber != null &&
                    this.TrackingNumber.Equals(input.TrackingNumber))
                ) && 
                (
                    this.ShipDate == input.ShipDate ||
                    (this.ShipDate != null &&
                    this.ShipDate.Equals(input.ShipDate))
                ) && 
                (
                    this.ShippingInstruction == input.ShippingInstruction ||
                    (this.ShippingInstruction != null &&
                    this.ShippingInstruction.Equals(input.ShippingInstruction))
                ) && 
                (
                    this.InternalComment == input.InternalComment ||
                    (this.InternalComment != null &&
                    this.InternalComment.Equals(input.InternalComment))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.NumberOfPurchaseOrders == input.NumberOfPurchaseOrders ||
                    (this.NumberOfPurchaseOrders != null &&
                    this.NumberOfPurchaseOrders.Equals(input.NumberOfPurchaseOrders))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WorkOrderNumber != null)
                    hashCode = hashCode * 59 + this.WorkOrderNumber.GetHashCode();
                if (this.WorkOrderClosed != null)
                    hashCode = hashCode * 59 + this.WorkOrderClosed.GetHashCode();
                if (this.WorkOrderDate != null)
                    hashCode = hashCode * 59 + this.WorkOrderDate.GetHashCode();
                if (this.WorkOrderStatus != null)
                    hashCode = hashCode * 59 + this.WorkOrderStatus.GetHashCode();
                if (this.StagingLocation != null)
                    hashCode = hashCode * 59 + this.StagingLocation.GetHashCode();
                if (this.StagingBin != null)
                    hashCode = hashCode * 59 + this.StagingBin.GetHashCode();
                if (this.QuoteNumber != null)
                    hashCode = hashCode * 59 + this.QuoteNumber.GetHashCode();
                if (this.AccountNumber != null)
                    hashCode = hashCode * 59 + this.AccountNumber.GetHashCode();
                if (this.ProjectNumber != null)
                    hashCode = hashCode * 59 + this.ProjectNumber.GetHashCode();
                if (this.ProjectPhaseNumber != null)
                    hashCode = hashCode * 59 + this.ProjectPhaseNumber.GetHashCode();
                if (this.BillTo != null)
                    hashCode = hashCode * 59 + this.BillTo.GetHashCode();
                if (this.BillingComment != null)
                    hashCode = hashCode * 59 + this.BillingComment.GetHashCode();
                if (this.PayMethodId != null)
                    hashCode = hashCode * 59 + this.PayMethodId.GetHashCode();
                if (this.Terms != null)
                    hashCode = hashCode * 59 + this.Terms.GetHashCode();
                if (this.PaymentMethod != null)
                    hashCode = hashCode * 59 + this.PaymentMethod.GetHashCode();
                if (this.InvoiceNumber != null)
                    hashCode = hashCode * 59 + this.InvoiceNumber.GetHashCode();
                if (this.InvoiceDate != null)
                    hashCode = hashCode * 59 + this.InvoiceDate.GetHashCode();
                if (this.ShipTo != null)
                    hashCode = hashCode * 59 + this.ShipTo.GetHashCode();
                if (this.PackingInstruction != null)
                    hashCode = hashCode * 59 + this.PackingInstruction.GetHashCode();
                if (this.Shipper != null)
                    hashCode = hashCode * 59 + this.Shipper.GetHashCode();
                if (this.ShippingMethod != null)
                    hashCode = hashCode * 59 + this.ShippingMethod.GetHashCode();
                if (this.ShipperPhoneNumber != null)
                    hashCode = hashCode * 59 + this.ShipperPhoneNumber.GetHashCode();
                if (this.TrackingNumber != null)
                    hashCode = hashCode * 59 + this.TrackingNumber.GetHashCode();
                if (this.ShipDate != null)
                    hashCode = hashCode * 59 + this.ShipDate.GetHashCode();
                if (this.ShippingInstruction != null)
                    hashCode = hashCode * 59 + this.ShippingInstruction.GetHashCode();
                if (this.InternalComment != null)
                    hashCode = hashCode * 59 + this.InternalComment.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.NumberOfPurchaseOrders != null)
                    hashCode = hashCode * 59 + this.NumberOfPurchaseOrders.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
