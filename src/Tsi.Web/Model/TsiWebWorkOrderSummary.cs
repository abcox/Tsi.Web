/* 
 * Tigerpaw API Method Reference
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.2.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Tsi.Web.Client.SwaggerDateConverter;

namespace Tsi.Web.Model
{
    /// <summary>
    /// TsiWebWorkOrderSummary
    /// </summary>
    [DataContract]
    public partial class TsiWebWorkOrderSummary :  IEquatable<TsiWebWorkOrderSummary>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TsiWebWorkOrderSummary" /> class.
        /// </summary>
        /// <param name="workOrder">workOrder.</param>
        /// <param name="workOrderNumber">workOrderNumber.</param>
        /// <param name="details">details.</param>
        /// <param name="accountName">accountName.</param>
        /// <param name="quoteDescription">quoteDescription.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="faxNumber">faxNumber.</param>
        /// <param name="opportunityName">opportunityName.</param>
        /// <param name="projectDescription">projectDescription.</param>
        /// <param name="payMethodName">payMethodName.</param>
        /// <param name="projectPhase">projectPhase.</param>
        public TsiWebWorkOrderSummary(TsiWebWorkOrder workOrder = default(TsiWebWorkOrder), int? workOrderNumber = default(int?), int? details = default(int?), string accountName = default(string), string quoteDescription = default(string), string phoneNumber = default(string), string faxNumber = default(string), string opportunityName = default(string), string projectDescription = default(string), string payMethodName = default(string), string projectPhase = default(string))
        {
            this.WorkOrder = workOrder;
            this.WorkOrderNumber = workOrderNumber;
            this.Details = details;
            this.AccountName = accountName;
            this.QuoteDescription = quoteDescription;
            this.PhoneNumber = phoneNumber;
            this.FaxNumber = faxNumber;
            this.OpportunityName = opportunityName;
            this.ProjectDescription = projectDescription;
            this.PayMethodName = payMethodName;
            this.ProjectPhase = projectPhase;
        }
        
        /// <summary>
        /// Gets or Sets WorkOrder
        /// </summary>
        [DataMember(Name="WorkOrder", EmitDefaultValue=false)]
        public TsiWebWorkOrder WorkOrder { get; set; }

        /// <summary>
        /// Gets or Sets WorkOrderNumber
        /// </summary>
        [DataMember(Name="WorkOrderNumber", EmitDefaultValue=false)]
        public int? WorkOrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets Details
        /// </summary>
        [DataMember(Name="Details", EmitDefaultValue=false)]
        public int? Details { get; set; }

        /// <summary>
        /// Gets or Sets AccountName
        /// </summary>
        [DataMember(Name="AccountName", EmitDefaultValue=false)]
        public string AccountName { get; set; }

        /// <summary>
        /// Gets or Sets QuoteDescription
        /// </summary>
        [DataMember(Name="QuoteDescription", EmitDefaultValue=false)]
        public string QuoteDescription { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="PhoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets FaxNumber
        /// </summary>
        [DataMember(Name="FaxNumber", EmitDefaultValue=false)]
        public string FaxNumber { get; set; }

        /// <summary>
        /// Gets or Sets OpportunityName
        /// </summary>
        [DataMember(Name="OpportunityName", EmitDefaultValue=false)]
        public string OpportunityName { get; set; }

        /// <summary>
        /// Gets or Sets ProjectDescription
        /// </summary>
        [DataMember(Name="ProjectDescription", EmitDefaultValue=false)]
        public string ProjectDescription { get; set; }

        /// <summary>
        /// Gets or Sets PayMethodName
        /// </summary>
        [DataMember(Name="PayMethodName", EmitDefaultValue=false)]
        public string PayMethodName { get; set; }

        /// <summary>
        /// Gets or Sets ProjectPhase
        /// </summary>
        [DataMember(Name="ProjectPhase", EmitDefaultValue=false)]
        public string ProjectPhase { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TsiWebWorkOrderSummary {\n");
            sb.Append("  WorkOrder: ").Append(WorkOrder).Append("\n");
            sb.Append("  WorkOrderNumber: ").Append(WorkOrderNumber).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  AccountName: ").Append(AccountName).Append("\n");
            sb.Append("  QuoteDescription: ").Append(QuoteDescription).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  FaxNumber: ").Append(FaxNumber).Append("\n");
            sb.Append("  OpportunityName: ").Append(OpportunityName).Append("\n");
            sb.Append("  ProjectDescription: ").Append(ProjectDescription).Append("\n");
            sb.Append("  PayMethodName: ").Append(PayMethodName).Append("\n");
            sb.Append("  ProjectPhase: ").Append(ProjectPhase).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TsiWebWorkOrderSummary);
        }

        /// <summary>
        /// Returns true if TsiWebWorkOrderSummary instances are equal
        /// </summary>
        /// <param name="input">Instance of TsiWebWorkOrderSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TsiWebWorkOrderSummary input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WorkOrder == input.WorkOrder ||
                    (this.WorkOrder != null &&
                    this.WorkOrder.Equals(input.WorkOrder))
                ) && 
                (
                    this.WorkOrderNumber == input.WorkOrderNumber ||
                    (this.WorkOrderNumber != null &&
                    this.WorkOrderNumber.Equals(input.WorkOrderNumber))
                ) && 
                (
                    this.Details == input.Details ||
                    (this.Details != null &&
                    this.Details.Equals(input.Details))
                ) && 
                (
                    this.AccountName == input.AccountName ||
                    (this.AccountName != null &&
                    this.AccountName.Equals(input.AccountName))
                ) && 
                (
                    this.QuoteDescription == input.QuoteDescription ||
                    (this.QuoteDescription != null &&
                    this.QuoteDescription.Equals(input.QuoteDescription))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.FaxNumber == input.FaxNumber ||
                    (this.FaxNumber != null &&
                    this.FaxNumber.Equals(input.FaxNumber))
                ) && 
                (
                    this.OpportunityName == input.OpportunityName ||
                    (this.OpportunityName != null &&
                    this.OpportunityName.Equals(input.OpportunityName))
                ) && 
                (
                    this.ProjectDescription == input.ProjectDescription ||
                    (this.ProjectDescription != null &&
                    this.ProjectDescription.Equals(input.ProjectDescription))
                ) && 
                (
                    this.PayMethodName == input.PayMethodName ||
                    (this.PayMethodName != null &&
                    this.PayMethodName.Equals(input.PayMethodName))
                ) && 
                (
                    this.ProjectPhase == input.ProjectPhase ||
                    (this.ProjectPhase != null &&
                    this.ProjectPhase.Equals(input.ProjectPhase))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WorkOrder != null)
                    hashCode = hashCode * 59 + this.WorkOrder.GetHashCode();
                if (this.WorkOrderNumber != null)
                    hashCode = hashCode * 59 + this.WorkOrderNumber.GetHashCode();
                if (this.Details != null)
                    hashCode = hashCode * 59 + this.Details.GetHashCode();
                if (this.AccountName != null)
                    hashCode = hashCode * 59 + this.AccountName.GetHashCode();
                if (this.QuoteDescription != null)
                    hashCode = hashCode * 59 + this.QuoteDescription.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.FaxNumber != null)
                    hashCode = hashCode * 59 + this.FaxNumber.GetHashCode();
                if (this.OpportunityName != null)
                    hashCode = hashCode * 59 + this.OpportunityName.GetHashCode();
                if (this.ProjectDescription != null)
                    hashCode = hashCode * 59 + this.ProjectDescription.GetHashCode();
                if (this.PayMethodName != null)
                    hashCode = hashCode * 59 + this.PayMethodName.GetHashCode();
                if (this.ProjectPhase != null)
                    hashCode = hashCode * 59 + this.ProjectPhase.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
